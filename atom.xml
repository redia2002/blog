<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan Azure Identity Support Blog</title>
  
  <subtitle>日本マイクロソフトの Azure Active Directory と AD FS に関するサポート情報のブログです。</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://jpazureid.github.io/blog/"/>
  <updated>2020-03-05T03:14:38.285Z</updated>
  <id>https://jpazureid.github.io/blog/</id>
  
  <author>
    <name>Azure Identity Support Japan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Azure AD 条件付きアクセスを利用してセキュリティと生産性のバランスをとる 3 つの方法</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/3-ways-aad-ca-balances-security-and-productivity/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/3-ways-aad-ca-balances-security-and-productivity/</id>
    <published>2020-03-03T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.285Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は、 2020 年 2 月 10 日に Azure Active Directory Identity Blog に公開された記事 (Three ways Azure AD Conditional Access balances security and productivity) を翻訳したものです。原文は <a href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/three-ways-azure-ad-conditional-access-balances-security-and/ba-p/1144689" target="_blank" rel="noopener">こちら</a> より参照ください。</p></blockquote><p>こんにちは！</p><p>パートナー ブログ シリーズへようこそ。貴社では現在 ID と IAM (Identity and Access Management) のソリューションをお使いと思いますが、もしそれらがユーザーの生産性とセキュリティの適切なバランスを実現していないとお考えの場合は、この記事を読んでいただければと思います。今回は Content and Code 社のテクノロジー アーキテクチャ責任者である Ben Athawes 氏をお招きし、なぜ Ben 氏の顧客の多くが Azure Active Directory (Azure AD) 条件付きアクセスに切り替えを進めているのか、その理由についてお話するとともに、アプリとユーザーを Azure AD 条件付きアクセスに安全に移行する方法についてもアドバイスをいただきます。</p><h2 id="オンプレミスおよびクラウド-アプリを-Azure-AD-条件付きアクセスで保護するべき理由"><a href="#オンプレミスおよびクラウド-アプリを-Azure-AD-条件付きアクセスで保護するべき理由" class="headerlink" title="オンプレミスおよびクラウド アプリを Azure AD 条件付きアクセスで保護するべき理由"></a>オンプレミスおよびクラウド アプリを Azure AD 条件付きアクセスで保護するべき理由</h2><p>Ben Athawes 氏 (テクノロジーアー キテクチャ責任者、Content and Code 社) による寄稿</p><p>Content and Code 社は、数々の賞を受賞した Microsoft ゴールド パートナーであり、Microsoft 365 コンサルティングサービスに重点を置いた企業です。我々はロンドンに拠点を置き、お客様がクラウドにアプリケーションを安全に移行できるよう 10 年以上にわたり支援しています。</p><p>ここ数年、Azure AD を認証プロバイダーとして使用したいというお客様が非常に多くいらっしゃいます。この傾向は特に業界に限らず、金融サービス、法律、建設、市場調査、小売など、さまざまな分野で見られます。Azure AD には革新的な機能がいくつもありますが、特に Azure AD 条件付きアクセスがリリースされてから、この傾向が非常に強くなっています。</p><p>Office 365 サービスに条件付きアクセスが組み合わされることで生産性とセキュリティのバランスがもたらされ、お客様は今その他のアプリでも Azure AD を統合しようとしています。お客様は、Azure AD の条件付きアクセスを、オンプレミス アプリとクラウド アプリの両方の「入口」として考え始めています。</p><p>この投稿では、我々のお客様が Azure AD 条件付きアクセスを利用して Azure AD とアプリを統合する動機となった 3 つの理由をお話ししようと思います。また、アプリの認証を <a href="https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/overview" target="_blank" rel="noopener">条件付きアクセス</a> で保護された Azure AD に安全に移行するために概要となる手順をお伝えいたします。</p><h2 id="Azure-AD-条件付きアクセスを利用する-3-つの理由"><a href="#Azure-AD-条件付きアクセスを利用する-3-つの理由" class="headerlink" title="Azure AD 条件付きアクセスを利用する 3 つの理由"></a>Azure AD 条件付きアクセスを利用する 3 つの理由</h2><h3 id="1-ID-およびデバイス-ベースのアクセス-モデルが実現する"><a href="#1-ID-およびデバイス-ベースのアクセス-モデルが実現する" class="headerlink" title="1. ID およびデバイス ベースのアクセス モデルが実現する"></a>1. ID およびデバイス ベースのアクセス モデルが実現する</h3><p>Azure AD 条件付きアクセスが最初に登場した当初、ほとんどのお客様が企業ネットワークに接続されたデバイスはすべて信頼できると思い込んでいました。これらの企業ネットワーク内のデバイスは、ユーザー体験を可能な限りスムーズにするため、しばしば多要素認証 (MFA) などの制御から除外されていました。</p><p>近年、この「ネットワーク内は安全」というアクセス モデルを前提としているお客様があまり多くないことがわかりました。これは主に次の理由によると思います。</p><ul><li>ユーザーが私物のデバイスを信頼できるネットワークに接続しているなど物理ネットワークの統制が不足している、または信頼できるネットワークと信頼できないネットワークが同じパブリック IP アドレスを共有している状況にお客様が気づいた。</li><li>ハイブリッド Azure AD 参加や <a href="https://www.microsoft.com/en-us/microsoft-365/microsoft-endpoint-manager" target="_blank" rel="noopener">Microsoft エンドポイント マネージャー</a> の準拠などデバイス ベースの Azure AD 条件付きアクセス制御が成熟してきた。つまり、お客様の中で「信頼できる」デバイスの定義に、オペレーティング システムのバージョンや暗号化の有無、ウイルス対策などの要件が含まれるようになってきた。</li></ul><p>多くのお客様で採用されてている、この「ネットワーク内は安全で信頼できるという前提を捨てる」 (ゼロ トラスト) というアプローチは、ネットワーク境界ベースではなく、アイデンティティおよびデバイスをベースにしたアクセス モデルです。従来の境界制御のソリューションとは対照的に、Azure AD 条件付きアクセスを使用すると ID およびデバイスとの信頼性を確実に確立することがはるかに簡単になります。</p><h3 id="2-クラウド-アプリとオンプレミス-アプリの両方に一貫したサインイン体験を提供する"><a href="#2-クラウド-アプリとオンプレミス-アプリの両方に一貫したサインイン体験を提供する" class="headerlink" title="2. クラウド アプリとオンプレミス アプリの両方に一貫したサインイン体験を提供する"></a>2. クラウド アプリとオンプレミス アプリの両方に一貫したサインイン体験を提供する</h3><p>クラウドベースの SaaS アプリの保護に加えて、条件付きアクセス制御は、<a href="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/application-proxy" target="_blank" rel="noopener">Application Proxy</a> を介して Azure AD と統合されたオンプレミス アプリにも適用できます。このアプローチは、ユーザーがクラウド アプリとオンプレミス アプリの両方で一貫したサインイン体験を享受できるため、ユーザビリティの観点から非常に効果的です。</p><p>20,000 人を擁する建設会社の Kier Group は、Azure AD と Application Proxy、オンプレミスのイントラネットで動作する Microsoft SharePoint Server 2013 の組み合わせでこれを実現しました。</p><blockquote><p>Kier Group は以前より SharePoint Server 環境を外部に公開するために従来のオンプレミス リバース プロキシのソリューションに依存していましたが、このせいで Office 365 とオンプレミスの SharePoint を行ったり来たりする際に一貫性のないエクスペリエンスとなっていました。そこで、事前認証と MFA などの条件付きアクセス制御を活用した Azure AD App Proxy を展開することにより、イントラネットの SharePoint Server 2013 と Office 365 で一貫性のあるセキュアなエクスペリエンスが従業員に提供できました。また、複数のコネクターとコネクター グループを展開することで、高いレベルの可用性も確保できています。<br>－ Kier Group シニア テクニカル アーキテクト Mark Bentley 氏</p></blockquote><p>お客様は、Azure AD App Proxy に加えて、レガシー アプリ向けに “<a href="https://azure.microsoft.com/en-us/services/active-directory/sso/secure-hybrid-access/" target="_blank" rel="noopener">安全なハイブリッド アクセス</a>“ のアプローチを採用することで、ネットワーク セキュリティ ソリューションへの既存の投資を有効活用することもできます。マイクロソフトと様々なベンダーとの新しい統合機能により、お客様は、Kerberos、NTLM、リモート デスクトップ プロトコル (RDP)、LDAP、SSH、ヘッダー ベースおよびフォーム ベース認証などのレガシー認証をサポートするアプリへのアクセスを効率化したり標準化したりできます。</p><h3 id="3-データの流出を防ぎながらアクセスをシンプルにする"><a href="#3-データの流出を防ぎながらアクセスをシンプルにする" class="headerlink" title="3. データの流出を防ぎながらアクセスをシンプルにする"></a>3. データの流出を防ぎながらアクセスをシンプルにする</h3><p>セキュリティは重要な要件ですが、ユーザーにとって満足いくものである必要もあります。そのため、Azure AD 条件付きアクセスでは、信頼していないデバイスから SharePoint Online および Exchange Online への <a href="https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/controls#session-controls" target="_blank" rel="noopener">ブラウザーベースのアクセスを制限</a> し、ダウンロードや印刷、同期などのアクションをブロックすることが可能です。これは仕事用のメールを確認したいが、会社が管理するデバイスを保持していない人にとっては非常に便利です。</p><p>このアプローチは、Office 365 にも適用でき、さらには Microsoft Cloud App Security (MCAS) と密接に機能統合している <a href="https://docs.microsoft.com/en-us/cloud-app-security/proxy-intro-aad" target="_blank" rel="noopener">アプリの条件付きアクセス制御</a> を使用することで、現在急速に成長しているサードパーティ SaaS アプリにも拡張が可能です。MCAS は、クラウドでのアクセスのセキュリティを司る製品であり、Microsoft の Azure Information Protection を使用してコンテンツのダウンロードを保護する機能などを含んでいます。</p><h2 id="アプリを-Azure-AD-の条件付きアクセスに移行する手順"><a href="#アプリを-Azure-AD-の条件付きアクセスに移行する手順" class="headerlink" title="アプリを Azure AD の条件付きアクセスに移行する手順"></a>アプリを Azure AD の条件付きアクセスに移行する手順</h2><p>条件付きアクセスが貴社にとって適切なソリューションであることがわかったら、次は Azure AD への移行を具体的に計画していきましょう。アプリを安全に移行するには、系統立ったアプローチを取ることが重要です。 お客様に推奨する手順は次のとおりです。</p><ol><li><p>現在のアプリの ID プロバイダーおよび構成済みアプリ (AD FS の “証明書利用者信頼”) の棚卸をします。</p></li><li><p>アプリを Azure AD に移行する順序に優先順位を付けます。ビジネスの重要性、使用状況、今後どれほどの期間そのアプリを使うかなどを考慮して決めます。</p></li><li><p>各アプリについて以下のことを行います:</p><ol><li><p>現在のコントロールと構成を Azure AD にマッピングします。例えば、MFA、レガシー認証のブロック (Azure AD 条件付きアクセスを使用して実施可能)、クレーム変換 (Azure AD 要求変換ポリシーを使用して置換可能) などが挙げられます。Microsoft は、AD FS をご利用のお客様向けにこの手順を簡素化する <a href="https://github.com/AzureAD/Deployment-Plans/tree/master/ADFS%20to%20AzureAD%20App%20Migration" target="_blank" rel="noopener">移行準備スクリプト</a> を提供しています。</p></li><li><p>Azure AD にアプリを追加します。アプリがアプリ ギャラリー内に既に存在する場合は、シングル サインオンの方法などのプロパティが事前に組み込まれているため最も簡単に追加が可能です。もちろん、ギャラリー以外のアプリも追加いただけます。</p></li><li><p>必要な Azure AD の構成を行い、Azure AD 条件付きアクセスのコントロールを設定します。<a href="https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/concept-conditional-access-report-only" target="_blank" rel="noopener">レポート専用モード</a> を使用してさまざまなアクセスのシナリオをテストします。</p></li><li><p>Azure AD のシングル サインオンを構成してテストします。マイクロソフトは、<a href="https://docs.microsoft.com/en-us/azure/active-directory/saas-apps/" target="_blank" rel="noopener">一連のチュートリアル</a> を作成しておりますので活用ください。</p><blockquote><p>特定のアプリでは ID プロバイダーを一斉に切り替えること (Azure AD への “カットオーバー”) が必要です。このステップは通常はピーク時を避けて実行します。SharePoint Server などの他のアプリでは、ID プロバイダーを細かい粒度で構成できるため、Azure AD との統合を最初にテスト可能です。</p></blockquote><blockquote><p>SaaS アプリ ベンダーのサポートを得ることをお勧めします。もしかしたら、他のお客様が既にアプリを Azure AD と統合しており、ベンダーに事例がある可能性があります。</p></blockquote></li><li><p>すべてのアプリについて上記の手順を繰り返し実行します。</p></li><li><p>他の ID プロバイダーが不要になったら、それらの廃止を検討ください。</p></li></ol></li></ol><p>マイクロソフトは、上記の手順の一部を詳細に説明する独自の <a href="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/migration-resources" target="_blank" rel="noopener">ドキュメント</a> を提供しています。</p><h2 id="より詳細をご要望の場合"><a href="#より詳細をご要望の場合" class="headerlink" title="より詳細をご要望の場合"></a>より詳細をご要望の場合</h2><p>我々のお客様からの成功事例をお読みいただき、本記事が Azure AD 条件付きアクセスの採用を検討するきっかけになれば幸いです。より詳細については、<a href="https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/overview" target="_blank" rel="noopener">Azure AD 条件付きアクセス</a> または <a href="https://www.microsoft.com/en-us/microsoft-365/enterprise-mobility-security/microsoft-intune" target="_blank" rel="noopener">Microsoft Intune</a> をご覧ください。また、興味がありましたら、Edgile 氏による <a href="https://techcommunity.microsoft.com/t5/Azure-Active-Directory-Identity/Develop-a-risk-management-strategy-for-your-Azure-AD-application/ba-p/566488" target="_blank" rel="noopener">アプリの移行のためのリスク管理戦略</a> のアドバイスもご覧ください。</p><p><em>マイクロソフト パートナー ネットワークに所属するメンバーと企業は、さまざまな業界の大小の企業と連携しています。この経験を通じ、パートナー ネットワークのメンバーは今日のセキュリティ専門家が直面する主要な課題ついて独自の知見を得ています。<a href="https://techcommunity.microsoft.com/t5/Azure-Active-Directory-Identity/bg-p/Identity/label-name/Customer%20%20%20Partner" target="_blank" rel="noopener">パートナー ブログ シリーズ</a> は、これらのセキュリティ トレンドをより広く社会に浸透させ、読者の皆様がすぐに行動できる知見やヒントを提供することを目的としています。我々のパートナーがどのようにしてアイデンティティを保護しているか、最新の知見を得るために毎月このページをチェックいただくか、次のブログが投稿されたときに通知を受けらっるよう <a href="https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=09213cdc-9f30-4e82-aa6f-9b6e8d82dab3&redirect_uri=https%3A%2F%2Ftechcommunity.microsoft.com%2Fauth%2Foauth2callback&response_type=code&state=https%3A%2F%2Ftechcommunity.microsoft.com%2Ft5%2FAzure-Active-Directory-Identity%2Fbg-p%2FIdentity%2Flabel-name%2FCustomer%2520%2520%2520Partner&scope=User.Read+openid+email+profile+offline_access" target="_blank" rel="noopener">シリーズをフォロー</a> ください。</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本記事は、 2020 年 2 月 10 日に Azure Active Directory Identity Blog に公開された記事 (Three ways Azure AD Conditional Access balances securi
      
    
    </summary>
    
    
    
      <category term="Conditional Access" scheme="https://jpazureid.github.io/blog/tags/Conditional-Access/"/>
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="Security" scheme="https://jpazureid.github.io/blog/tags/Security/"/>
    
      <category term="Zero Trust" scheme="https://jpazureid.github.io/blog/tags/Zero-Trust/"/>
    
  </entry>
  
  <entry>
    <title>AADSTS50107 The requested federation realm object &#39;xxx&#39; does not exist. (Issuer ID/Issuer URI と SupportMultipleDomain)</title>
    <link href="https://jpazureid.github.io/blog/active-directory-federation-service/adfs-AADSTS50107/"/>
    <id>https://jpazureid.github.io/blog/active-directory-federation-service/adfs-AADSTS50107/</id>
    <published>2020-02-19T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.145Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identitiy サポートチームの竹村です。<br>今回は、多くのお客様からお問合せをいただく AADSTS50107 のエラーについて、その意味や対応方法をご紹介します。</p><h2 id="1-ADSTS50107-と-Issuer-ID、-Issuer-URI"><a href="#1-ADSTS50107-と-Issuer-ID、-Issuer-URI" class="headerlink" title="1. ADSTS50107  と  Issuer ID、 Issuer URI"></a>1. ADSTS50107  と  Issuer ID、 Issuer URI</h2><p>最初に、AADSTS50107 のエラーの内容と、その背景にある Issuer ID、および Issuer URI と呼ばれるものについて説明します。<br><br><br><br>Issuer ID は、Azure AD と連携する IdP (例えば AD FS など) が発行するクレームです。<br>AD FS (WS-Federation) の場合は、具体的には以下のクレームになります。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid</span><br></pre></td></tr></table></figure><p>一方、Azure AD のカスタムドメインには、フェデレーションの設定を行う際に Issuer URI というものが設定されます。<br>AD FS の場合、通常は  Convert-MsolDomainToFederated コマンドレットや、Update-MsolFederatedDomain コマンドレットを使用してフェデレーションの設定を行いますが、この Powershell の処理で Issuer URI が設定されます。<br><br><br><br>Azure AD でのフェデレーション認証の要件として、IdP が発行する Issuer ID が、認証されたユーザーのドメインに設定されている Issuer URI と合致している必要があります。<br>AADSTS50107 は、IdP が発行した Issuer ID と、Azure AD のカスタムドメインにセットされている Issuer URI とが、合致しなかったことを示すエラーです。<br></p><img src="/blog/active-directory-federation-service/adfs-AADSTS50107/adfs_AADSTS50107_01.png"> <p>上記のように、エラー画面には “realm object” と “does not exist.” の間に文字列が表示されますが、これが IdP が発行した Issuer ID になります。<br>そして、Azure AD のカスタムドメインには、ここに表示されている文字列の Issuer URI が存在していないことを示しています。<br>Azure AD のカスタムドメインに設定されている Issuer URI を確認するためには、Get-MsolDomainFederationSettings コマンドレットなどを使用します。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-MsolDomainFederationSettings -DomainName &quot;test.com&quot;</span><br></pre></td></tr></table></figure><p>上記コマンドを実行した結果の IssuerUri の値を確認してください。</p><h2 id="2-supportMultipleDomain-オプションについて"><a href="#2-supportMultipleDomain-オプションについて" class="headerlink" title="2. -supportMultipleDomain オプションについて"></a>2. -supportMultipleDomain オプションについて</h2><p>次に、AADSTS50107 のエラーと密接に関わり合う -supportMultipleDomain オプションについて説明します。<br>AD FS で Convert-MsolDomainToFederated コマンドレットや、Update-MsolFederatedDomain コマンドレットを使用してフェデレーションの設定を行う時に、-supportMultipleDomain というオプションを指定することがあります。<br>これは、1 つの AD FS ファームと、複数のカスタムドメインとの間でフェデレーションの設定を行う場合に必要となるオプションです。<br>この背景には、カスタムドメインに設定する Issuer URI は、重複が許可されず必ず一意にする必要がある、という Azure AD の要件があります。<br><br><br><br>AD FS と Azure AD のカスタムドメインが 1 対 1 の場合には、-supportMultipleDomain オプションは必要ありません。<br>-supportMultipleDomain オプションを指定しない場合、 Convert-MsolDomainToFederated コマンドレットや、Update-MsolFederatedDomain コマンドレットは、AD FS の識別子 (<code>http://&lt;フェデレーションサービス名&gt;/services/trust</code>) を Issuer URI としてカスタムドメインに設定します。<br><br>AD FS 側では Issuer URI を発行するクレームルールは作成されません。<br>ルールがない場合、AD FS は既定で Issuer ID として AD FS の識別子 (<code>http://&lt;フェデレーションサービス名&gt;/services/trust</code>)  をクレームにセットするため、カスタムドメイン側の Issuer URI と合致し、要件を満たすことができます。<br><br><br><br>-supportMultipleDomain オプションを指定すると、Azure AD のカスタムドメイン側には、<code>http://&lt;カスタムドメイン&gt;/services/trust/</code>  という値が Issuer URI にセットされます。<br>例えば、a.com と b.com という 2 つのドメインに対して、-supportMultipleDomain オプションを指定して 1 つの AD FS ファームとフェデレーションを構成すると、それぞれのドメインには以下の Issuer URI がセットされます。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a.com</span><br><span class="line">http://a.com/services/trust/</span><br><span class="line"></span><br><span class="line">b.com</span><br><span class="line">http://b.com/services/trust/</span><br></pre></td></tr></table></figure><p>一方で、AD FS 側には -supportMultipleDomain オプションを指定すると、以下のように認証するユーザーの UPN に応じて Issuer ID をを発行するルール (発行変換規則) が作成されます。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c:[Type == &quot;http://schemas.xmlsoap.org/claims/UPN&quot;]</span><br><span class="line"> =&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = regexreplace(c.Value, &quot;.+@(?&lt;domain&gt;.+)&quot;, &quot;http://$&#123;domain&#125;/adfs/services/trust/&quot;));</span><br></pre></td></tr></table></figure><p>例えば、<code>user01@a.com</code> というユーザーで認証した場合、上記のルールによって UPN の @ 以下のドメイン部分が抽出されて、<code>http://a.com/adfs/services/trust/</code> という値が Issuer ID にセットされます。<br>また、<code>user02@b.com</code> というユーザーで認証した場合、同様に <code>http://b.com/adfs/services/trust/</code> という値が Issuer ID にセットされます。<br><br><br><br>このようにして、各ドメインの Issuer ID と IssuerURI の整合性を取ることを意図したものが、-supportMultipleDomain オプションの正体です。<br><br><br><br>なお、1 対 1 の場合であっても、-supportMultipleDomain オプションを指定しても問題はありません。<br>例えば、上記の例で a.com しか存在しない場合でも Issuer ID と Issuer URI の整合性は保たれます。<br>Azure AD Connect のウィザードで AD FS を構成、管理している場合には、1 対 1 の場合にも -supportMultipleDomain  オプションを指定してフェデレーションが構成されます。<br></p><h2 id="3-トップレベルドメインとサブドメイン、エラー発生のシナリオについて"><a href="#3-トップレベルドメインとサブドメイン、エラー発生のシナリオについて" class="headerlink" title="3. トップレベルドメインとサブドメイン、エラー発生のシナリオについて"></a>3. トップレベルドメインとサブドメイン、エラー発生のシナリオについて</h2><p>Azure AD では、サブドメインを作成することができます。<br>例えば、a.com というドメインのサブドメインとして、sub1.a.com を作成することができます。<br>このサブドメインの取り扱いは少々複雑で、注意が必要です。<br>具体的には、親子関係が存在する場合と、存在しない場合とに分けられます。<br></p><h3 id="1-サブドメインを先に作成した場合"><a href="#1-サブドメインを先に作成した場合" class="headerlink" title="(1) サブドメインを先に作成した場合"></a>(1) サブドメインを先に作成した場合</h3><p>最初に sub1.a.com を作成し、後から a.com を作成した場合、親子関係は結ばれません。<br>両方がトップレベルドメインとして扱われ、sub1.a.com と  a.com  は別々のドメインとみなされ、それぞれ固有のフェデレーションの設定を保持することができます。<br>このケースでは、既定のルールでも問題は発生しません。<br>上述の a.com と b.com の場合と同様の動作になります。<br>ただし、さらにここから sub2.a.com を作成しますと、sub1.a.com と a.com は別々のドメインですが、a.com と sub2.a.com との間には親子関係が結ばれることになります。<br>この場合、後述の「4. より複雑な環境におけるルールの作成例」を考慮して、ルールを書き換える必要があります。<br></p><h3 id="2-サブドメインを後から作成した場合"><a href="#2-サブドメインを後から作成した場合" class="headerlink" title="(2) サブドメインを後から作成した場合"></a>(2) サブドメインを後から作成した場合</h3><p>最初に a.com を作成し、後から sub1.a.com を作成した場合、a.com と sub1.a.com との間には「親子関係」が結ばれます。<br>親子関係が結ばれる場合、子 (サブ) ドメインの認証方式は、すべて親ドメインの設定を継承します。<br>例えば、親ドメインがマネージド ドメインであれば子もマネージドになり、親ドメインがフェデレーション ドメインであれば子もフェデレーションになります。<br>フェデレーションの設定も親ドメインのものを継承します。<br>ここで注意が必要なのが、Issuer URI の設定についても親ドメインしか持たないということです。<br>つまり、子ドメインのユーザーで認証した場合でも、親ドメインに設定されている Issuer URI に合致する Issuer ID を AD FS で発行する必要があります。<br><br><br><br>AD FS と 親ドメインが 1 対 1 で、-supportMultipleDomain を指定していない場合には、問題は生じません。<br>親ドメインであっても、子ドメインであっても、既定の AD FS の識別子 (<code>http://&lt;フェデレーションサービス名&gt;/services/trust</code>) が固定で Issuer ID にセットされ、親ドメインにも同一の値が Issuer URI としてセットされているためです。<br><br><br><br>-supportMultipleDomain を指定している場合には、既定のルールでは問題が発生します。<br>例えば、<code>user01@sub1.a.com</code> というユーザーで認証した場合を考えます。<br>この時、既定のルールですと、UPN の @ 以下のドメイン部分が抽出されて、<code>http://sub1.a.com/adfs/services/trust/</code> という値が Issuer ID にセットされます。<br>しかし、親ドメインの Issuer URI は <code>http://a.com/adfs/services/trust/</code> ですので合致しません。<br><br><br><br>AADSTS50107 のエラーメッセージに、<code>http://sub1.a.com/adfs/services/trust/</code> のような、サブドメインの UPN からそのまま抽出して作成された値が表示されている場合、ほとんどがこのケースに該当します。<br><br><br><br>以下の既定のルールを削除して<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c:[Type == &quot;http://schemas.xmlsoap.org/claims/UPN&quot;]</span><br><span class="line"> =&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = regexreplace(c.Value, &quot;.+@(?&lt;domain&gt;.+)&quot;, &quot;http://$&#123;domain&#125;/adfs/services/trust/&quot;));</span><br></pre></td></tr></table></figure><p>以下のようなルールに書き換えることで対処することができます。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c:[Type == &quot;http://schemas.xmlsoap.org/claims/UPN&quot;]</span><br><span class="line">=&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = regexreplace(c.Value, &quot;(?i)(^([^@]+)@)(.*)(?&lt;domain&gt;(a\.com))$&quot;, &quot;http://$&#123;domain&#125;/adfs/services/trust/&quot;));</span><br></pre></td></tr></table></figure><p>a.com の他にもトップレベルドメインが存在する場合 (-supportMultipleDomain を指定している場合、ほとんどがこちらのケースに該当するかと思います) は、以下のようにルールを記述します。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c:[Type == &quot;http://schemas.xmlsoap.org/claims/UPN&quot;]</span><br><span class="line">=&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = regexreplace(c.Value, &quot;(?i)(^([^@]+)@)(.*)(?&lt;domain&gt;(a\.com|b\.co\.jp|c\.net))$&quot;, &quot;http://$&#123;domain&#125;/adfs/services/trust/&quot;));</span><br></pre></td></tr></table></figure><p>上記は、a.com、b.co.jp、c.net というトップレベルドメインと、その子ドメインが存在する環境に対応したルールです。<br><br>以下のような構成に対応したものになります。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a.com (親 ドメイン)</span><br><span class="line">   sub1.a.com (子ドメイン)</span><br><span class="line">   sub2.a.com (子ドメイン) </span><br><span class="line"></span><br><span class="line">b.co.jp (親 ドメイン)</span><br><span class="line">   sub1.b.co.jp (子ドメイン)</span><br><span class="line">   sub2.b.co.jp (子ドメイン) </span><br><span class="line"></span><br><span class="line">c.net (親 ドメイン)</span><br><span class="line">   sub1.c.net (子ドメイン)</span><br><span class="line">   sub2.c.net (子ドメイン)</span><br></pre></td></tr></table></figure><p>ルールに列挙したドメイン  (\ は . をエスケープしています) と、その親子関係のあるサブドメインすべてについて、それぞれの親ドメインに相当する部分を抽出して Issuer ID をセットします。<br></p><br>なお、Azure AD Connect で AD FS を構成、管理している場合には、自動で以下のようなルールが作成されます。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c1:[Type == &quot;http://schemas.xmlsoap.org/claims/UPN&quot;] &amp;&amp; c2:[Type == &quot;http://schemas.microsoft.com/ws/2012/01/accounttype&quot;, Value == &quot;User&quot;] </span><br><span class="line">=&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = regexreplace(c1.Value, &quot;(?i)(^([^@]+)@)(?&lt;domain&gt;(a\.com|b\.co\.jp|c\.net))$&quot;, &quot;http://$&#123;domain&#125;/adfs/services/trust/&quot;));</span><br></pre></td></tr></table></figure><p>しかし、この自動的に作成されるルールは、子ドメインに対応していません。<br>Azure AD Connect で構成、管理している場合で、子ドメインが存在する場合には、以下のように <code>(?i)(^([^@]+)@)</code> と <code>(?&lt;domain&gt;</code> との間に  <code>(.*)</code> を追記してください。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c1:[Type == &quot;http://schemas.xmlsoap.org/claims/UPN&quot;] &amp;&amp; c2:[Type == &quot;http://schemas.microsoft.com/ws/2012/01/accounttype&quot;, Value == &quot;User&quot;] </span><br><span class="line">=&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = regexreplace(c1.Value, &quot;(?i)(^([^@]+)@)(.*)(?&lt;domain&gt;(a\.com|b\.co\.jp|c\.net))$&quot;, &quot;http://$&#123;domain&#125;/adfs/services/trust/&quot;));</span><br></pre></td></tr></table></figure><p>AADSTS50107 のエラーメッセージに子ドメインのユーザーの UPN がそのまま表示されている場合、ほとんどがこちらのケースに該当します。<br></p><h2 id="4-より複雑な環境におけるルールの作成例"><a href="#4-より複雑な環境におけるルールの作成例" class="headerlink" title="4. より複雑な環境におけるルールの作成例"></a>4. より複雑な環境におけるルールの作成例</h2><p>例えば、sub1.a.com、a.com、sub2.a.com の順番にドメインを作成し、また他に b.co.jp、sub1.b.co.jp  の順番でドメインを作成したとします。<br>以下のような構成になります。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sub1.a.com (トップレベル ドメイン)</span><br><span class="line"></span><br><span class="line">a.com (トップレベル ドメイン)</span><br><span class="line">  sub2.a.com (a.com の 子ドメイン)</span><br><span class="line"></span><br><span class="line">b.co.jp (トップレベル ドメイン)</span><br><span class="line">  sub1.b.co.jp (b.co.jp の子ドメイン)</span><br></pre></td></tr></table></figure><p>この時、それぞれのドメインでセットすべき Issuer ID は以下のようになります。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sub1.a.com</span><br><span class="line">http://sub1.a.com/adfs/services/trust/</span><br><span class="line"></span><br><span class="line">a.com および sub2.a.com</span><br><span class="line">http://a.com/adfs/services/trust/</span><br><span class="line"></span><br><span class="line">b.co.jp および sub1.b.co.jp</span><br><span class="line">http://b.co.jp/adfs/services/trust/</span><br></pre></td></tr></table></figure><p>このように、親子関係を持たないサブドメインと、親子関係を持つサブドメインの両方が存在する場合には、個別にドメインを判定して適切な Issuer ID を送信するルールが必要になります。<br>上記のような構成では、以下のようなルールを作成します。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@ UPN サフィックスをそのまま &quot;http://domain/upnsuffix&quot; というクレームとして発行</span><br><span class="line">c:[Type == &quot;http://schemas.xmlsoap.org/claims/UPN&quot;]</span><br><span class="line"> =&gt; issue(Type = &quot;http://domain/upnsuffix&quot;, Value = regexreplace(c.Value, &quot;(^([^@]+)@)(?&lt;domain&gt;(.*))$&quot;, &quot;$&#123;domain&#125;&quot;));</span><br><span class="line"></span><br><span class="line">@ sub1.a.com の場合</span><br><span class="line">c:[Type == &quot;http://domain/upnsuffix&quot;, Value =~ &quot;^(?i)sub1\.a\.com$&quot;]</span><br><span class="line"> =&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = &quot;http://sub1.a.com/adfs/services/trust/&quot;);</span><br><span class="line"></span><br><span class="line">@ a.com およびその子ドメインの場合 (sub1.a.com はトップレベルドメインなので除く)</span><br><span class="line">c1:[Type == &quot;http://domain/upnsuffix&quot;, Value =~ &quot;(?i)a\.com$&quot;]  &amp;&amp; c2:[Type == &quot;http://domain/upnsuffix&quot;, Value =~ &quot;^(?!(?i)sub1.a.com$)&quot;]</span><br><span class="line"> =&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = &quot;http://a.com/adfs/services/trust/&quot;);</span><br><span class="line"></span><br><span class="line">@ b.co.jp およびその子ドメインの場合</span><br><span class="line">c:[Type == &quot;http://domain/upnsuffix&quot;, Value =~ &quot;(?i)b\.co.jp$&quot;]</span><br><span class="line"> =&gt; issue(Type = &quot;http://schemas.microsoft.com/ws/2008/06/identity/claims/issuerid&quot;, Value = &quot;http://b.co.jp/adfs/services/trust/&quot;);</span><br></pre></td></tr></table></figure><p>以上のように、AADSTS50107 が発生した場合には、AD FS (IdP) が発行している Issuer ID と、Azure AD のカスタムドメインに設定されている Issuer URI に着目し、合致するようにルールを書き換えることで (もしくは正しい Issuer URI をカスタムドメインに設定することで) 対応することができます。<br><br><br><br>いかがでしたでしょうか。<br><br>上記内容が少しでも参考となりますと幸いです。<br><br><br><br><br><br>製品動作に関する正式な見解や回答については、お客様環境などを十分に把握したうえでサポート部門より提供させていただきますので、ぜひ弊社サポート サービスをご利用ください。<br><br><br><br>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identitiy サポートチームの竹村です。&lt;br&gt;今回は、多くのお客様からお問合せをいただく AADSTS50107 のエラーについて、その意味や対応方法をご紹介します。&lt;/p&gt;
&lt;h2 id=&quot;1-ADSTS50107-と-Issu
      
    
    </summary>
    
    
    
      <category term="AD FS" scheme="https://jpazureid.github.io/blog/tags/AD-FS/"/>
    
      <category term="AADSTS50107" scheme="https://jpazureid.github.io/blog/tags/AADSTS50107/"/>
    
      <category term="Issuer ID" scheme="https://jpazureid.github.io/blog/tags/Issuer-ID/"/>
    
      <category term="Issuer URI" scheme="https://jpazureid.github.io/blog/tags/Issuer-URI/"/>
    
      <category term="supportMultipleDomain" scheme="https://jpazureid.github.io/blog/tags/supportMultipleDomain/"/>
    
  </entry>
  
  <entry>
    <title>2020 年アイデンティティについて取り組むべき 5 つのポイント</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/5-identity-priorities-for-2020/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/5-identity-priorities-for-2020/</id>
    <published>2020-02-12T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.285Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は、 2020 年 1 月 28 日に Azure Active Directory Identity Blog に公開された記事 (5 identity priorities for 2020 - preparing for what’s next) を翻訳したものです。原文は <a href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/5-identity-priorities-for-2020-preparing-for-what-s-next/ba-p/1131492" target="_blank" rel="noopener">こちら</a> より参照ください。</p></blockquote><p>Microsoft アイデンティティ グループの慣習として、毎年、顧客との共同イノベーション週間というものを開催しています。次の新しい 10 年で最初のイベントを始めるにあたり、2020 年またさらにその先を見据え、常に念頭にあるのは、私たちの戦略と製品の方向性を形作るお客様の優先事項がどのようのように進化していくのかという点です。</p><p>過去の 10 年間を振り返ってみると、デジタル トランスフォーメーションが人々の働き方や企業のビジネスのあり方を大きく変えてきたのは驚くべきことです。 ユーザーを例に見てみましょう。 かつての “ユーザー” とは従業員を意味していましたが、現在のユーザーにはパートナー、顧客さらにはソフトウェア ボットやデバイスも含まれています。アイデンティティ (ID) は従業員を表すものとして始まりましたが、今やすべての人やモノがアイデンティティで表されています。 企業のネットワーク境界がなくなり、アイデンティティは、すべてのユーザーとデジタル リソースに効果的なアクセス制御を提供するセキュリティの制御インターフェイスになりました。</p><img src="/blog/azure-active-directory/5-identity-priorities-for-2020/figure1.png"><p>アイデンティティは、お客様のビジネスの成功にとって、絶対的に重要なものとなります。アイデンティティは、セキュリティの中核であるだけでなく、ビジネス変革の中心でもあります。そのため、2020 年に優先すべき 5 つの領域と、今後に備え注目すべき技術を共有したいと思います。 これらの優先事項は、お客様と緊密に協力し、デジタル トランスフォーメーションとしてお客様環境を再構築する際に行った多くの会話に基づいたものです。</p><h2 id="2020-年-5-つのアイデンティティ優先ポイント"><a href="#2020-年-5-つのアイデンティティ優先ポイント" class="headerlink" title="2020 年 5 つのアイデンティティ優先ポイント"></a>2020 年 5 つのアイデンティティ優先ポイント</h2><h3 id="1-すべてのアプリケーションとクラウド-リソースを接続して、アクセス制御とユーザー体験を改善する。"><a href="#1-すべてのアプリケーションとクラウド-リソースを接続して、アクセス制御とユーザー体験を改善する。" class="headerlink" title="1.  すべてのアプリケーションとクラウド リソースを接続して、アクセス制御とユーザー体験を改善する。"></a>1.  すべてのアプリケーションとクラウド リソースを接続して、アクセス制御とユーザー体験を改善する。</h3><p>デジタル ネイティブ世代が労働人口に加わり、今も増え続けています。彼ら/彼女らは、アプリを使い、どこからでも様々なプロジェクトでコラボレーションすることを当たり前に考えており、しかもアプリには何度もサインインしたくないと思っています。一般的な SaaS アプリケーションから <a href="https://azure.microsoft.com/en-us/services/active-directory/sso/secure-hybrid-access/" target="_blank" rel="noopener">オンプレミス アプリケーション</a> や <a href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/azure-ad-authentication-to-windows-vms-in-azure-now-in-public/ba-p/827840" target="_blank" rel="noopener">クラウド リソース</a> に至る <a href="https://azure.microsoft.com/en-us/services/active-directory/sso/" target="_blank" rel="noopener">すべてのアプリケーションを単一のクラウド アイデンティティ サービスで接続する</a> ことは、ユーザーにシングル サインオン (SSO) の体験を提供するだけでなく、セキュリティも向上させます。</p><p>Azure Activity Directory (Azure AD) をすべてのアプリケーションの単一の制御インターフェイスとして使用すると、デジタル資産全体にわたって可視性と適応性を兼ねたきめ細かなアクセス制御を実現できます。また、当社のクラウド規模の機械学習アルゴリズムが毎日処理する 171 テラ バイトものデータを活用して、各ユーザーとアプリケーションの行動パターンを学習し、潜在的な攻撃にフラグを立て、回復させることが可能です。例えば、<a href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/the-refreshed-azure-ad-identity-protection-is-now-generally/ba-p/1002916" target="_blank" rel="noopener">危険にさらされている可能性のあるユーザー</a> を保護するために、強制パスワード リセットなどのシンプルなポリシーを適用でき、ユーザーの混乱を最小限に抑えながら ID の侵害を防ぐことが可能です。</p><h3 id="2-アプリケーションにアイデンティティを統合し、セキュリティを改善できるようにアプリ開発者を支援する。"><a href="#2-アプリケーションにアイデンティティを統合し、セキュリティを改善できるようにアプリ開発者を支援する。" class="headerlink" title="2. アプリケーションにアイデンティティを統合し、セキュリティを改善できるようにアプリ開発者を支援する。"></a>2. アプリケーションにアイデンティティを統合し、セキュリティを改善できるようにアプリ開発者を支援する。</h3><p>多くの組織では、複雑なセキュリティとプライバシーの要件を必要とするアプリケーションが爆発的に増えたことで、その対応を進めています。Azure AD と統合すると、アプリケーションのセキュリティとプライバシーが向上しますが、既にある大量のアプリを管理し続けながら、押し寄せる新しいアプリケーションの数々に対処していくことは、ID 管理者にとって莫大な仕事になります。管理者を支援する必要があります。</p><p>それを解決するためには、ID 管理者はアプリケーション開発チームにさらに多くを委任することが必要です。このため、マイクロソフトでは、開発者が <a href="https://developer.microsoft.com/en-us/identity" target="_blank" rel="noopener">Microsoft Identity Platform</a> を利用して認証をアプリケーションに統合し、<a href="https://developer.microsoft.com/en-us/graph" target="_blank" rel="noopener">Microsoft Graph</a> を使用してデータ駆動型アプリケーションの構築や自動化を簡単に構築できるように支援します。さらに追加の利点として、開発者は各アプリケーションに最低限必要な権限についてきめ細かな設定ができるため、処理を完了するために必要な Microsoft Graph データにのみアクセスさせることが可能です。</p><h3 id="3-セキュリティでユーザーに負担をかけないためにパスワードレスに移行する。"><a href="#3-セキュリティでユーザーに負担をかけないためにパスワードレスに移行する。" class="headerlink" title="3. セキュリティでユーザーに負担をかけないためにパスワードレスに移行する。"></a>3. セキュリティでユーザーに負担をかけないためにパスワードレスに移行する。</h3><p>パスワードは <a href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/your-pa-word-doesn-t-matter/ba-p/731984" target="_blank" rel="noopener">安全ではなく</a>、管理コストが高く、ユーザーを悩ませることは誰もが知っています。そのため、過去 2 年間、FIDO アライアンスと提携し、私たちの従業員から率先してパスワードの排除を目標としてきました。パスワードのない世界に備える時が今まさに来ています。</p><p><a href="https://www.microsoft.com/en-us/security/technology/identity-access-management/passwordless" target="_blank" rel="noopener">パスワードレス認証</a> には非常に多くの利点があります。 その 1 つは、Microsoft 自身の経験でわかったように、ハード コストとソフト コストが 87% 削減されるという点です。すべての組織がパスワードレスに移行できるように、Windows Hello から Microsoft Authenticator および FIDO2 セキュリティ キーなど、クラウドおよびハイブリッド環境で機能する様々な方法を提供しています。また、導入しやすくするために、お客様と自社 IT チーム状況に応じて展開の計画を開始する <a href="https://www.microsoft.com/security/blog/2019/12/11/go-passwordless-strengthen-security-reduce-costs/" target="_blank" rel="noopener">4 つのステップ</a> を用意しています。</p><h3 id="4-すべてのユーザーに対して境界のないコラボレーションと自動化されたアクセス-ライフサイクルを実現する。"><a href="#4-すべてのユーザーに対して境界のないコラボレーションと自動化されたアクセス-ライフサイクルを実現する。" class="headerlink" title="4. すべてのユーザーに対して境界のないコラボレーションと自動化されたアクセス ライフサイクルを実現する。"></a>4. すべてのユーザーに対して境界のないコラボレーションと自動化されたアクセス ライフサイクルを実現する。</h3><p>組織の境界の内外でのデジタル コラボレーションが爆発的に増えています。今日のアイデンティティは、例えば、<a href="https://azure.microsoft.com/en-us/resources/azure-ad-customer-and-partner-identity-management" target="_blank" rel="noopener">顧客やパートナー</a> 、または以前はデジタル変革の恩恵を得ていなかった <a href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/empower-firstline-workers-from-day-one-with-enhanced-identity/ba-p/1097771" target="_blank" rel="noopener">20 億人を超えるファーストライン ワーカー (現場の最前線で働く従業員)</a> とのすべてのデジタルなやり取りに対応しています。将来的には、人とソフトウェア ボット、マイクロサービス、スマート デバイス間のコラボレーションも強化されるでしょう。</p><!-- textlint-disable --><p>効果的なコラボレーションには、単にすべてのユーザーをつなぐだけでは不十分です。適切なユーザーが適切なリソースに適切なタイミングで適切なアクセスができるようにする必要があります。ユーザーとアプリケーションの数が増加しているため、IT 部門が全員のアクセスのニーズを把握することはできません。アイデンティティ ガバナンスがここで役立ちます。クラウド ベースの <a href="https://aka.ms/identitygovernance" target="_blank" rel="noopener">ID ガバナンス</a> は、<a href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/ring-in-the-new-year-with-automated-user-provisioning-from-sap/ba-p/1063603" target="_blank" rel="noopener">SAP Success Factors</a> や <a href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/say-good-bye-to-custom-scripts-and-simplify-your-workforce/ba-p/320540" target="_blank" rel="noopener">Workday</a> などの人事システムとの統合により、アクセス ライフサイクルを自動化し、機械学習と分析の力によりレビュー担当者のアクセス許可/拒否の判断をシンプルにします。また、ビジネス ユーザーがアクセス要求とワークフローを通じてアクセスを管理したり、ファーストライン マネージャー (現場にいるマネージャー) にユーザー管理を委任したりすることもできます。</p><!-- textlint-enable --><h3 id="5-ゼロ-トラストへの移行を開始し、デジタル-トランスフォーメーションを進める組織を攻撃から守る。"><a href="#5-ゼロ-トラストへの移行を開始し、デジタル-トランスフォーメーションを進める組織を攻撃から守る。" class="headerlink" title="5. ゼロ トラストへの移行を開始し、デジタル トランスフォーメーションを進める組織を攻撃から守る。"></a>5. ゼロ トラストへの移行を開始し、デジタル トランスフォーメーションを進める組織を攻撃から守る。</h3><p>我々が会話する顧客は、”ネットワークの境界はなくコラボレーションにも境界はない、またデバイスとアプリケーションが爆発的に増加し、従来のセキュリティ パラダイムはもはや適用できない” ということを明確に理解しています。このような世界では、ゼロ トラストという考えが世界の原則であり、セキュリティ戦略でもあります。ゼロ トラストの世界では、企業ファイアウォールの背後にあるすべてのものが安全であるという前提はなく、代わりに 3 つの原則である、明示的な検証、最小特権でのアクセス、侵害は必ず発生するという考えを前提とします。</p><p>マイクロソフトが <a href="https://www.microsoft.com/security/blog/2019/10/29/improve-security-zero-trust-access-model/" target="_blank" rel="noopener">自身の経験</a> から学んだように、ビジネスの優先順位や所有するテクノロジー、保護する資産に応じて、すべてのゼロ トラストへの移行のステップはお客様ごとに異なるものになります。既存の運用や資産に基づいて構築する場合、<a href="https://download.microsoft.com/download/f/9/2/f92129bc-0d6e-4b8e-a47b-288432bae68e/Zero_Trust_Vision_Paper_Final%2010.28.pdf" target="_blank" rel="noopener">ゼロ トラストの成熟度</a> を評価することで、さらに強力なセキュリティ体制に向けて実用的な手段を講じることができます。</p><img src="/blog/azure-active-directory/5-identity-priorities-for-2020/figure2.png"><h2 id="2020-年以降のアイデンティティの展望"><a href="#2020-年以降のアイデンティティの展望" class="headerlink" title="2020 年以降のアイデンティティの展望"></a>2020 年以降のアイデンティティの展望</h2><p>2020 年以降も、多くのエキサイティングなテクノロジーが、アイデンティティの世界を変えようとしています。特に注目すべき点は、非中央集権型 (decentralized) アイデンティティです。</p><h3 id="非中央集権型のアイデンティティと検証可能なクレームにより検証性とプライバシーが向上する。"><a href="#非中央集権型のアイデンティティと検証可能なクレームにより検証性とプライバシーが向上する。" class="headerlink" title="非中央集権型のアイデンティティと検証可能なクレームにより検証性とプライバシーが向上する。"></a>非中央集権型のアイデンティティと検証可能なクレームにより検証性とプライバシーが向上する。</h3><p>より多くのトランザクションと情報交換がデジタルで行われるようになると、その人が誰なのか、提示する情報が正確であるかを確認することが不可欠となります。これは、収集したデータの正しさを確認し、なおかつそのデータの秘匿性と安全性を確保しなければいけない組織にとって、非常に大きな負担となります。また、人々は自らのアイデンティティを管理し、個人情報を収集するそのような組織に多大な信頼を置く必要もあります。</p><p>非中央集権型のアイデンティティは、我々のデジタルとのかかわり方を変えることで、すべてのオンライン上の属性情報を簡単に検証できるようにし、なおかつユーザー自らが自身のデータを管理できるようにします。これは単なるコンセプトではなく、実際に実現可能な仕組みです。<a href="https://identity.foundation/" target="_blank" rel="noopener">Decentralized Identity Foundation (DIF)</a> とのコミュニティの取り組みを通じて、私たちは、検証可能な資格情報に関する <a href="https://www.w3.org/TR/vc-data-model/" target="_blank" rel="noopener">新しい W3C Web 標準</a> 化を進めています。また、UK National Health Service、Blackpool Teaching Hospitals および Truu との協力関係により、<a href="https://myignite.techcommunity.microsoft.com/sessions/81763?source=sessions" target="_blank" rel="noopener">非中央集権型アイデンティティの試験運用</a> も行っています。 この試験運用で、医師が自らの資格情報を検証するのにかかる時間を 5 か月から 5 分に短縮することができ、医師がより長い時間、患者に時間をさけるよう支援しています。</p><h2 id="今後-10-年間の我々のコミットメント"><a href="#今後-10-年間の我々のコミットメント" class="headerlink" title="今後 10 年間の我々のコミットメント"></a>今後 10 年間の我々のコミットメント</h2><p>これからの 10 年間では、過去 10 年間と同様、お客様が共有くださるビジネス上の優先事項をもとに、アイデンティティに対する技術投資を進めていきます。私たちのチームの最優先事項は、サービスの信頼性とセキュリティです。我々が核とする技術革新の原則はこれまでもこれからも変わりません:</p><ul><li>業界をリードするセキュリティを最初から提供する。</li><li>シンプルで統合された完全な ID ソリューションを構築する</li><li>オープンで相互運用可能なエコシステムをサポートする</li></ul><p>2020 年のそれぞれのアイデンティティの優先事項を各組織の目標に用意に当てはめ実装するにはそれぞれ個別の対応が必要ですが、アイデンティティは、ビジネス変革の過程において重要な部分になります。私たちのチームは、お客様と密接に協力して製品の革新を図り、お客様に最適なアイデンティティ アーキテクチャの設計を支援し、それをお客様の組織に迅速に展開することに取り組んでいます。お客様の <a href="https://feedback.azure.com/forums/169401-azure-active-directory" target="_blank" rel="noopener">フィードバック</a> をもとに、私たちは製品やサービスの開発を進めていきます。我々の既存製品を超えた更にその先にお客様が進めるよう、ぜひ必要なものをお知らせください。</p><h3 id="著者について"><a href="#著者について" class="headerlink" title="著者について"></a>著者について</h3><p>Joy Chik は、マイクロソフトのアイデンティティ部門のコーポレート バイス プレジデントです。Joy は、数十億ドル規模のアイデンティティ ビジネスの技術部門を率いており、当該部門では数十億の人々が日々利用するコンシューマーおよびエンタープライズのテクノロジーに対し、より優れたセキュリティとモビリティを提供しています。</p><p>Joy のチームは、Active Directory、Azure Active Directory を含む Microsoft のすべての ID テクノロジーとサービスの構築を担当しています。これらのサービスは、あらゆる規模の組織と、世界中でほぼ 10 億人の消費者が利用する Microsoft アカウント (MSA) を保護し、エンドツーエンドの ID およびアクセス管理ソリューションを提供しています。Joy は、Anita Borg Institute の評議員および Sierra Wireless の取締役を務めています。彼女は、女性がテクノロジー キャリアを追求することを奨励する慈善団体でも積極的に活動しています。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本記事は、 2020 年 1 月 28 日に Azure Active Directory Identity Blog に公開された記事 (5 identity priorities for 2020 - preparing for what’s 
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="Security" scheme="https://jpazureid.github.io/blog/tags/Security/"/>
    
      <category term="Zero Trust" scheme="https://jpazureid.github.io/blog/tags/Zero-Trust/"/>
    
  </entry>
  
  <entry>
    <title>マネージド ID を利用して Azure AD サインイン アクティビティ レポートを CSV ファイルで取得する PowerShell スクリプト</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/microsoft-graph-api-signin-activity-reports-v2/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/microsoft-graph-api-signin-activity-reports-v2/</id>
    <published>2020-01-25T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.405Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、 Azure &amp; Identity サポート チームの平形です。</p><p>以前、Azure AD のサインイン アクティビティ レポートと監査アクティビティ レポートを Azure AD Graph API を経由して取得するスクリプトを紹介しました。今回はスクリプト内にクライアント シークレットや証明書の情報を記載しなくてもよい方法として、マネージド ID を使用したレポート取得方法と共に、いくつかのサインイン ログ・監査ログを取得するサンプルをご用意いたしました。</p><p>マネージド ID は特殊なサービス プリンシパルであり、このサービス プリンシパルを用いて認証を行うには Azure 内部のみアクセス可能な特殊なエンドポイントにアクセスする必要があります。通常のサービス プリンシパルと同じように RBAC を設定することで Azure 各種リソースへアクセスが可能になる一方、サービス プリンシパルと異なり明示的に証明書やクライアント シークレットをスクリプト内で指定する必要はございません。</p><p>そのため、コード内に資格情報を埋め込むリスクや証明書漏洩のリスクを考慮する必要がなくより、セキュアな運用が可能です。</p><p>マネージド ID については下記公開情報をご覧ください。</p><p>Azure リソースのマネージド ID とは<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/managed-identities-azure-resources/overview" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/managed-identities-azure-resources/overview</a></p><p>なお、今回ご紹介しているサインイン ログを取得するスクリプトは Azure AD Premium P1 ライセンス以上のライセンスがテナントに対して 1 つ以上必要です。</p><h2 id="マネージド-ID-を使用したレポート取得方法"><a href="#マネージド-ID-を使用したレポート取得方法" class="headerlink" title="マネージド ID を使用したレポート取得方法"></a>マネージド ID を使用したレポート取得方法</h2><h3 id="A-事前準備-マネージド-ID-を有効化します"><a href="#A-事前準備-マネージド-ID-を有効化します" class="headerlink" title="A. 事前準備 - マネージド ID を有効化します"></a>A. 事前準備 - マネージド ID を有効化します</h3><p>Azure Virtual Machine を 1 台デプロイします。デプロイ後、スクリプトを実行する Azure Virtual Machine のマネージド ID を有効化します。以下の手順に従って、マネージド ID を有効化します。</p><p>Resource Manager で VM にリソース グループへのアクセスを許可する<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/managed-identities-azure-resources/tutorial-windows-vm-access-arm#grant-your-vm-access-to-a-resource-group-in-resource-manager" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/managed-identities-azure-resources/tutorial-windows-vm-access-arm#grant-your-vm-access-to-a-resource-group-in-resource-manager</a></p><p>上記公開情報記載の「Resource Manager で VM にリソース グループへのアクセスを許可する」の手順実行後、オブジェクト ID を記録しておきます。</p><h3 id="B-事前準備-サインイン-ログ取得に必要な権限をマネージド-ID-に付与して付与します"><a href="#B-事前準備-サインイン-ログ取得に必要な権限をマネージド-ID-に付与して付与します" class="headerlink" title="B. 事前準備 - サインイン ログ取得に必要な権限をマネージド ID に付与して付与します"></a>B. 事前準備 - サインイン ログ取得に必要な権限をマネージド ID に付与して付与します</h3><p>以下のコマンドを実行し、マネージド ID に対して Graph API および Azure Active Directory に対するサインイン ログ読み取りに必要な権限を割り当てます。下記コマンド実行には Azure AD for Graph (Azure AD v2) が必要です。</p><p>インストールしていない場合には <a href="https://jpazureid.github.io/blog/azure-active-directory/powershell-module/">Azure Active Directory の PowerShell モジュール</a> を参照しインストールください。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># グローバル管理者でサインインします。</span></span><br><span class="line">Connect-AzureAD</span><br><span class="line"></span><br><span class="line"><span class="variable">$graph</span> = Get-AzureADServicePrincipal -Filter <span class="string">"AppId eq '00000003-0000-0000-c000-000000000000'"</span></span><br><span class="line"><span class="variable">$auditReadPermission</span> =  <span class="variable">$graph</span>.AppRoles | <span class="built_in">Where-Object</span> Value <span class="nomarkup">-Like</span> <span class="string">"AuditLog.Read.All"</span> | <span class="built_in">Where-Object</span> AllowedMemberTypes <span class="nomarkup">-contains</span> <span class="string">'Application'</span> | <span class="built_in">Select-Object</span> -First <span class="number">1</span></span><br><span class="line"><span class="variable">$directoryReadPermission</span> = <span class="variable">$graph</span>.AppRoles | <span class="built_in">Where-Object</span> Value <span class="nomarkup">-Like</span> <span class="string">"Directory.Read.All"</span> | <span class="built_in">Where-Object</span> AllowedMemberTypes <span class="nomarkup">-contains</span> <span class="string">'Application'</span>  | <span class="built_in">Select-Object</span> -First <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A. の手順で確認したマネージド ID の Object ID を以下の &lt;ObjectID&gt; 部分に代入します。</span></span><br><span class="line"><span class="variable">$msi</span> = Get-AzureADServicePrincipal -ObjectId &lt;ObjectID&gt; </span><br><span class="line"></span><br><span class="line">New-AzureADServiceAppRoleAssignment -ObjectId <span class="variable">$msi</span>.ObjectId -PrincipalId <span class="variable">$msi</span>.ObjectId -ResourceId <span class="variable">$graph</span>.ObjectId -Id <span class="variable">$auditReadPermission</span>.Id </span><br><span class="line">New-AzureADServiceAppRoleAssignment -ObjectId <span class="variable">$msi</span>.ObjectId -PrincipalId <span class="variable">$msi</span>.ObjectId -ResourceId <span class="variable">$graph</span>.ObjectId -Id <span class="variable">$directoryReadPermission</span>.Id</span><br></pre></td></tr></table></figure><h3 id="C-サインイン-ログの収集-スクリプトの編集と実行"><a href="#C-サインイン-ログの収集-スクリプトの編集と実行" class="headerlink" title="C. サインイン ログの収集 - スクリプトの編集と実行"></a>C. サインイン ログの収集 - スクリプトの編集と実行</h3><p>GitHub 上の以下のスクリプトをダウンロードし、マネージド ID を有効化した Azure Virtual Machine 上の C:\SignInReport 配下に保存します。</p><p><a href="https://github.com/jpazureid/blog/blob/microsoft-graph-api-signin-activity-reports-v2/articles/azure-active-directory/Sample-GetSigninActivity.ps1" target="_blank" rel="noopener">Sample-GetSigninActivity.ps1</a></p><p>保存後はファイル エクスポート先等適宜編集ください。既定では過去 7 日のログを、スクリプトを実行したカレント ディレクトリ上に outfile.csv という名前で保存します。</p><h3 id="D-参考情報-スクリプトのフィルターの書き方について一例"><a href="#D-参考情報-スクリプトのフィルターの書き方について一例" class="headerlink" title="D. 参考情報 - スクリプトのフィルターの書き方について一例"></a>D. 参考情報 - スクリプトのフィルターの書き方について一例</h3><p>上記サンプル スクリプトはサインイン アクティビティ レポートを出力するスクリプトですが、 URL (クエリ パラメーター) を編集することで様々なログの取得が可能です。</p><p>例: 特定のリスクが検出されたサインイン イベントのみ抽出したい場合は、以下のフィルターを追加します。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(riskState eq <span class="string">'atRisk'</span> or riskState eq <span class="string">'confirmedCompromised'</span>)</span><br></pre></td></tr></table></figure><p>例: 特定期間のサインイン イベントのみ抽出したい合は、以下のように具体に日時を指定してフィルターを追加します。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(createdDateTime le <span class="variable">$currentdate</span> and createdDateTime ge <span class="variable">$prevdate</span>)</span><br></pre></td></tr></table></figure><p>日時の形式は 2019-12-08T00:00:00Z といった形式にする必要があります。スクリプト内で実行するのであれば、例えば以下のようなコマンドが考えられます。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 現在日時を取得</span></span><br><span class="line">((<span class="built_in">Get-Date</span>).ToUniversalTime()).ToString(<span class="string">"yyyy'-'MM'-'dd HH':'mm':'ss'Z'"</span>).Replace(<span class="string">' '</span>, <span class="string">'T'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 現在日時から前日の値を取得</span></span><br><span class="line">((<span class="built_in">Get-Date</span>).ToUniversalTime()).AddDays(-<span class="number">1</span>).ToString(<span class="string">"yyyy'-'MM'-'dd HH':'mm':'ss'Z'"</span>).Replace(<span class="string">' '</span>, <span class="string">'T'</span>)</span><br></pre></td></tr></table></figure><p>また、フィルター条件として、特定の OS からのアクセスを抽出したい場合、以下のようなフィルターを追加します。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(startswith(deviceDetail/operatingSystem, <span class="string">'Ios'</span>)</span><br></pre></td></tr></table></figure><p>クエリ パラメーターについては以下の公開情報を参照ください。</p><p>クエリ パラメーターを使用して応答をカスタマイズする<br><a href="https://docs.microsoft.com/ja-jp/graph/query-parameters" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/graph/query-parameters</a></p><h2 id="その他、-Graph-API-を実行する際の便利なツールなど"><a href="#その他、-Graph-API-を実行する際の便利なツールなど" class="headerlink" title="その他、 Graph API を実行する際の便利なツールなど"></a>その他、 Graph API を実行する際の便利なツールなど</h2><p>Graph API を利用するツールは他にも様々用意がございます。</p><h3 id="Graph-Explorer"><a href="#Graph-Explorer" class="headerlink" title="Graph Explorer"></a>Graph Explorer</h3><p>視覚的に分かりやすく、必要な権限付与も行いやすいため URL が正しいか等を確認するのに最適です。</p><p>Graph Explorer<br><a href="https://developer.microsoft.com/ja-jp/graph/graph-explorer" target="_blank" rel="noopener">https://developer.microsoft.com/ja-jp/graph/graph-explorer</a></p><h3 id="Az-コマンド"><a href="#Az-コマンド" class="headerlink" title="Az コマンド"></a>Az コマンド</h3><p>事前に Az コマンドをインストールする必要はありますが、今回のようにスクリプトを用意せずに実行することが可能です。CLI ベースで確認されたい場合にはこちらをご利用ください。az rest コマンドを使用することで、任意の HTTP リクエストを作成し、取得することが可能です。</p><p>Azure CLI のインストール<br><a href="https://docs.microsoft.com/ja-jp/cli/azure/install-azure-cli?view=azure-cli-latest" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/cli/azure/install-azure-cli?view=azure-cli-latest</a></p><p>az コマンドについての公開情報<br><a href="https://docs.microsoft.com/ja-jp/cli/azure/reference-index?view=azure-cli-latest#az-rest" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/cli/azure/reference-index?view=azure-cli-latest#az-rest</a></p><h2 id="Graph-API-の公開情報"><a href="#Graph-API-の公開情報" class="headerlink" title="Graph API の公開情報"></a>Graph API の公開情報</h2><p>Graph API を実行する際には事前に権限付与が必要な場合があります。例えば今回のサインイン ログの場合は以下の公開情報に記載のある通り、監査ログに対する読み取り権限が必要です。実行する Graph API ごとに要求される権限が異なるため、公開情報から実行する Graph API に必要な権限を確認し、実行するアプリケーション、もしくはユーザーに権限付与を行ってください。</p><p>List signIns<br><a href="https://docs.microsoft.com/en-us/graph/api/signin-list?view=graph-rest-1.0&amp;tabs=http" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/graph/api/signin-list?view=graph-rest-1.0&amp;tabs=http</a></p><p>「Application    AuditLog.Read.All and Directory.Read.All」という文言から、アプリケーションがこの Graph API を実行するにはこれらの権限が必要なことが分かります。そのため事前準備でこれらの権限をアプリケーションに対して付与しました。</p><p>今回紹介しました方法にてお客様の要件に合わせて適宜フィルター条件を追加したり、整形しやすく出力することが可能です。<br>以上の内容が、Azure AD 上のサインイン ログを長期的に保管する際に是非ご活用ください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、 Azure &amp;amp; Identity サポート チームの平形です。&lt;/p&gt;
&lt;p&gt;以前、Azure AD のサインイン アクティビティ レポートと監査アクティビティ レポートを Azure AD Graph API を経由して取得するスクリプトを紹介しまし
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="graph api" scheme="https://jpazureid.github.io/blog/tags/graph-api/"/>
    
      <category term="signin log" scheme="https://jpazureid.github.io/blog/tags/signin-log/"/>
    
      <category term="PowerShell" scheme="https://jpazureid.github.io/blog/tags/PowerShell/"/>
    
      <category term="Managed ID" scheme="https://jpazureid.github.io/blog/tags/Managed-ID/"/>
    
  </entry>
  
  <entry>
    <title>Hybrid Azure AD Join 失敗時の初動調査方法について (マネージド編)</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/troubleshoot-hybrid-azure-ad-join-managed/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/troubleshoot-hybrid-azure-ad-join-managed/</id>
    <published>2020-01-19T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.429Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの 姚 (ヨウ) です。</p><p>多くの方にご利用いただいている Hybrid Azure AD Join (以後 HAADJ) の構成ですが、構成に失敗する場合、 Azure AD の観点だけでなく、オンプレミス Active Directory と Windows の観点での確認が必要です。<br>今回は、HAADJ の構成時の初動調査について紹介します。</p><p>今回の情報により問題が解決すれば越したことはありませんが、問題が解決しない場合も、ここで確認した初期切り分け情報を含めることで、サポートにスムーズな形で調査を依頼することができます。</p><p>なお、 HAADJ には、マネージド構成とフェデレーション構成の 2 種類の構成があります。<br>HAADJ とマネージド構成とフェデレーション構成については、それぞれ以下の弊社公開情報をご参照ください。</p><p>Select your scenario based on your identity infrastructure<br><a href="https://docs.microsoft.com/en-us/azure/active-directory/devices/hybrid-azuread-join-plan#select-your-scenario-based-on-your-identity-infrastructure" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/active-directory/devices/hybrid-azuread-join-plan#select-your-scenario-based-on-your-identity-infrastructure</a></p><p>今回は、まずマネージド構成、 Azure AD Conenct のみを利用する HAADJ 構成の初動調査について、構成に失敗する際の代表的な症状 3 つに対する初動調査を紹介します。<br>フェデレーション構成については第二弾として近いうちに公開したいと思います。</p><h2 id="1-オンプレミスのコンピューターが-Azure-AD-のデバイス一覧に存在しない"><a href="#1-オンプレミスのコンピューターが-Azure-AD-のデバイス一覧に存在しない" class="headerlink" title="(1) オンプレミスのコンピューターが Azure AD のデバイス一覧に存在しない"></a>(1) オンプレミスのコンピューターが Azure AD のデバイス一覧に存在しない</h2><p>HAADJ を構成することでオンプレミスのドメインに所属するコンピューターを示すデバイス オブジェクトが Azure AD Connect により Azure AD に同期されます。<br>HAADJ が正常にできているかの最初の確認としては、 Azure ポータルを開き [Azure Active Directory] ブレードの [デバイス] 欄で結合の種類が Hybrid Azure AD Joined となっている状態で対象のコンピューターが存在するか確認します。</p><img src="/blog/azure-active-directory/troubleshoot-hybrid-azure-ad-join-managed/device-list-azure-portal.png"><p>対象のデバイスが [Azure Active Directory] ブレードの [デバイス] 欄に存在しない場合、デバイスが Azure AD Conndevice-list-azure-portal.pngect によって同期されていない可能性が高く、真っ先に確認いただきたいのはオンプレミス Active Directory にある<br>当該コンピューター オブジェクトに userCertificate に何らかの値が書き込まれていないかどうかです。<br>Azure AD Connect はコンピューター オブジェクトの userCertificate 属性に何らかの値が書き込まれている場合に、コンピューター オブジェクトを Azure AD に同期します。</p><p>その確認方法は、任意のドメイン コントローラーで ADSI エディター ([ファイル名を指定して実行] や検索ボックスから adsiedit.msc) を起動し、対象のコンピューター オブジェクトのプロパティを開きます。<br>以下は userCertificate に値が書き込まれていない場合の例で、この場合、一般的に以下の要因によって発生しますので、それぞれ順番に確認を行います。</p><img src="/blog/azure-active-directory/troubleshoot-hybrid-azure-ad-join-managed/userCertificate01.png"><h3 id="1-1-HAADJ-の処理で、デバイスを-Azure-AD-Join-するタスクが有効になっていない"><a href="#1-1-HAADJ-の処理で、デバイスを-Azure-AD-Join-するタスクが有効になっていない" class="headerlink" title="(1-1) HAADJ の処理で、デバイスを Azure AD Join するタスクが有効になっていない"></a>(1-1) HAADJ の処理で、デバイスを Azure AD Join するタスクが有効になっていない</h3><p>HAADJ の Join 処理はクライアント端末の以下のタスクによって実施されます。このタスクが実行されないと Azure AD Connect による同期対象にクライアント コンピューターがなりません。</p><p>パス : [タスクスケジューラ] – [タスクスケジューラ ライブラリ] – [Microsoft] – [Windows] – [Workplace Join]<br>タスク名 : Automatic-Device-Join</p><p>タスクはオンプレミスの Active Directory に参加するタイミングで有効になりますので、ドメイン参加後にこのタスクが有効かどうかを確認ください。<br>もし、オンプレミス Active Directory に参加したにも関わらず、当該タスクが有効ではない場合、この時点でサポートにお問い合わせをご検討ください。</p><p>当該タスクが有効の場合、次の (1-2) の確認事項に進みます。</p><h3 id="1-2-Service-Connection-Point-SCP-が正常に構成されていない"><a href="#1-2-Service-Connection-Point-SCP-が正常に構成されていない" class="headerlink" title="(1-2) Service Connection Point (SCP) が正常に構成されていない"></a>(1-2) Service Connection Point (SCP) が正常に構成されていない</h3><p>SCP はクライアント端末が HAADJ Join する先の Azure AD テナントの情報が書き込まれています。</p><p>(1-1) のクライアント上で実行されるタスクは SCP を元に Azure AD へのエンドポイントを確認し、コンピューター オブジェクトの userCertificate 属性に必要な情報を書き込みます。<br>SCP が正常に構成されていない場合、userCertificate 属性は書き込まれず、コンピューター オブジェクトが同期されない結果になるため、 SCP が正しく設定されているか確認します。</p><p>SCP は、オンプレミス Active Directory の構成パーティションか、クライアント端末のレジストリ キー値のいずれかで設定ができます。<br>以下の手順で SCP が設定されているかどうかを確認します。</p><p>Active Directory の構成パーティション、またはクライアント端末のレジストリ キー値のいずれか設定されていれば問題はありません。<br>もし、SCP の設定に問題はなければ、次の (1-3) の確認事項に進みます。</p><h4 id="Active-Directory-の構成パーティションの確認"><a href="#Active-Directory-の構成パーティションの確認" class="headerlink" title="Active Directory の構成パーティションの確認"></a>Active Directory の構成パーティションの確認</h4><p>(1) ドメイン コントローラーに管理者ユーザーのログオンし、管理者で PowerShell を起動します。<br>(2)  以下のコマンドを実行します。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scp</span> = <span class="built_in">New-Object</span> System.DirectoryServices.DirectoryEntry</span><br><span class="line"><span class="variable">$scp</span>.Path = <span class="string">"LDAP://CN=62a0ff2e-97b9-4513-943f-0d221bd30080,CN=Device Registration Configuration,CN=Services,CN=Configuration,DC=xxxxxxx,DC=xxxxxx"</span></span><br><span class="line"><span class="variable">$scp</span>.Keywords</span><br></pre></td></tr></table></figure><p>  DC=xxxxxxx,DC=xxxxxx にはオンプレミス Active Directory のドメイン名 (フォレストに複数ドメインが存在する場合には、フォレスト ルート ドメイン名) を入力します。<br>  contoso.com の場合、DC=contoso,DC=com  と入力します。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">例 :</span><br><span class="line"></span><br><span class="line"><span class="variable">$scp</span> = <span class="built_in">New-Object</span> System.DirectoryServices.DirectoryEntry</span><br><span class="line"><span class="variable">$scp</span>.Path = <span class="string">"LDAP://CN=62a0ff2e-97b9-4513-943f-0d221bd30080,CN=Device Registration Configuration,CN=Services,CN=Configuration,DC=contoso,DC=com "</span></span><br><span class="line"><span class="variable">$scp</span>.Keywords</span><br></pre></td></tr></table></figure><p>  これらのコマンドの出力結果として、以下のように Azure AD テナントのドメイン名 (azureADName) とテナント ID (azureADId) の情報が表示されていれば、正常に構成されていると判断できます。<br>  また、マネージドの HAADJ であるため、azureADName は xxxxx.onmicrosoft.com 形式で設定されている必要があります。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">azureADName:&lt;Azure AD テナントドメイン名の xxxxx.onmicrosoft.com 形式&gt;</span><br><span class="line">azureADId:&lt;Azure AD テナント ID&gt;</span><br><span class="line"></span><br><span class="line">例 :</span><br><span class="line">azureADName:microsoft.onmicrosoft.com</span><br><span class="line">azureADId:72f988bf-86f1-41af-91ab-2d7cd011db47</span><br></pre></td></tr></table></figure><h4 id="クライアント端末のレジストリ-キー値の確認"><a href="#クライアント端末のレジストリ-キー値の確認" class="headerlink" title="クライアント端末のレジストリ キー値の確認"></a>クライアント端末のレジストリ キー値の確認</h4><p>クライアント端末の以下の 2 つのレジストリー値に Azure AD テナントの情報が設定しているかどうかを確認します。</p><ul><li>レジストリー キー : KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\CDJ\AAD<ul><li>値 : TenantId</li><li>種類 : REG_SZ</li><li>値 : TenantName</li><li>種類 : REG_SZ</li></ul></li></ul><p>TenantName には Azure AD のテナント ドメイン名 (xxxx.onmicrosoft.com 形式) と TenantId には Azure AD テナント ID の両方が設定されている必要があります。<br>SCP として、いずれかの場所に正常に設定されていることが確認できましたら、次の (1-3) にお進みください。</p><h3 id="1-3-HAADJ-に必要な-Azure-AD-のエンドポイントへアクセスできていない"><a href="#1-3-HAADJ-に必要な-Azure-AD-のエンドポイントへアクセスできていない" class="headerlink" title="(1-3) HAADJ に必要な Azure AD のエンドポイントへアクセスできていない"></a>(1-3) HAADJ に必要な Azure AD のエンドポイントへアクセスできていない</h3><p>クライアント上で実行される HAADJ のタスクは userCertificate 属性を書き込む前に SCP に指定されている Azure AD テナントが実際に存在するか確認します。<br>具体的には HAADJ に必要な以下の Azure AD のエンドポイントへのアクセスを試行し、ここにアクセスして指定された Azure AD テナントの存在を確認した上で userCertificate へ情報を書き込みます。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://enterpriseregistration.windows.net</span><br><span class="line">https://login.microsoftonline.com</span><br><span class="line">https://device.login.microsoftonline.com</span><br></pre></td></tr></table></figure><p>インターネットへの接続にプロキシー サーバーを経由する必要がある環境の場合、クライアント端末の WinHTTP のプロキシー サーバー設定にプロキシー サーバーを設定する必要があります。これは HAADJ のタスクがシステム コンテキストで動作し、 winHTTP の設定を利用するためです。HAADJ のタスクは認証を必要とするプロキシー サーバーには対応していませんので、認証を必要とするようにプロキシ サーバーが構成されている場合、認証を解除する必要があります。</p><p>クライアント端末で管理者権限でコマンド プロンプトを起動し、以下のコマンドを実行し、WinHTTP のプロキシ サーバーが設定されているか確認します。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh winhttp show proxy</span><br></pre></td></tr></table></figure><p>プロキシを利用してアクセスすることが必要な環境であるのにも関わらず、設定されていない場合、以下のコマンドを実行し、設定します。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh winhttp <span class="built_in">set</span> proxy proxy-server="&lt;プロキシー サーバー&gt;:&lt;ポート&gt;" bypass-list="&lt;バイパスする URL&gt;"</span><br></pre></td></tr></table></figure><ul><li>&lt;バイパスする URL&gt; はプロキシ サーバーを介さずにアクセスさせるサーバーの一覧です。必要に応じて指定します。<br>例えばローカルと <em>.test.com へのアクセスにはプロキシを経由させない場合には、 bypass-list=”<local>;</local></em>.test.com” というような記載を行います。</li></ul><p>WinHTTP のプロキシー サーバー設定を実施した場合には、以下のタスクを手動で実行します。</p><p>パス : [タスクスケジューラ] – [タスクスケジューラ ライブラリ] – [Microsoft] – [Windows] – [Workplace Join]<br>タスク名 : Automatic-Device-Join</p><p>再度、ドメイン コントローラーで ADSI エディターを利用し、対象のコンピューター オブジェクトの userCertificate に何らかの値が書き込まれたかどうかを確認ください。<br>以下の例は userCertificate に何らかの値が書き込まれた場合です。</p><img src="/blog/azure-active-directory/troubleshoot-hybrid-azure-ad-join-managed/userCertificate02.png"><p>以上を確認した結果として、特に問題が無い場合には、これまで確認された情報を合わせ、サポートにお問い合わせすることをご検討ください。</p><h2 id="2-HAADJ-の対象のコンピューター-オブジェクトが、保留中の状態"><a href="#2-HAADJ-の対象のコンピューター-オブジェクトが、保留中の状態" class="headerlink" title="(2) HAADJ の対象のコンピューター オブジェクトが、保留中の状態"></a>(2) HAADJ の対象のコンピューター オブジェクトが、保留中の状態</h2><p>HAADJ の対象のコンピューター オブジェクトが Azure AD に登録されているが、Azure ポータルで以下の図の例のように [登録済み] の欄が “保留中” というステータスになっている場合には HAADJ が完了していない状態を疑います。</p><img src="/blog/azure-active-directory/troubleshoot-hybrid-azure-ad-join-managed/device-list-azure-portal02.png"><p>Azure AD Connect によりコンピューターオブジェクトが、 Azure AD に同期され、その後、クライアントで再度 Automatic-Device-Join タスクが実行されることにより、デバイスの Azure AD への登録 (Hybrid Azure AD Join の処理) が完了します。<br>コンピューター オブジェクトは同期されたものの、最終的な Join 処理が失敗、あるいはタスクが未実行の場合、Azure ポータルではデバイスは上記のように “保留中” という状態になります。</p><p>コンピューター オブジェクトが Azure AD に同期された後に、ユーザーがログオフ/ログオンを実行していない場合タスクはまだ未実行であるため、処理が完了していないのは想定される動作です。<br>そのため、一度ユーザーのログオフ、ログオンにより状態が変わるかをご確認ください。<br>ログオンすることによって、バックグラウンドで Automatic-Device-Join タスクが実行され、最終的な Join 処理が実施されることが期待できるためです。</p><p>もし、ユーザーによるログオフ/ログオンを実施しても、”保留中” の状態が変わらない場合、以下の Azure AD 側のエンドポイントにアクセスできないことが原因として考えられます。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://enterpriseregistration.windows.net</span><br><span class="line">https://login.microsoftonline.com</span><br><span class="line">https://device.login.microsoftonline.com</span><br></pre></td></tr></table></figure><p>このため、”(1-3) HAADJ に必要な Azure AD のエンドポイントへアクセスできていない” の項を参照の上、 winHTTP プロキシの設定が行われているか確認ください。</p><p>以上を実施しても、デバイスの状態が “保留中” から変わらない場合、詳細調査が必要ですので、これまで確認された情報と合わせサポートにお問い合わせをすることをご検討ください。</p><h2 id="3-HAADJ-によるシングル-サインオンができない-HAADJ-が動作していない"><a href="#3-HAADJ-によるシングル-サインオンができない-HAADJ-が動作していない" class="headerlink" title="(3) HAADJ によるシングル サインオンができない (HAADJ が動作していない)"></a>(3) HAADJ によるシングル サインオンができない (HAADJ が動作していない)</h2><p>HAADJ ができたコンピューターにログオンすることにより、ログオンしたユーザーはプライマリー リフレッシュ トークン (以後 PRT) を取得できます。PRT は HAADJ に通常利用する同期ユーザーがクライアント端末にログオンする際に Azure AD へのユーザー認証に成功し、認証に成功したことを示すキャッシュ情報です。<br>PRT の詳細については、以下の弊社技術情報をご参照ください。</p><p>プライマリ更新トークンとは<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/concept-primary-refresh-token" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/devices/concept-primary-refresh-token</a></p><p>この PRT を正常に取得できない場合、以下のような事象が発生します。</p><ul><li>Intune の自動登録に失敗する</li><li>条件付きアクセス ポリシーで “ハイブリッド Azure AD 参加済みデバイス” のコントールで拒否される</li><li>Hybrid Azure AD Join の端末からクラウド リソースへ SSO できない</li></ul><p>PRT を正常に取得できているか (HAADJ が正しく完了しているか) は以下の確認事項をもとに判断できます。</p><h3 id="3-1-本ブログにある-1-および-2-の事象が発生していないこと"><a href="#3-1-本ブログにある-1-および-2-の事象が発生していないこと" class="headerlink" title="(3-1)  本ブログにある (1) および (2) の事象が発生していないこと"></a>(3-1)  本ブログにある (1) および (2) の事象が発生していないこと</h3><h3 id="3-2-Azure-AD-にも同期されているオンプレミスの-Active-Directory-のユーザーで端末にログオンします。"><a href="#3-2-Azure-AD-にも同期されているオンプレミスの-Active-Directory-のユーザーで端末にログオンします。" class="headerlink" title="(3-2)  Azure AD にも同期されているオンプレミスの Active Directory のユーザーで端末にログオンします。"></a>(3-2)  Azure AD にも同期されているオンプレミスの Active Directory のユーザーで端末にログオンします。</h3><p>コマンド プロンプトを起動し、dsregcmd /status コマンドを実行します。<br>dsregcmd コマンドにはほかにもたくさんの出力の情報がありますが、まずは以下の項目をご確認ください。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AzureAdJoined : YES &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; AzureAdJoined は YES になっており、Azure AD に正常に Join していると判断できます</span><br><span class="line">DomainJoined : YES &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; DomainJoined は YES になっており、正常にオンプレミスの Active Directory に参加していると判断できます</span><br><span class="line">AzureAdPrt : NO &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; AzureAdPrt は NO になっている場合、PRT を正常に取得できていないと判断できます</span><br></pre></td></tr></table></figure><p>PRT を正常に取得できない場合の一般的な要因はユーザーのログオンタイミングで以下の Azure AD 側のエンドポイントにアクセスできないことが考えられます。<br>まずは、”(1-3) HAADJ に必要な Azure AD のエンドポイントへアクセスできていない” の対応をご参照ください。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://enterpriseregistration.windows.net</span><br><span class="line">https://login.microsoftonline.com</span><br><span class="line">https://device.login.microsoftonline.com</span><br></pre></td></tr></table></figure><p>この結果、問題無い場合には、詳細調査が必要ですので、以下の事項と合わせましてサポートにお問い合わせをご検討ください。</p><ul><li><p>事象は複数のユーザーで発生しているか、または特定のユーザーにのみ発生しているか</p></li><li><p>事象は特定のクライアント端末で発生しているかどうか<br>正常に PRT を取得できるユーザーがいる場合、PRT を取得できないユーザーがログオンしている端末で取得できるかどうか</p></li><li><p>PRT は HAADJ を構成してから一度も正常に取得できていないかどうか</p></li></ul><p>以上、HAADJ のマネージド構成のトラブシューティングの参考になりましたら幸いです。</p><p>製品動作に関する正式な見解や回答については、お客様環境などを十分に把握したうえでサポート部門より提供させていただきますので、ぜひ弊社サポート サービスをご利用ください。<br>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの 姚 (ヨウ) です。&lt;/p&gt;
&lt;p&gt;多くの方にご利用いただいている Hybrid Azure AD Join (以後 HAADJ) の構成ですが、構成に失敗する場合、 Azure AD の観点だけでな
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="Hybrid Azure AD Join" scheme="https://jpazureid.github.io/blog/tags/Hybrid-Azure-AD-Join/"/>
    
      <category term="Troubleshooting" scheme="https://jpazureid.github.io/blog/tags/Troubleshooting/"/>
    
  </entry>
  
  <entry>
    <title>[ベースライン ポリシー] から [セキュリティの既定値] への移行</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/azure-ad-security-defaults/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/azure-ad-security-defaults/</id>
    <published>2020-01-16T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.309Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの石川です。<br>今回は、Azure AD において、無料で利用できる多要素認証の機能の移行についてご紹介します。</p><hr><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>Azure AD の多要素認証 (MFA) を実現するために 2020 年 1 月時点ではプレビュー機能の “ベースライン ポリシー” (条件付きアクセスの [ベースライン ポリシー]) を利用することができます。<br>ベースライン ポリシーを有効にすることで、特定のディレクトリ ロールを持つユーザーに対して MFA を要求するなどのベースライン レベルのセキュリティ強化を追加の費用なしで有効にすることができます。</p><p>※ベースラインポリシーの詳細はこちらでご確認ください。</p><p>ベースライン ポリシーとは ?<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/conditional-access/concept-baseline-protection" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/conditional-access/concept-baseline-protection</a></p><p>しかし、ベースライン ポリシーは、[セキュリティの既定値] という新機能 (無料) に置き換えられ、2020 年 2 月 29 日に機能の削除を予定しています。<br>これにより、すべてのテナントからベースライン ポリシーが削除されます。</p><p>現在、ベースライン ポリシーを有効にしているテナントでは、ポリシーが削除されることにより MFA の要求がされなくなりますので、ベースライン ポリシーを有効にしているテナントの管理者は、お早めに [セキュリティの既定値] への移行を検討する必要があります。<br>[セキュリティの既定値] の機能は以下の手順で有効に設定することができます。</p><p>[セキュリティの既定値] の有効化手順:</p><ol><li>Azure ポータル (<a href="https://portal.azure.com" target="_blank" rel="noopener">https://portal.azure.com</a>) にグローバル管理者 (全体管理者) でサインインします。</li><li>[その他のサービス] – [Azure Active Directory] をクリックします。</li><li>[プロパティ] をクリックします。</li><li>[セキュリティの既定値の管理] をクリックします。</li><li>[セキュリティの既定値の有効化] を [はい] に設定します。</li></ol><img src="/blog/azure-active-directory/azure-ad-security-defaults/sample-enable.png"><ol start="6"><li>[保存] をクリックします。</li></ol><p>[セキュリティの既定値] の詳細はこちらでご確認ください。</p><p>セキュリティ デフォルトとは<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/fundamentals/concept-fundamentals-security-defaults" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/fundamentals/concept-fundamentals-security-defaults</a></p><p>ベースライン ポリシーを有効にしていないテナントでは、ベースライン ポリシーが削除されても特に影響はありません。<br>ただし、有償版の条件付きアクセスの機能を利用して多要素認証をすでに設定している環境以外では、セキュリティ強化のため、[セキュリティの既定値] を有効にすることをお勧めします。</p><p>なお、 Azure AD Premium ライセンスで提供される条件付きアクセスや Azure AD Identity Protection を利用した多要素認証では、[セキュリティの既定値] よりも高度かつ柔軟なセキュリティ機能をご利用いただくことができます。<br>Azure AD Premium ライセンスをまだお持ちでない方も、是非ご検討いただければと思います。</p><p>Azure AD Premium の機能の一覧<br><a href="https://azure.microsoft.com/ja-jp/pricing/details/active-directory/" target="_blank" rel="noopener">https://azure.microsoft.com/ja-jp/pricing/details/active-directory/</a></p><h2 id="よくあるご質問"><a href="#よくあるご質問" class="headerlink" title="よくあるご質問"></a>よくあるご質問</h2><p>ここからは、よくお問い合わせをいただくご質問について、Q&amp;A 形式でご紹介します。</p><hr><p>Q. ベースライン ポリシーが現在有効となっているかは、どうやって確認しますか？</p><p>A. 次の手順で確認します。</p><ol><li>Azure ポータル (<a href="https://portal.azure.com" target="_blank" rel="noopener">https://portal.azure.com</a>) にグローバル管理者でサインインします。</li><li>[その他のサービス] – [Azure Active Directory] をクリックします。</li><li>左メニューの [セキュリティ] をクリックします。</li><li>左メニューの [条件付きアクセス] をクリックします。</li><li>次のそれぞれのポリシーの状態がオンになっていれば有効です。オフの場合は無効です。</li></ol><p>Baseline policy: Require MFA for admins (プレビュー)<br>Baseline policy: End user protection (プレビュー)<br>Baseline policy: Block legacy authentication (プレビュー)<br>Baseline policy: Require MFA for Service Management (プレビュー)  </p><hr><p>Q.  [セキュリティの既定値] を有効にできない。 ([保存] をクリックできない)</p><p>A. Azure AD Premium ライセンスのあるテナントで、条件付きアクセスや ID 保護ポリシーが有効になっている場合、[セキュリティの既定値] を有効にできません。<br>これらの機能は、[セキュリティの既定値] よりも高度かつ柔軟な設定が可能ですので、[セキュリティの既定値] は無効のままとして、引き続きこれらの機能をご利用ください。</p><hr><p>Q. [セキュリティの既定値] を有効にする際にベースライン ポリシーが削除されると表示されるが、実行しても大丈夫か。</p><p>A. ベースライン ポリシーは、間もなく (2020 年 2 月 29 日) の段階で削除を予定しているプレビュー機能になります。<br>セキュリティの既定値を有効にすると、自動的にすべてのベースライン ポリシーが削除され、[セキュリティの既定値] を無効にしても、ベースライン ポリシーは復元されません。</p><hr><p>Q. [セキュリティの既定値] を有効にした後に、Azure にサインインをすると、[詳細情報が必要] という画面が表示される。</p><img src="/blog/azure-active-directory/azure-ad-security-defaults/sample-securityinfo.png"><p>A. [セキュリティの既定値] の機能により、グローバル管理者など管理者アカウントは、サインイン時に MFA が要求されるようになります。<br>また、それ以外のユーザーも Azure ポータルや Azure CLI 等の利用を試みる際に MFA が要求されます。<br>対象となるアカウント、操作については以下の情報を参照ください。</p><p>セキュリティ デフォルトとは<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/fundamentals/concept-fundamentals-security-defaults" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/fundamentals/concept-fundamentals-security-defaults</a></p><p>また、初回サインイン時に、MFA 認証用のモバイル アプリ (Microsoft Authenticator) のインストールとアカウントの追加の操作が必要となりますので、iOS、Android デバイスをご用意ください。</p><p>Microsoft Authenticator アプリの使い方<br><a href="https://support.microsoft.com/ja-jp/help/4026727/microsoft-account-how-to-use-the-microsoft-authenticator-app" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/4026727/microsoft-account-how-to-use-the-microsoft-authenticator-app</a></p><p>[詳細情報が必要] 画面で画面の指示に従い、Authenticator アプリにアカウントを追加することで、Azure にサインインすることができます。<br>次回以降は、パスワード認証後に、Authenticator アプリに通知が送信されるので、これに応答することで Azure にサインインすることができます。</p><h2 id="参考情報-Microsoft-Authenticator-アプリによる追加の認証方式の登録手順"><a href="#参考情報-Microsoft-Authenticator-アプリによる追加の認証方式の登録手順" class="headerlink" title="(参考情報) Microsoft Authenticator アプリによる追加の認証方式の登録手順"></a>(参考情報) Microsoft Authenticator アプリによる追加の認証方式の登録手順</h2><p>手順:</p><ol><li>まず、事前準備として、管理者のスマートフォンに認証用のモバイル アプリをインストールしておきます。</li><li>iOS、または Android、Windows Phone 上で、Microsoft Authenticator というアプリをインストールします。(アプリは無料です。)</li><li>Azure ポータルにアクセスして、Azure AD 認証でユーザー名/パスワードの認証が完了すると次のような画面が表示されます。</li><li>[次へ] をクリックします。</li></ol><img src="/blog/azure-active-directory/azure-ad-security-defaults/sample-securityinfo.png"><ol start="5"><li>[確認のための通知を受け取る] をオンにして、[セットアップ] をクリックします。</li></ol><img src="/blog/azure-active-directory/azure-ad-security-defaults/sample-register.png"><ol start="6"><li>次のような画面が表示されるので、画面の指示にしたがって、Microsoft Authenticator アプリで QR コードをスキャンします。</li><li>[次へ] をクリックします。</li></ol><img src="/blog/azure-active-directory/azure-ad-security-defaults/sample-setup.png"><ol start="8"><li>[次へ] をクリックします。</li></ol><img src="/blog/azure-active-directory/azure-ad-security-defaults/sample-setupdone.png"><ol start="9"><li>Microsoft Authenticator アプリに 「承認しますか」という画面が表示されるので、[承認] をクリックします。</li><li>[完了] をクリックします。</li></ol><img src="/blog/azure-active-directory/azure-ad-security-defaults/sample-setupdone.png"><h3 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h3><p>Microsoft Authenticator アプリや、アプリ内で追加したアカウントを削除しないでください。<br>削除した場合、MFA を完了できず、結果として Azure ポータルなどにサインインができなくなります。</p><p>もし、誤って削除をしてしまった場合、テナント内の別のグローバル管理者に、対象ユーザーの認証方法のリセットを実行するように依頼します。<br>これにより、次回のサインイン時に、再度 Microsoft Authenticator アプリの設定画面が表示されます。</p><p>認証方法のリセット手順:  </p><ol><li>Azure ポータル (<a href="https://portal.azure.com/" target="_blank" rel="noopener">https://portal.azure.com/</a>) にサインインします。</li><li>[その他のサービス] - [Azure Active Directory] - [ユーザー] で対象のユーザーを開きます。</li><li>[認証方法] をクリックします。</li><li>[MFA の再登録が必要] をクリックします。</li></ol><p>テナント内の唯一のグローバル管理者が Authenticator アプリのアカウントを削除し、サインインできない場合、自分自身では解除できないので、弊社 Azure サポート窓口にお問い合わせください。<br>可能であれば、対象テナントに別のユーザーで Azure ポータルにサインインして、サービス リクエストを発行してください。<br>また、解除までは依頼をいただいてから通常 1, 2 営業日要します。</p><hr><p>上記内容が少しでも皆様の参考となりますと幸いです。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの石川です。&lt;br&gt;今回は、Azure AD において、無料で利用できる多要素認証の機能の移行についてご紹介します。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;h
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD Domain Services の利用シナリオ</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/azure-ad-ds-scenario/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/azure-ad-ds-scenario/</id>
    <published>2020-01-10T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.301Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure AD サポートチームの高田です。</p><p>本日は、Azure AD Domain Services についてその推奨される利用方法やシナリオをご紹介したいと思います。</p><p>Azure AD Domain Services は、ユーザーが指定したドメイン名を用いて Azure の仮想ネットワーク上にドメイン コントローラーを自動構築するという機能です。Windows Server の Active Directory と完全に互換性のあるドメイン サービスが構築されることから、ドメイン参加やグループ ポリシーなど従来オンプレミス環境で使用していたテクノロジーをそのまま Azure 上で利用することが可能です。</p><p>しかし、利便性が大きい反面、サービスの位置づけが特殊なため、本来想定していない方法で Azure AD Domain Services の利用を検討しているお客様もいらっしゃいます。例えば、多くのお客様では以下のような考えのもと Azure AD Domain Service の利用を検討し、弊社までお問い合わせいただくことがございます。</p><ol><li>オンプレミスの Active Directory を廃止して、Azure AD Domain Services に移行したい。</li><li>Azure AD Domain Services を構築し、PC をドメイン参加させることでクライアント デバイスを管理したい。</li><li>オンプレミスの Active Directory に加えて Azure AD Domain Services を構築し、オンプレミスとクラウドで冗長構成をとりたい。</li><li>負荷のかかる LDAP 処理をオンプレミス AD でなく、Azure AD Domain Services に対して行いたい。</li></ol><p>大変恐れ入りますが、これらの利用方法は Azure AD Domain Services の期待された利用方法ではありません。以下では Azure AD Domain Services の注意点と利用シナリオとともに、推奨する構成パターンを紹介したいと思います。本記事が Azure AD Domain Services の導入を検討する際の参考になりましたら幸いです。</p><h2 id="Azure-AD-Domain-Services-の目的と利点"><a href="#Azure-AD-Domain-Services-の目的と利点" class="headerlink" title="Azure AD Domain Services の目的と利点"></a>Azure AD Domain Services の目的と利点</h2><p>Azure AD Domain Services は、自動的にドメイン コントローラーをクラウド上に構築し管理するサービスです。内部的には 2 つの仮想マシン (ドメイン コントローラー) が生成され、指定した Azure 仮想ネットワーク上に接続されます。また複製やバックアップが自動的に管理されます。これらのドメイン コントローラーは従来 Windows Server でご利用いただいていたドメイン コントローラーと完全な互換性があるため、ドメイン参加やグループ ポリシー、LDAP、Kerberos 認証、NTLM 認証など従来の Active Directory ドメインに要求していた処理を Azure AD Domain Services に対して行うことが可能です。イメージとしては、Azure 上に仮想マシン (ドメイン コントローラー) を構築し、オンプレミスとは独立したドメインを作成した上で、ドメイン コントローラー自体の健全性などを含む管理はすべてマイクロソフトに委ねるようなものとお考えいただけます。</p><p>また、Azure AD Domain Services には、Azure AD 上のユーザーが自動的に同期されます。これにより、Azure AD 上のユーザーと同じパスワードで Azure AD Domain Services のドメインにサインインが可能です。Azure AD Connect を用いてオンプレミスにあるドメイン環境から Azure AD にパスワード ハッシュ同期している環境であれば、Azure AD に同期されたパスワードがさらに Azure AD Domain Services に同期されることとなります。このため、オンプレミスの AD 環境と同じパスワードで、Azure AD Domain Services にもサインインが可能となります。</p><p>Azure AD Domain Services は、基本的に Azure 上に構築したサーバーやクラウド上のサービスに、Azure AD のアカウントを利用したドメイン参加や Kerberos 認証、LDAP アクセスを直接許可することを目的として提供されています。この目的のために Azure AD Domain Services を利用しない場合、管理者は以下のいずれかの構成を行い、Azure 上に構築したサーバーやクラウド上のサービスにドメイン コントローラーへのアクセスを提供する必要が生じます。</p><ul><li>Azure 上に Windows Server を構築し、ドメイン コントローラーに昇格させて Azure 上の仮想マシンやクラウド サービスを接続させる (ドメイン コントローラーの冗長性の構成や複製障害などの対応は自身で行う)。</li><li>Azure 上の仮想ネットワークとオンプレミスのネットワークに VPN を張り、既に存在するオンプレミスのドメイン コントローラーに通信ができるようにした上で Azure 上の仮想マシンやクラウド サービスから既存のドメインを利用させる (VPN の構成や接続性のメンテナンスを自身で行う)。</li></ul><h2 id="Azure-AD-Domain-Services-の推奨される利用シナリオ"><a href="#Azure-AD-Domain-Services-の推奨される利用シナリオ" class="headerlink" title="Azure AD Domain Services の推奨される利用シナリオ"></a>Azure AD Domain Services の推奨される利用シナリオ</h2><p>以上を踏まえ、Azure AD Domain Services の推奨される利用方法 (シナリオ) を紹介します。</p><h3 id="利用パターン-1-Azure-上にクラウド化したサービスに-Kerberos-NTLM-を用いて-SSO-したい"><a href="#利用パターン-1-Azure-上にクラウド化したサービスに-Kerberos-NTLM-を用いて-SSO-したい" class="headerlink" title="利用パターン 1: Azure 上にクラウド化したサービスに Kerberos/NTLM を用いて SSO したい"></a>利用パターン 1: Azure 上にクラウド化したサービスに Kerberos/NTLM を用いて SSO したい</h3><p>本利用パターンは、以下の条件に当てはまるお客様を対象としたものです。</p><ul><li>クラウド化の一環として、オンプレミスで Active Directory と共に動作していたサーバーを Azure 上に仮想マシンとして移行 (リフト アンド シフト) しようと検討している。</li><li>Azure 上に仮想マシンとして移行 (リフト アンド シフト) したサーバーには、Azure AD に同期されているものと同じ ID およびパスワードでサインインしたい。</li><li>Azure 上に仮想マシンとして移行 (リフト アンド シフト) したサーバーのために追加のサーバー構築や機器導入をしたくない。</li></ul><p>従来オンプレミスで Active Directory と共に動作していたサーバーをクラウド化 (Azure 上に仮想マシンとして移行) する場合、クラウドからどのようにして Active Directory を利用するかが問題となります。一般的には前述のとおり、Azure 上の仮想ネットワークに自前で Active Directory ドメイン コントローラーを構築するか、オンプレミスのドメインコントローラーに接続できるよう Azure とオンプレミスで VPN を張るかのいずれかが選択肢でした。</p><p>しかし、上述の条件に当てはまる利用パターンにおいては、Azure AD Domain Services を活用できます。管理者は自身でドメイン コントローラーを構築および管理する必要はなくなり、VPN の切断など接続性の問題からも解放されます。またユーザーは、オンプレミス Active Directory と同じ ID およびパスワードで、クラウド上に移行したサービスにサインインが可能となります。</p><h3 id="利用パターン-2-Azure-AD-アカウントに対する-LDAPS-接続を提供したい-注意-読み取り専用"><a href="#利用パターン-2-Azure-AD-アカウントに対する-LDAPS-接続を提供したい-注意-読み取り専用" class="headerlink" title="利用パターン 2: Azure AD アカウントに対する LDAPS 接続を提供したい - 注意: 読み取り専用"></a>利用パターン 2: Azure AD アカウントに対する LDAPS 接続を提供したい - 注意: 読み取り専用</h3><p>本利用パターンは、何らかのクラウドサービスが LDAP (LDAPS) を用いて Azure AD 上のユーザー情報にアクセスする必要のあるお客様が対象です。例えば、LDAPS アクセスによりユーザー情報を取得してメールの配信を行うクラウド サービスがあるとします。このようなサービスが LDAPS で情報を取得するためには、従来であれば、オンプレミスで動作するドメイン コントローラーをインターネットから LDAPS アクセスできるように構成するか、オンプレミス環境と複製したドメインコントローラーをクラウド上に作成して LDAPS を公開する必要がありました。</p><p>この利用パターンでも Azure AD Domain Services を利用することにより、簡単にクラウド上のサービスに LDAPS 接続を提供できます。Azure AD Domain Services のセキュリティはマイクロソフトにより自動的に管理されるため、サービスの利用者が LDAPS 接続のセキュリティを確保する必要はなくなります。</p><p>ただし、Azure AD Domain Services への LDAPS 接続は、Azure AD から同期されているユーザーについては読み取り専用となる点に注意が必要です。Azure AD から同期されている Azure AD Domain Service 上のユーザーに対して書き込み処理を行いたい場合は、ユーザー情報の大元である Azure AD に対して Graph API を使用する必要があります (オンプレミスから同期しているアカウントは Azure AD 上での更新ができないため、オンプレミスの Active Directory で変更します)。</p><h3 id="利用パターン-3-パスワードハッシュが同期できないなど特別なセキュリティ要件のある組織において、Azure-上にクラウド化したサービスに-Kerberos-NTLM-を用いて-SSO-したい"><a href="#利用パターン-3-パスワードハッシュが同期できないなど特別なセキュリティ要件のある組織において、Azure-上にクラウド化したサービスに-Kerberos-NTLM-を用いて-SSO-したい" class="headerlink" title="利用パターン 3: パスワードハッシュが同期できないなど特別なセキュリティ要件のある組織において、Azure 上にクラウド化したサービスに Kerberos/NTLM を用いて SSO したい"></a>利用パターン 3: パスワードハッシュが同期できないなど特別なセキュリティ要件のある組織において、Azure 上にクラウド化したサービスに Kerberos/NTLM を用いて SSO したい</h3><p>直近でプレビューとなった Azure AD Domain Services リソース フォレストの機能を利用することで、以下のような条件に当てはまる場合も、Azure AD Domain Services を活用いただけます (特別な要件のある組織向けのシナリオです)。</p><ul><li>クラウド化の一環として、オンプレミスで Active Directory と共に動作していたサーバーを Azure 上に仮想マシンとして移行 (リフト アンド シフト) しようと検討している。</li><li>セキュリティ要件によりオンプレミス AD 上のパスワードハッシュを Azure AD に同期できない、もしくはオンプレミス環境でのユーザー認証にはスマートカードを使用しておりユーザーは自身のアカウントのパスワードを知らないが、クラウド上に移行したサーバーに対し、オンプレミス Active Directory と同じ ID を用いてシングル サインオンしたい。</li><li>オンプレミス環境と Azure との間で Express Route もしくは VPN の構築が可能である。</li></ul><p>このシナリオでは、Azure AD Domain Services からオンプレミスの Active Directory に対してドメインの信頼関係を構築します。これにより、オンプレミス環境に存在するアカウントを用いて、Express Route もしくは VPN を経由して Azure AD Domain Service に認証することが可能となり、Azure AD Domain Services と連携するクラウド上のサーバーに SSO することができます。</p><img src="/blog/azure-active-directory/azure-ad-ds-scenario/figure.png"><p>この Azure AD Domain Services リソース フォレストを利用した方法では、Express Route もしくは VPN の構築が必要となりますが、上述のような特別なセキュリティ要件を持つお客様においてはアプリケーション サーバーをクラウド化する際に活用いただけます。弊社としては、接続の安定性から VPN ではなく、ExpressRoute の利用を推奨します。</p><p>チュートリアル: Azure Active Directory Domain Services (プレビュー) で、オンプレミスのドメインへの送信フォレストの信頼を作成する<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory-domain-services/tutorial-create-forest-trust" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory-domain-services/tutorial-create-forest-trust</a></p><h2 id="Azure-AD-Domain-Services-の推奨されない利用シナリオ"><a href="#Azure-AD-Domain-Services-の推奨されない利用シナリオ" class="headerlink" title="Azure AD Domain Services の推奨されない利用シナリオ"></a>Azure AD Domain Services の推奨されない利用シナリオ</h2><p>以下のようなご要望をお持ちのお客様においては、 Azure AD Domain Services の利用は適切ではありません。恐れ入りますが、別のアプローチをご検討ください。環境に応じた最適な方法につきましては、弊社プレミア サポートへのお問い合わせもご検討いただけますと幸いです。</p><h3 id="非推奨パターン-1-Azure-AD-Domain-Services-を構築し、PC-をドメイン参加させることでオンプレミス-Active-Directory-を廃止したい"><a href="#非推奨パターン-1-Azure-AD-Domain-Services-を構築し、PC-をドメイン参加させることでオンプレミス-Active-Directory-を廃止したい" class="headerlink" title="非推奨パターン 1: Azure AD Domain Services を構築し、PC をドメイン参加させることでオンプレミス Active Directory を廃止したい"></a>非推奨パターン 1: Azure AD Domain Services を構築し、PC をドメイン参加させることでオンプレミス Active Directory を廃止したい</h3><p>Azure AD Domain Services に対して、オンプレミス ネットワーク上の PC やサーバーをドメイン参加させることは非推奨です。オンプレミス ネットワークと Azure AD Domain Services を展開した仮想ネットワークをサイト間 VPN で接続することで、オンプレミス ネットワーク上の PC やサーバーをドメイン参加させることは技術的には可能です。しかし、 Azure AD Domain Services は基本的にクラウド上に存在する仮想マシンやサービスのために用意されたサービスです。このため開発部門としてもオンプレミス ネットワーク上の PC やサーバーを Azure AD Domain Services にドメイン参加させることは想定していません。</p><p>オンプレミスに存在する PC をクラウド連携させたい場合は、以下の方法をご検討ください。</p><ul><li>Azure AD Join もしくはハイブリッド Azure AD Join によるデバイス登録の実施</li><li>Intune などのモバイル デバイス管理 (MDM) ソフトウェアを利用したデバイス管理</li></ul><h3 id="非推奨パターン-2-Azure-上で動作している仮想マシンに-Azure-AD-のアカウントで単純にサインインしたい"><a href="#非推奨パターン-2-Azure-上で動作している仮想マシンに-Azure-AD-のアカウントで単純にサインインしたい" class="headerlink" title="非推奨パターン 2: Azure 上で動作している仮想マシンに Azure AD のアカウントで単純にサインインしたい"></a>非推奨パターン 2: Azure 上で動作している仮想マシンに Azure AD のアカウントで単純にサインインしたい</h3><p>Windows Server 2019 Datacenter エディションおよび Windows 10 1809 以降を実行している Azure 仮想マシンでは、Azure AD 認証を利用できるプレビューが開始されています。これにより、Azure AD 上のアカウントで仮想マシンにサインインでき、さらに Azure のロール ベースのアクセス制御 (RBAC) や Azure AD 条件付きアクセスなどを使用して、VM にアクセスできるユーザーを制御することが可能です。</p><p>Azure Active Directory 認証 (プレビュー) を使用して Azure 内の Windows 仮想マシンにサインインする<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/howto-vm-sign-in-azure-ad-windows" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/devices/howto-vm-sign-in-azure-ad-windows</a></p><p>このため、もし Azure 上で動作している仮想マシンに Azure AD のアカウントでサインインしたいというご要望であれば、Azure AD Domain Services を利用する必要はありません。Windows Server 2019 Datacenter エディションおよび Windows 10 1809 以降を実行している Azure 仮想マシンであれば、上述のプレビュー機能を利用して Azure AD のアカウントでサインインできます。</p><p>Azure AD Domain Services は、上述の推奨される利用パターンのとおり、Azure 上の仮想マシンやクラウド サービスが Kerberos や LDAP などのプロトコルを利用する必要がある際にご検討ください。</p><h3 id="非推奨パターン-3-負荷のかかる-LDAP-処理をオンプレミス-AD-でなく-Azure-AD-Domain-Services-に対して行いたい"><a href="#非推奨パターン-3-負荷のかかる-LDAP-処理をオンプレミス-AD-でなく-Azure-AD-Domain-Services-に対して行いたい" class="headerlink" title="非推奨パターン 3: 負荷のかかる LDAP 処理をオンプレミス AD でなく Azure AD Domain Services に対して行いたい"></a>非推奨パターン 3: 負荷のかかる LDAP 処理をオンプレミス AD でなく Azure AD Domain Services に対して行いたい</h3><p>Azure AD Domain Services はパフォーマンス チューニングなど詳細なカスタマイズができません。また、追加のドメインコントローラーを昇格させたり、仮想マシンのサイズを変更したりなどの調整もできません。Azure AD Domain Services はほとんどのお客様に十分なパフォーマンスが提供されるよう管理されておりますが、非常に負荷の高い処理や、既定でインデックス化されていない属性に対する高頻度の LDAP クエリーなどをおこなった場合、応答に長い時間がかかる場合があります。結果としてパフォーマンス要求を満たさない可能性があります。</p><p>このことから、特に高負荷な処理については、事前に Azure AD Domain Services 上で十分検証いただくとともに、独自に構築した Active Directory での実施もご検討ください。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>Azure AD Domain Services は、既存のオンプレミス Active Directory ドメイン コントローラーを完全に置き換えるものではありません。Azure AD Domain Services は Kerberos や NLTM、LDAP など従来のプロトコルを使用しているオンプレミス サーバーをクラウド (Azure) に移行できるよう促進し、組織のサーバー管理負荷を軽減するためのものです。</p><p>上記のとおり整理すると Azure AD Domain Service の効果的な利用シナリオは限られるように感じられるかもしれませんが、今後クラウドへの移行が進む中で、容易に廃止が難しいレガシーなサーバー群を Azure AD Domain Services と連携させ、クラウド化することは非常に効果的です。最終的にオンプレミスのドメイン コントローラーを利用するサービスがレガシーなサーバー群のみとなれば、それらのサーバーを仮想マシンとして Azure 上に移行し、Azure AD Domain Services と連携させることで、オンプレミスのドメイン コントローラーを廃止することも可能となります。これは多くの運用環境において非常に長い道のりとなりますが、そのソリューションの一つとして、Azure AD Domain Services を利用可能であるとご理解いただければ幸いです。</p><p>以上の内容でカバーされていない点で何か疑問点などございましたら、ぜひサポートサービスまでお問い合わせください。<br>上記内容が参考となりましたら幸いです。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure AD サポートチームの高田です。&lt;/p&gt;
&lt;p&gt;本日は、Azure AD Domain Services についてその推奨される利用方法やシナリオをご紹介したいと思います。&lt;/p&gt;
&lt;p&gt;Azure AD Domain Services は、ユーザー
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>「エンタープライズアプリケーション」と「アプリの登録」の違いについて</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/enterprise-applications-app-registrations/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/enterprise-applications-app-registrations/</id>
    <published>2019-12-05T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.349Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は Technet Blog の更新停止に伴い <a href="https://blogs.technet.microsoft.com/jpazureid/2018/12/28/enterprise-applications-app-registrations/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2018/12/28/enterprise-applications-app-registrations/</a> の内容を移行したものです。<br>元の記事の最新の更新情報については、本内容をご参照ください。</p></blockquote><p>こんにちは、Azure Identity チームの宮林です。</p><p>今回は Azure Active Directory の管理項目にある、「エンタープライズアプリケーション」と「アプリの登録」のそれぞれの違いについて紹介します。<br>初めてアプリケーションの登録を行おうとした際にどちらで設定すれば良いのかと、気になった方も多いのではないでしょうか。<br>この記事では、そのような疑問に対する答えとして、それぞれの違いについて説明します。</p><p>アプリケーションをテナント (Azure AD) に登録する際に「エンタープライズアプリケーションの登録」と「アプリの登録」それぞれの方法では、登録する目的が異なります。<br>端的に説明すれば以下のようになります。</p><p>「エンタープライズアプリケーション」：既存の SaaS アプリケーション (オンプレミスの環境で提供しているアプリを含む) をテナントに統合する場合に用いる。</p><p>「アプリの登録」：ユーザーやテナントの情報にアクセスして動作するために開発したアプリケーションを公開、もしくは利用するために用いる。</p><p>(ここで、統合が指す意味は、SaaS アプリケーションに対する シングルサインオン (SSO) の構成や、ユーザーのプロビジョニング構成を行うことなどを指します。)</p><p>それぞれの項目で、アプリケーションの登録を行う場合の目的の違いについて説明します。</p><h2 id="「エンタープライズアプリケーション」からアプリケーションの登録を行う場合"><a href="#「エンタープライズアプリケーション」からアプリケーションの登録を行う場合" class="headerlink" title="「エンタープライズアプリケーション」からアプリケーションの登録を行う場合"></a>「エンタープライズアプリケーション」からアプリケーションの登録を行う場合</h2><!-- textlint-disable --><p>例えば、GitHub、Salesforce、Slack や G Suite など、<a href="https://azuremarketplace.microsoft.com/ja-jp" target="_blank" rel="noopener">Azure Marketplace</a> もしくは、Azure ポータルより [Azure Active Directory] - [エンタープライズアプリケーション] - [+新しいアプリケーション] を選択した際に表示されるページで公開されている、事前に統合された SaaS アプリケーションをテナントに追加して利用するために使用します。  </p><!-- textlint-enable --><p>テナントに追加されたアプリケーションをユーザーに対して割り当てることで、アクセス可能なユーザーを限定することなどの管理も「エンタープライズアプリケーション」の項目から行います。<br>それぞれの SaaS アプリケーションに対する SSO、ユーザーのプロビジョニングの設定方法は以下のチュートリアルを参照ください。</p><p>SaaS アプリケーションと Azure Active Directory の統合に関するチュートリアル<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/saas-apps/tutorial-list" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/saas-apps/tutorial-list</a></p><p>事前に統合された SaaS アプリケーションの他にも、次の目的で Azure AD と外部のアプリケーションを連携する場合には、「エンタープライズアプリケーション」の項目から設定を行い、ユーザーの割り当てなどによって、アクセス許可の管理をすることができます。</p><ul><li>オンプレミス環境で利用しているアプリケーションを、Azure AD Application Proxy 経由で利用する。</li><li>SAML に対応した外部のアプリケーションとのシングルサインオンを構成する。</li><li>SCIM に対応した外部のアプリケーションに対してユーザー プロビジョニングを構成する。</li></ul><p>詳細については、以下の公開情報をご参照ください。</p><p>オンプレミス アプリケーションへの安全なリモート アクセスを実現する方法<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/manage-apps/application-proxy" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/manage-apps/application-proxy</a></p><p>ギャラリー以外のアプリケーションに SAML ベースのシングル サインオンを構成する<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/manage-apps/configure-single-sign-on-non-gallery-applications" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/manage-apps/configure-single-sign-on-non-gallery-applications</a></p><p>Azure Active Directory による SaaS アプリへのユーザー プロビジョニングとプロビジョニング解除の自動化<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/manage-apps/user-provisioning" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/manage-apps/user-provisioning</a></p><h2 id="「アプリの登録」からアプリケーションの登録を行う場合"><a href="#「アプリの登録」からアプリケーションの登録を行う場合" class="headerlink" title="「アプリの登録」からアプリケーションの登録を行う場合"></a>「アプリの登録」からアプリケーションの登録を行う場合</h2><p>Microsoft Graph API などを利用して、ユーザーやテナントの情報にアクセスして動作するために、開発したアプリケーションの公開、もしくは利用するために、「アプリの登録」の項目を利用します。<br>「アプリの登録」の画面では、開発しているアプリが必要とする API のアクセス許可を設定したり、アプリが Azure AD へ接続する際に利用する証明書やシークレットの管理を行います。<br>その他にも、ユーザーがアプリに対してサインインを行い、認証応答とともに Azure AD からリダイレクトされる URL の登録など、開発しているアプリの認証に関する設定を行います。<br>Azure AD には、認証応答が意図しないエンドポイント (URL) に渡されないように、登録されたリダイレクト URL 以外にはリダイレクトしません。<br>登録されていない URL にリダイレクトするような要求である場合は、”AADSTS50011” のエラーコードとともにエラー画面が表示されます。</p><p>「アプリの登録」の画面は、従来の設定画面から更新されました。<br>これにより、利用できるエンドポイントが v2.0 と v1.0 の両方を利用いただけるようになりました。<br>v2.0 のエンドポイントと、v1.0 のエンドポイントの比較と制限事項については次の公開情報をご参照ください。</p><p>Azure AD v2.0 エンドポイントと v1.0 エンドポイントの比較<br>- 制限事項<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/develop/azure-ad-endpoint-comparison#limitations" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/develop/azure-ad-endpoint-comparison#limitations</a></p><p>「アプリの登録」からアプリを登録すると、テナントにアプリケーションが統合 (登録) された状態となりますので、「エンタープライズ アプリケーション」にもその結果としての同名のオブジェクトが表示されます。<br>この追加されたアプリに対して、ユーザーに割り当てを行い、アクセス許可を設定する場合には、「エンタープライズアプリケーション」の項目から設定します。</p><h3 id="詳細情報"><a href="#詳細情報" class="headerlink" title="詳細情報"></a>詳細情報</h3><p>「エンタープライズアプリケーション」と「アプリの登録」の一覧に表示されているオブジェクトは、その種類が異なります。<br>それぞれの対応については、以下のとおりです。</p><ul><li>「エンタープライズアプリケーション」の一覧に表示されるオブジェクト : サービス プリンシパル オブジェクト</li><li>「アプリの登録」の一覧に表示されるオブジェクト : アプリケーション オブジェクト</li></ul><p>アプリケーション オブジェクトは、サービスプリンシパル オブジェクトの雛形のようなもので、この雛形を基に各テナント内にサービスプリンシパル オブジェクトが作成されます。<br>雛形 (アプリケーション オブジェクト) には、要求する API のアクセス許可や、Azure AD から発行されるトークンに含む追加の情報などがマニュフェストに定義されています。<br>アプリケーション オブジェクトは「アプリの登録」を行ったテナントに一つだけ作成されます。</p><p>雛形を基に、各テナントはそのテナント内でアプリが動作するためのサービスプリンシパル オブジェクトを作成します。このため、サービスプリンシパル オブジェクトは、登録されたアプリを使用するすべてのテナントに作成されます (アプリケーションオブジェクトとサービスプリンシパルは一対多の関係)。<br>サービスプリンシパル オブジェクトには、承諾した API のアクセス許可などテナント毎の情報が保存され、ユーザーの割り当てを行うことでアクセス許可を定義することもできます。</p><p>より詳細な説明については、以下の公開情報をご確認ください。</p><p>Azure Active Directory のアプリケーション オブジェクトとサービス プリンシパル オブジェクト<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/develop/app-objects-and-service-principals" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/develop/app-objects-and-service-principals</a></p><p>「エンタープライズアプリケーション」と「アプリの登録」の管理項目の違いについては以上となります。</p><h3 id="終わりに"><a href="#終わりに" class="headerlink" title="終わりに"></a>終わりに</h3><p>「アプリの登録」からアプリケーションを登録することは、特に権限が付与されていない一般ユーザーでも行うことができます。<br>制限を加えることもできますが、既定の状態としておくことを推奨しています。推奨される理由については以下の投稿も併せてご参照ください。</p><p><a href="/blog/azure-active-directory/users-can-register-applications/">「ユーザーはアプリケーションを登録できる」の設定について</a>  </p><p>ご不明な点がございましたら弊社サポートまでお気軽にお問い合わせください。</p><p>上記内容が少しでも皆様の参考となりますと幸いです。<br>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本記事は Technet Blog の更新停止に伴い &lt;a href=&quot;https://blogs.technet.microsoft.com/jpazureid/2018/12/28/enterprise-applications-app-reg
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="Application" scheme="https://jpazureid.github.io/blog/tags/Application/"/>
    
  </entry>
  
  <entry>
    <title>条件付きアクセスによる iOS 標準メール アプリの制御</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/</id>
    <published>2019-11-12T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.333Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure &amp; Identity サポート チームの倉本です。</p><p>今回は、Azure AD ユーザーの iOS 標準メール アプリへサインイン時の条件付きアクセスを利用した制御方法について紹介します。 </p><p>条件付きアクセスではアクセス元のクライアント アプリケーションを条件として設定することができますが、<br>このとき [先進認証クライアント] [Exchange ActiveSync クライアント] [他のクライアント] の 3 種の認証方式毎にアクセス制御を設定することができます。 </p><p>iOS 標準メール アプリでは iOS 11 から先進認証に対応していますが、アカウントの設定手順によって、記 3 つのどの認証方式で Exchange Online に接続するか変わります。 </p><p>設定手順により、どの認証方式を利用するか、説明します。 </p><h2 id="lt-先進認証クライアント-gt"><a href="#lt-先進認証クライアント-gt" class="headerlink" title="&lt;先進認証クライアント&gt;"></a>&lt;先進認証クライアント&gt;</h2><ol><li>[設定] - [アカウントとパスワード] - [アカウントを追加] を選択します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/modern1.png"></li><li>Exchange を選択します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/modern2.png"></li><li>Azure AD ユーザーの UPN を入力して [次へ] を選択します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/modern3.png"></li><li>ポップアップが表示されるため [サインイン] を選択します。 ※こちらの手順が Exchange ActiveSync クライアント接続との分岐点になります。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/modern4.png"></li><li>ブラウザベースの先進認証クライアントの認証画面が表示されるため、ユーザー認証を実施し、サインインを完了させます。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/modern5.png"></li></ol><h2 id="lt-Exchange-ActiveSync-クライアント-gt"><a href="#lt-Exchange-ActiveSync-クライアント-gt" class="headerlink" title="&lt;Exchange ActiveSync クライアント&gt;"></a>&lt;Exchange ActiveSync クライアント&gt;</h2><ol><li>[設定] - [アカウントとパスワード] - [アカウントを追加] を選択します。 </li><li>Exchange を選択します。 </li><li>Azure AD ユーザーの UPN を入力して [次へ] を選択します。 </li><li>ポップアップが表示されるため [手動構成] を選択します。  <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/eas1.png"></li><li>パスワードの入力を要求されるため、パスワードを入力して [次へ] を選択します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/eas2.png"></li><li>サーバー、ユーザー情報を再度入力して [次へ] を選択すると、ユーザー認証が実施され、サインインが完了します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/eas3.png"></li></ol><h2 id="lt-他のクライアント-gt"><a href="#lt-他のクライアント-gt" class="headerlink" title="&lt;他のクライアント&gt;"></a>&lt;他のクライアント&gt;</h2><ol><li>[設定] - [アカウントとパスワード] - [アカウントを追加] を選択します。 </li><li>[その他] を選択します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/legacy1.png"></li><li>[メールアカウントの追加] を選択します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/legacy2.png"></li><li>アカウント情報を入力して [次へ] を選択します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/legacy3.png"></li><li>受信メール サーバー、送信メール サーバーの情報を入力して [次へ] を選択すると、ユーザー認証が実施され、サインインが完了します。 <img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/legacy4.png"></li></ol><p>上記の 3 種類の方法で Exchange Online に接続した際の Azure AD のサインインログを確認してみましょう。 </p><img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/table1.png"><p>クライアント アプリの項目を確認すると [モバイル アプリとデスクトップ クライアント] [Exchnage ActiveSync (サポート)] [その他のクライアント、IMAP] と 3 種類が出力されていることが確認できます。</p><p>この 3 種類の項目は条件付きアクセスの [クライアント アプリ (プレビュー)] の項目に以下のように対応しています。 </p><p>[先進認証クライアント] -  [モバイル アプリとデスクトップ クライアント] </p><p>[Exchange ActiveSync クライアント] - [Exchnage ActiveSync (サポート)] </p><p>[他のクライアント] - [その他のクライアント、IMAP]  </p><img src="/blog/azure-active-directory/control-ios-nativemailapp-by-conditionalaccess/CA1.png"><p>※ iOS 標準メール アプリを使用して、”先進認証クライアント” により Exchange Online に接続した場合でも、その後の接続プロトコルとしては Exchange ActiveSync が利用されます。</p><p>条件付きアクセスの [クライアント アプリ (プレビュー)] は既定では未構成となっており、未構成状態ではブラウザーと先進認証クライアントのみにアクセス制御が適用されます。</p><p>[クライアント アプリ (プレビュー)] が未構成の状態では、仮に Exchange Online に対してアクセスを制限するようなポリシーを構成していても、<br>[Exchange ActiveSync クライアント]、[他のクライアント] で認証を行うと Exchange Online へのアクセスが可能です。 </p><p>そのため、「iOS 標準メール アプリを利用させたくない」という要件の場合 [クライアント アプリ (プレビュー)] を構成し、[Exchange ActiveSync クライアント]、[他のクライアント] についても明示的にアクセス制御の適用対象に設定します。 </p><p>MFA やデバイス ベースなどの条件付きアクセスによるアクセス コントロールは、先進認証のみに対応しているものであるため、Exchange ActiveSync、他のクライアントに適用したとしても条件の判定を行うことができず、コントロール通りの動作は実現されません。 ([Exchange ActiveSync クライアント]、[他のクライアント] に MFA やデバイス ベースのコントロールを設定することで アクセスをブロックする動作となります) </p><p>以上、iOS 標準メール アプリからの Exchange Online への 3 つの接続方法と条件付きアクセスを利用したアクセス制御方法でした。 </p><p>条件付きアクセスについてご不明な点がございましたら弊社サポートまでお気軽にお問い合わせください。 </p><p>上記の内容が少しでも皆様の参考となりますと幸いです。<br>※本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure &amp;amp; Identity サポート チームの倉本です。&lt;/p&gt;
&lt;p&gt;今回は、Azure AD ユーザーの iOS 標準メール アプリへサインイン時の条件付きアクセスを利用した制御方法について紹介します。 &lt;/p&gt;
&lt;p&gt;条件付きアクセスではアク
      
    
    </summary>
    
    
    
      <category term="Conditional Access" scheme="https://jpazureid.github.io/blog/tags/Conditional-Access/"/>
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD Connect に関する FAQ</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory-connect/azureadconnect_faq/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory-connect/azureadconnect_faq/</id>
    <published>2019-10-13T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.189Z</updated>
    
    <content type="html"><![CDATA[<p>Azure AD Connect (AADC) のお問い合わせが多いご質問について、Q&amp;A 形式でおまとめいたしました。<br>既存のドキュメントではカバーされていない動作や質問について今後も適宜内容を拡充していきますので、ご参照いただければと思います。  </p><h3 id="Q-AADC-の-Active-Stand-By-アクティブ-スタンバイ-の構成が行えるか？"><a href="#Q-AADC-の-Active-Stand-By-アクティブ-スタンバイ-の構成が行えるか？" class="headerlink" title="Q. AADC の Active / Stand By (アクティブ / スタンバイ) の構成が行えるか？"></a>Q. AADC の Active / Stand By (アクティブ / スタンバイ) の構成が行えるか？</h3><p>A. いいえ。AADC はクラスター構成を実装していません。<br>AADC を同一フォレスト内で 2 台以上構成した場合でも各 AADC で死活監視を行う実装はありません。<br>冗長構成をご検討の場合はステージング モード機能をご利用ください。<br>詳細は<a href="/blog/azure-active-directory-connect/introduction-staging-server/">こちら</a> をご参照ください。  </p><h3 id="Q-AADC-のバックアップ-リストア方法はありますか？"><a href="#Q-AADC-のバックアップ-リストア方法はありますか？" class="headerlink" title="Q. AADC のバックアップ / リストア方法はありますか？"></a>Q. AADC のバックアップ / リストア方法はありますか？</h3><p>A. いいえ。AADC の構成情報については GUI 画面上から確認し、その情報を保存する方法のみとなります。<br>同期ルールについてのみエクスポート、インポートすることは可能です。  </p><h3 id="Q-AADC-からの同期エラーの通知メールを受信した。受信者はどこで設定できるのか？"><a href="#Q-AADC-からの同期エラーの通知メールを受信した。受信者はどこで設定できるのか？" class="headerlink" title="Q. AADC からの同期エラーの通知メールを受信した。受信者はどこで設定できるのか？"></a>Q. AADC からの同期エラーの通知メールを受信した。受信者はどこで設定できるのか？</h3><p>A. 同期処理での問題について、通知は 2 通りあります。<br>それぞれ通知メールの送信元が異なります。<br> Azure AD Connect Health Agent : <a href="mailto:azure-noreply@microsoft.com" target="_blank" rel="noopener">azure-noreply@microsoft.com</a><br> 同期エンジン : <a href="mailto:MSOnlineServicesTeam@MicrosoftOnline.com" target="_blank" rel="noopener">MSOnlineServicesTeam@MicrosoftOnline.com</a><br> 各設定方法について、下記ドキュメントをご確認ください。  </p><ul><li><p>Azure AD Connect Health Agent 通知先設定手順<br>設定箇所 :  [Azure ポータル] - [Azure AD Connect] - [Azure AD Connect Health] - [同期エラー] - [通知設定]<br>設定項目 : 追加の電子メール受信者<br><a href="https://portal.azure.com/#blade/Microsoft_Azure_ADHybridHealth/AadHealthMenuBlade/SyncErros" target="_blank" rel="noopener">https://portal.azure.com/#blade/Microsoft_Azure_ADHybridHealth/AadHealthMenuBlade/SyncErros</a>  </p><p><a href="./azureadconnect_faq/AADCH_alert.pdf">AADCH_alert (PDF)</a></p></li><li><p>同期エンジン通知先設定手順<br>設定箇所 : [Azure ポータル] – [Azure Active Directory] –[通知の設定]<br>設定項目 : 連絡先の電子メール<br><a href="https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Notifications" target="_blank" rel="noopener">https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Notifications</a>  </p><p><a href="./azureadconnect_faq/SyncEngine_alert.pdf">SyncEngine_alert (PDF)</a></p></li></ul><h3 id="Q-AADC-のサポート対応中のバージョン、サポート有効期間は？"><a href="#Q-AADC-のサポート対応中のバージョン、サポート有効期間は？" class="headerlink" title="Q. AADC のサポート対応中のバージョン、サポート有効期間は？"></a>Q. AADC のサポート対応中のバージョン、サポート有効期間は？</h3><p>A. 現時点でリリース済みのすべてのバージョンがサポート対象です。<br>詳細については下記記事をご参照ください。  </p><p>Title: Azure AD Connect アップグレード手順<br>URL: <a href="https://blogs.technet.microsoft.com/jpazureid/2018/08/10/azure-ad-connect-upgrade/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2018/08/10/azure-ad-connect-upgrade/</a>  </p><h3 id="Q-AADC-をインストール時に既定で生成されるグループは？"><a href="#Q-AADC-をインストール時に既定で生成されるグループは？" class="headerlink" title="Q. AADC をインストール時に既定で生成されるグループは？"></a>Q. AADC をインストール時に既定で生成されるグループは？</h3><p>A. 下記の 4 グループが生成されます。  </p><ol><li><p><strong>ADSyncAdmins</strong><br>本グループのメンバーは、Azure AD Connect 同期サービスマネージャーにおけるすべてのアクセス権を持ちます。<br>インストール ウィザードを実行したユーザーは、既定でこのグループに追加されます。  </p></li><li><p><strong>ADSyncBrowsers</strong><br>このグループのメンバーは、WMI を使ったパスワードのリセット時にユーザーの情報を集める権限を持ちます。  </p></li><li><p><strong>ADSyncOperators</strong><br>このグループのメンバーは、Azure AD Connect 同期サービス マネージャーを操作する権限を持ちます。<br>この操作には例えば次のようなものが含まれます。  </p><ul><li>管理エージェントを実行する  </li><li>実行した結果（同期状況）の確認する  </li><li>実行履歴をファイルにエクスポートする<br>なお、このグループのメンバーは ADSyncBrowsers グループに所属している必要があります。  </li></ul></li><li><p><strong>ADSyncPasswordReset</strong><br>このグループのメンバーは、WMI を通して行われるパスワード管理のすべての操作ができる権限を持ちます。<br>なお、このグループのメンバーは ADSyncBrowsers グループに所属している必要があります。</p></li></ol><h3 id="Q-AADC-の同期間隔を変更する方法は？"><a href="#Q-AADC-の同期間隔を変更する方法は？" class="headerlink" title="Q. AADC の同期間隔を変更する方法は？"></a>Q. AADC の同期間隔を変更する方法は？</h3><p>A. 下記コマンドにて変更可能です。 </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ADSyncScheduler -CustomizedSyncCycleInterval &lt;任意の時間&gt;</span><br></pre></td></tr></table></figure><p>例 (60 分に設定する場合)</p><pre><code class="PowerShell">Set-ADSyncScheduler -CustomizedSyncCycleInterval <span class="number">00</span>:<span class="number">60</span>:<span class="number">00</span>  </code></pre><p>最も高頻度に同期を行う間隔として 30 分間隔となります。<br>CustomizedSyncCycleInterval での設定値が 30 分よりも低い数値 (10 分間隔などに) 設定された場合では、その設定値は無視され、30 分間隔で処理されます。  </p><h3 id="Q-AADC-の定期同期を普段は停止しておき、運用の必要性が生じたタイミングだけ同期させても良いか？"><a href="#Q-AADC-の定期同期を普段は停止しておき、運用の必要性が生じたタイミングだけ同期させても良いか？" class="headerlink" title="Q. AADC の定期同期を普段は停止しておき、運用の必要性が生じたタイミングだけ同期させても良いか？"></a>Q. AADC の定期同期を普段は停止しておき、運用の必要性が生じたタイミングだけ同期させても良いか？</h3><p>A. 定期的な同期が維持されるようにしてください。  </p><p>同期処理を長期間停止している前提で、改めて同期処理を開始しようとした際に、初回の Import 処理に時間がかかり且つ最終的に stopped-server-down で Import 処理が失敗する場合があります。<br>これは、数日間同期を行わない期間があった場合、処理されずに滞留していた情報があり、同期の再開時にまとめて処理されることに起因して AAD からの Delta Import 処理が AADC 内部で進まなくなる場合があるためです。</p><p>数日のような長期にわたって同期を行わないことは想定されていないため、定期的な同期を維持してください。<br>どうしても長期的な同期停止後に同期を再開する必要がある場合は、下記コマンドにて完全同期を実施してください。  </p><p>今すぐ完全同期を開始する場合  </p><pre><code class="PowerShell">Start-AdSyncSyncCycle Initial  </code></pre><p>次回のスケジュール同期を完全同期として実行する場合</p><pre><code class="PowerShell">Set-ADSyncScheduler -NextSyncCyclePolicyType Initial</code></pre><h3 id="Q-Synchronization-Service-Manager-で-Operations-タブのみ表示されている-Connectors-などが表示されない-。"><a href="#Q-Synchronization-Service-Manager-で-Operations-タブのみ表示されている-Connectors-などが表示されない-。" class="headerlink" title="Q. Synchronization Service Manager で Operations タブのみ表示されている (Connectors などが表示されない)。"></a>Q. Synchronization Service Manager で Operations タブのみ表示されている (Connectors などが表示されない)。</h3><p>A. サインインしているユーザーが ADSyncBrowse / ADSyncOperator グループにのみ所属していることが原因となります。<br>Synchronization Rules Editor でも操作は制限され、読み取り権限 (Add ボタンは表示されますが、保存不可) のみとなります。  </p><img src="/blog/azure-active-directory-connect/azureadconnect_faq/ssm_operations.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Azure AD Connect (AADC) のお問い合わせが多いご質問について、Q&amp;amp;A 形式でおまとめいたしました。&lt;br&gt;既存のドキュメントではカバーされていない動作や質問について今後も適宜内容を拡充していきますので、ご参照いただければと思います。  &lt;/p&gt;
      
    
    </summary>
    
    
    
      <category term="AAD Connect" scheme="https://jpazureid.github.io/blog/tags/AAD-Connect/"/>
    
  </entry>
  
  <entry>
    <title>ハードマッチによる同期ユーザーの切り替え方法 (AD フォレスト移行 編)</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory-connect/aadc_hardmatch/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory-connect/aadc_hardmatch/</id>
    <published>2019-10-13T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.173Z</updated>
    
    <content type="html"><![CDATA[<p>皆さん、こんにちは。日本マイクロソフト Azure Identity サポートの金子です。  </p><p>今回は、オンプレミス AD フォレストの移行を検討されている方々に向けて、既存の AD フォレストと同期している Azure AD ユーザーを新しい AD フォレストに紐付け替える方法についてご紹介したいと思います。</p><p>図にすると、このようなイメージです。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch001.jpg">  <p>既存の AD フォレスト contoso.local は既に Azure AD と同期しています。<br>この図では一つのドメインにしていますが、マルチフォレスト環境の場合、contoso.local や abc.local など複数の AD フォレストがオンプレミスに存在している場合があります。<br>そのようなマルチフォレスト環境で、会社間の合併などにより複数のドメインを contoso.com などの一つのドメインに統合する、といったような移行作業では、ここでご紹介する “ハードマッチ” と呼ばれる同期の方法をご利用いただくことをお勧めしています。  </p><p>上図をご覧いただくと気づくかと思いますが、オンプレミス側のユーザーはフォレスト移行に伴い、別のフォレストの別のユーザーに切り替わります。しかし、Azure AD 側のユーザーは同一のユーザーのままです。</p><p>したがって、Azure AD 側のユーザーを新規作成したり、Office 365 のライセンスの割り当て直すといった手間を省くことができるとともに、Azure AD Connect (AADC) の機能であるパスワード ハッシュ同期やパススルー認証、シームレス SSO など、ご利用中のオプション機能を継続してご利用いただくことが可能です。</p><p>なお、今回は移行元/移行先が判別しやすいように別ドメイン名でユーザー名を変更して移行する前提でご案内しておりますが、サーバーのリプレイスなどで同期元 AD フォレスト/ユーザーとしては移行しますが、新規で同名のドメインを別に構築し、そちらを Azure AD の同期元とするような場合も同様の考え方になります。</p><h2 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h2><p>まず最初に、現在の AADC の設定を確認します。<br>以下の手順で現在ソースアンカーを何の属性に設定しているか確認します。  </p><h3 id="ソースアンカーの確認"><a href="#ソースアンカーの確認" class="headerlink" title="ソースアンカーの確認"></a>ソースアンカーの確認</h3><p>① AADC がインストールされたサーバーで、構成ウィザードを起動します。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch002.jpg">  <p>② [現在の構成を表示] を選択し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch003.jpg">  <p>③ [ソースアンカー] に属性が表示されます。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch004.jpg">  <p>ソースアンカーが objectGUID に設定されている場合は、事前に mS-DS-ConsistencyGuid に変更しておく必要があります。  </p><p><strong>・なぜ変更する必要があるの？</strong><br>objectGUID はオブジェクト (ここではユーザーのこと) ごとに一意の変更不可の値で、別のユーザー (上図でいうと移行先のフォレストの <a href="mailto:12345@contoso.com" target="_blank" rel="noopener">12345@contoso.com</a>) には同じ値を設定できません。<br>よって、ハードマッチで切り替えを行うことができません。(ハードマッチについては後述します。)<br>一方、mS-DS-ConsistencyGUID 属性値は変更が可能なので、移行元の旧同期ユーザー (上図で言うと <a href="mailto:12345@contoso.local" target="_blank" rel="noopener">12345@contoso.local</a>) で使用している値と同じ値を移行先の新同期ユーザー (上図で言うと移行先のフォレストの <a href="mailto:12345@contoso.com" target="_blank" rel="noopener">12345@contoso.com</a>) でも保持させることができるため、ハードマッチによる切り替えを行うことができます。  </p><p><strong>・ソースアンカーを変更するリスクは？</strong><br>ソースアンカーを変更する場合のリスクを気にされる方も多いと思いますが、AADC は通常 objectGUID の値を Base64 でエンコードし、初回の同期処理で Azure AD の ImmutableID の値にセットします。<br>つまり、ソースアンカーを mS-DS-ConsistencyGuid に変更しても、ImmutableID の値は元の objectGUID をエンコードした値のまま変わりません。<br>したがって、同じ ImmutableID の値が mS-DS-ConsistencyGuid に書き戻されるため、既存の同期ユーザーが同期できなくなるといった影響は生じません。</p><h3 id="ソースアンカーの変更"><a href="#ソースアンカーの変更" class="headerlink" title="ソースアンカーの変更"></a>ソースアンカーの変更</h3><p>では、以下の手順でソースアンカーを mS-DS-ConsistencyGuid に変更します。<br>既にソースアンカーを mS-DS-ConsistencyGuid または objectGUID 以外に設定されている方は、この項目はスキップして次に進んでください。  </p><p>① 構成ウィザードを起動し、 [追加のタスク] で [ソースアンカーの構成] を選択し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch005.jpg">  <p>② [Azure AD に接続] で、Azure AD のグローバル管理者のユーザー名とパスワードを入力し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch006.jpg">  <p>③ そのまま [次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch007.jpg">  <p>④ [構成] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch008.jpg">  <p>⑤ 既定でソースアンカーの属性が mS-DS-ConsistencyGuid  に設定されるので、[終了] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch009.jpg">  <p>以上でソースアンカーの変更が完了しました。<br>構成ウィザード終了後、同期が実行され、オンプレミス AD の  mS-DS-ConsistencyGuid 属性と Azure AD の Immutable ID 属性がハードマッチします。  </p><h2 id="同期元ユーザーの切り替え"><a href="#同期元ユーザーの切り替え" class="headerlink" title="同期元ユーザーの切り替え"></a>同期元ユーザーの切り替え</h2><p>次はいよいよ、同期元のフォレストを新フォレストに切り替えます。<br>前述のとおり、切り替え方法は AADC の同期機能であるハードマッチを利用します。  </p><p>ハードマッチとは、オンプレミス AD ユーザーと Azure AD ユーザー間でソースアンカーの値を一致させることで、AADC が双方のオブジェクトを紐付けし、同期を行う処理のことをいいます。  </p><p>図で表すと、以下のような紐付けが行われます。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch010.jpg">  <p>AADC の同期処理には、他にもソフトマッチと呼ばれる ProxyAddresses もしくは UserPrincipalName (UPN) の値を一致させて紐付ける方法がありますが、ハードマッチはソフトマッチよりも優先されます。  </p><p>つまり、ハードマッチが一番優先度の高いオンプレミス AD と Azure AD 間のオブジェクトの紐付け方法になり、また既に同期済のユーザーの紐付けを変更する場合はソフトマッチによる紐付けは利用できません。<br>なぜならば、一度オンプレミス AD と同期した Azure AD 側のオブジェクトは ImmutableID というソースアンカーの属性値を持っているため、AADC が同期済みのオブジェクトと判断し、ソフトマッチによる同期をパスするためです。  </p><p>それでは、具体的に切り替えの手順を説明していきましょう。  </p><h3 id="Step-１：-AD-ユーザーを新フォレストにコピーする"><a href="#Step-１：-AD-ユーザーを新フォレストにコピーする" class="headerlink" title="Step １： AD ユーザーを新フォレストにコピーする"></a>Step １： AD ユーザーを新フォレストにコピーする</h3><p>Active Directory 移行ツール (ADMT) 等を使用して、新フォレスト (contoso.com) にユーザーをコピーします。<br>※この手順は一般的なオンプレミス AD における移行方法となりますので、本稿では割愛します。  </p><h3 id="Step-２：-既存の-AD-フォレストの同期を解除"><a href="#Step-２：-既存の-AD-フォレストの同期を解除" class="headerlink" title="Step ２： 既存の AD フォレストの同期を解除"></a>Step ２： 既存の AD フォレストの同期を解除</h3><p>次に、既存の AD フォレスト contoso.com の AADC をステージング モードに降格します。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch011.jpg">  <p>①  構成ウィザードが起動し、[構成] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch012.jpg">  <p>② [ステージング モードの構成] を選択し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch013.jpg">  <p>③ [Azure AD に接続] で、Azure AD のグローバル管理者のユーザー名とパスワードを入力し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch014.jpg">  <p>④ [ステージング モードを有効にする] にチェックを入れ、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch015.jpg">  <p>⑤ [構成] をクリックして、構成ウィザードを終了します。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch016.jpg">  <h3 id="Step-３：-ソースアンカーの値がコピーされていることを確認する"><a href="#Step-３：-ソースアンカーの値がコピーされていることを確認する" class="headerlink" title="Step ３： ソースアンカーの値がコピーされていることを確認する"></a>Step ３： ソースアンカーの値がコピーされていることを確認する</h3><p>既存の AD フォレストのユーザーの mS-DS-ConsistencyGuid の値が、新 AD フォレストのユーザーの mS-DS-ConsistencyGuid にコピーされていることを確認します。  </p><p>もしコピーができていない場合は、以下の手順で値をコピーします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch017.jpg">  <p>① contoso.local の サーバー マネージャーで、[ツール] ＞ [Active Directory ユーザーとコンピューター] を開きます。  </p><p>②  同期対象のユーザー (<a href="mailto:12345@contoso.local" target="_blank" rel="noopener">12345@contoso.local</a>) の[属性エディター] で、 mS-DS-ConsistencyGuid を選択し、[編集] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch018.jpg">  <p>③ 値をコピーし、[OK] をクリックします。  </p><p>④ メモ帳にコピーした値を貼り付けます。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch019.jpg">  <p>⑤  移行先フォレストの contoso.com の サーバー マネージャーで、[ツール] ＞ [Active Directory ユーザーとコンピューター] を開きます。  </p><p>⑥ 同期対象のユーザー (<a href="mailto:12345@contoso.com" target="_blank" rel="noopener">12345@contoso.com</a>) の[属性エディター] で、 mS-DS-ConsistencyGuid を選択し、[編集] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch020.jpg">  <p>⑦ 値を入れ、[OK] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch021.jpg">  <p>⑧ [OK] を押して、プロパティ画面を閉じます。  </p><p>すべての同期ユーザーが同様に値がコピーされていることを確認します。  </p><h3 id="Step-４：-新-AD-フォレストを同期する"><a href="#Step-４：-新-AD-フォレストを同期する" class="headerlink" title="Step ４： 新 AD フォレストを同期する"></a>Step ４： 新 AD フォレストを同期する</h3><p>新 AD フォレストの AADC を構成して、ハードマッチによる同期元ユーザーの切り替えを行います。  </p><p>① 新 AD フォレストの AADC サーバーで .msi ファイルを起動し、AADC をインストールします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch022.jpg">  <p>② 構成ウィザードが起動しますので、[ライセンス条項 および プライバシーに関する声明に同意します] にチェックを入れ、[続行] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch023.jpg">  <p>③ [カスタマイズ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch024.jpg">  <p>④ 必要項目にチェックを入れて、[インストール] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch025.jpg">  <p>⑤ 必要項目にチェックを入れて、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch026.jpg">  <p>⑥ [Azure AD に接続] で、Azure AD のグローバル管理者のユーザー名とパスワードを入力し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch027.jpg">  <p>⑦ 新フォレストのドメインを設定し、[ディレクトリを追加] して、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch028.jpg">  <p>⑧ ユーザープリンシパル名を設定し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch029.jpg">  <p>⑨ [ドメインと OU のフィルリング] を設定し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch030.jpg">  <p>⑩ [特定の属性を選択します] で mS-DS-ConsistencyGuid を選択し、[次へ] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch031.jpg">  <p>⑪ 構成ウィザードの最後まで進み、[インストール] をクリックします。  </p><img src="/blog/azure-active-directory-connect/aadc_hardmatch/aadc_hardmatch032.jpg">  <p>以上で同期元ユーザーの切り替え作業は完了になります。  </p><h3 id="＜補足＞"><a href="#＜補足＞" class="headerlink" title="＜補足＞"></a>＜補足＞</h3><ol><li>ソフトマッチによるユーザーの切り替えは推奨しておりません。<br> AADC の同期処理 (オブジェクトの紐づけ) には、ハードマッチができない場合の次の手段として、proxyAddresses 属性、または UserPrincipalName 属性の値を一致させて紐づけを行う “ソフトマッチ” という方法があります。<br> ただし、今回のように既に同期済みの オンプレミス AD ユーザーを別のユーザーに変更する場合にソフトマッチを使用しますと、同期を解除した後にまず ImmutableID を削除する必要がありますが (ImmutableID が設定されたオブジェクトに対しては AADC はソフトマッチを行わないため) 、<strong>ImmutableID の削除はサポートしておりません。</strong><br> したがいましてソフトマッチによる切り替えは技術的には可能ですが、推奨しておりません。  </li></ol><p>上記内容が皆様の参考となりますと幸いです。  </p><p>ご不明点などございましたら、ぜひ弊社サポートまでお問い合わせください。<br>※本情報の内容 (リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;皆さん、こんにちは。日本マイクロソフト Azure Identity サポートの金子です。  &lt;/p&gt;
&lt;p&gt;今回は、オンプレミス AD フォレストの移行を検討されている方々に向けて、既存の AD フォレストと同期している Azure AD ユーザーを新しい AD フォレス
      
    
    </summary>
    
    
    
      <category term="AAD Connect" scheme="https://jpazureid.github.io/blog/tags/AAD-Connect/"/>
    
  </entry>
  
  <entry>
    <title>パスワードで攻撃は防げない - Your Pa$$word doesn&#39;t matter</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/your-password-doesnt-matter/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/your-password-doesnt-matter/</id>
    <published>2019-09-17T09:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.437Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Azure Identity サポートチームの鈴木です。</p><p>本記事は <a href="https://techcommunity.microsoft.com/t5/Azure-Active-Directory-Identity/Your-Pa-word-doesn-t-matter/ba-p/731984" target="_blank" rel="noopener">Your Pa$$word doesn’t matter</a> を意訳したものになります。ご不明点等ございましたらご連絡ください。</p><hr><p>セキュリティに関して組織の方針を決定できる方との会話の中で 「これまでに漏洩したことがあるパスワードは絶対に再度使用するな」「長いパスワードを使用したほうがいい」「パスワードよりも長いパスフレーズを使えばいい」などなどの話題がでます。実はこれらは、これまでの研究<a href="https://aka.ms/passwordguidance" target="_blank" rel="noopener">結果</a>と異なっており、マイクロソフトが毎日何億ものパスワードベースの攻撃を防いでいる状況から見ますと正しくありません。多要素認証 (MFA) や脅威の検出の仕組みなど本当に価値のあるものにではなく、パスワード規則に着目しても、気晴らし程度の効果しかありません。</p><p>ここでは、パスワードの構成や長さに関しては（ほとんど）意味がないということをお伝えしていきます。</p><p>その理由を理解するために、パスワードに対する主な攻撃としてどのようなものがあるか、そして、攻撃者の観点でパスワード自体をどういった要素に分解できるか見てみましょう。ご存知のとおり、すべての攻撃者はパスワードを盗み、アカウントにアクセスすることを目的とします。<br>実際のところ攻撃者は簡単な攻撃手法が見つからない、かつ攻撃対象にその価値があると判断した場合に限って、セキュリティのカンファレンスなどで耳にするような本当に奇抜で、クリエイティブな手法で攻撃を仕掛けます。</p><p>ここでは、パスワードを突破するいくつかの最新の手口を見てみましょう。<br>(掲載している統計データは Azure Active Directory 上のアカウント (ハイブリッドまたはクラウドのみ) のものであり、オンプレミス環境の情報は含まれていません。)</p><table><thead><tr><th align="left"><strong>攻撃</strong></th><th align="left"><strong>別名</strong></th><th align="left"><strong>頻度</strong></th><th align="left"><strong>メカニズムの難易度</strong></th><th align="left"><strong>攻撃を招くユーザーの行動</strong></th><th align="left"><strong>パスワードはセキュリティ対策に重要か？</strong></th></tr></thead><tbody><tr><td align="left">クレデンシャル スタッフィング (Credential Stuffing)</td><td align="left">攻撃のリプレイ (Breach replay) 、リスト型攻撃 (list cleaning)</td><td align="left">非常に高い - マイクロソフトの ID 管理システムでは 1 日に 2000 万のアカウントが攻撃対象となっています。</td><td align="left">非常に容易: 侵害されたサイトから資格情報を収集して、ほかのシステムとマッチするか試します。 List cleaning 用のツールは容易に手に入ります。</td><td align="left">人間である限り攻撃を招く可能性があります。新しいパスワードを考えるのはユーザーの負担となるため、 <a href="https://www.darkreading.com/informationweek-home/password-reuse-abounds-new-survey-shows/d/d-id/1331689" target="_blank" rel="noopener">62% のユーザーがパスワードを再利用してしまいます</a> 。</td><td align="left"><strong>いいえ</strong> - 攻撃者は正確なパスワードを保持しているため。</td></tr><tr><td align="left">フィッシング (Phishing)</td><td align="left">中間者攻撃 (Man-in-the-middle)、資格情報の傍受 (credential interception)</td><td align="left">非常に高い: 全受信メールの 0.5% を占めます。</td><td align="left">容易: 娯楽や恐怖をあおるメールを送り、本物そっくりの偽サイトへユーザーを誘導します。資格情報を抜き取ります。Modlishka などのツール使うことで容易に偽サイトを構築できます。</td><td align="left">人間である限り攻撃を招く可能性があります。人はだれしも興味をそそられたり、不安をあおられたり、警告を無視したりすることがあります。</td><td align="left"><strong>いいえ</strong> - ユーザーは攻撃者にパスワードを教えてしまっているため。</td></tr><tr><td align="left">キー入力のログ (Keystroke logging)</td><td align="left">マルウェア、 盗聴</td><td align="left">低い。</td><td align="left">中間: マルウェアが入力されたユーザー名とパスワードを記録するが、さらに通常は他にもすべての情報を記録するため、攻撃者はそれらを解析する必要があります。</td><td align="left">リンクのクリック、管理者として実行、マルウェアのスキャンを行わないこと。</td><td align="left"><strong>いいえ</strong> - マルウェアが入力された情報を正確に窃取しているため。</td></tr><tr><td align="left">お客様環境での探索 (Local discovery)</td><td align="left">ゴミ箱あさり (Dumpster diving)、物理的な探索 (physical recon)、ネットワークのスキャン (network scanning)</td><td align="left">低い。</td><td align="left">難しい: ユーザーのオフィスや書類からパスワード情報を探り出します。だれでもアクセスできる共有フォルダーを探す。 コードやメンテナンス スクリプトにある資格情報をスキャンします。</td><td align="left">パスワードをメモしておくこと (パスワードが複雑な場合や、SSO が導入されていない場合に起こります) 。無人の (サービス) アカウントに対してパスワードを使用すること。</td><td align="left"><strong>いいえ</strong> - 正確なパスワードが発見されてしまうため。</td></tr><tr><td align="left">脅迫による強奪 (Extortion</td><td align="left">脅迫メール (Blackmail)、インサイダーの脅威 (Insider threat)</td><td align="left">非常に低い - 映画だとかっこいいんだけど。</td><td align="left">難しい: アカウントの保持者を脅したり、金銭で釣るなどして、資格情報を得ます。</td><td align="left">人間である限り完全に防ぐことができません。</td><td align="left"><strong>いいえ</strong> - 正確なパスワードを知らせてしまうため。</td></tr><tr><td align="left">パスワード スプレー</td><td align="left">推測 (Guessing)、hammering-low-and-slow</td><td align="left">非常に高い: 攻撃の 16% 以上を占めます。1 日に数十万アカウントが突破されることもあります。毎日数百万アカウントが攻撃されています。</td><td align="left">容易: 簡単に手に入るユーザー リストを使用して、非常に多くのユーザー名に対して同じパスワードで攻撃します。速度を調節したり、多くの IP アドレスに分散したりすることで、検出されないようにしています。容易で安価に利用できるツールがあります。</td><td align="left">人間である限り完全に防ぐことはできません。qwerty123 や Summer2018! といったよくあるパスワードを使用します。</td><td align="left"><strong>いいえ</strong> - <strong>ただし</strong>、攻撃者がよく試すパスワードを使用しない限りは安全です。</td></tr><tr><td align="left">ブルート フォース攻撃 (Brute force)</td><td align="left">データベースの抜き取り (Database extraction)、クラッキング (cracking)</td><td align="left">非常に低い。</td><td align="left">様々: データを抜き取るためにネットワークに侵入します。標的の組織が脆弱な場合 (管理者アカウントがパスワードのみで保護されているなど) の場合は容易ですが、物理的なセキュリティや運用のセキュリティを含め、データベースが適切に防御されていれば困難です。パスワードにハッシュ クラッキングを実施します。難易度は使用する暗号によって異なります。詳細は以下を参照。</td><td align="left">なし。</td><td align="left"><strong>いいえ</strong> - <strong>ただし</strong> 、あまり使用されないパスワード (パスワード マネージャー) を使用しているか、クリエイティブなパスフレーズを使用している場合は影響があります。詳細は以下を参照。</td></tr></tbody></table><p>パスワード スプレー攻撃とブルート フォース攻撃に対しては、どのようなパスワードを設定しているかが影響を及ぼします。読み進める前に、まだの場合は、まず <a href="https://aka.ms/securitysteps" target="_blank" rel="noopener">MFA を有効にしましょう</a> 。次にこれら 2 つに対抗するのに「良いパスワード」とは何か掘り下げてみましょう。</p><h2 id="パスワード-スプレー"><a href="#パスワード-スプレー" class="headerlink" title="パスワード スプレー"></a>パスワード スプレー</h2><p>はい、これは簡単で、容易に推測されないパスワードを設定すればよいです。<br>しかしここで言う容易とは、文字どおりの <strong>容易</strong> とは少し異なります。<br>昨年我々のチームが防いだパスワード スプレー攻撃を見てみると、攻撃中に約 10 種類のパスワード (少ないときには 2 種類、多いときには 50 種類のパスワード) を使って攻撃していることが分かっています。</p><p>パスワード スプレー攻撃に関しては、検出が可能であり、一度検出されるとログイン サーバーは攻撃をシャットアウトすることが可能です。<br>攻撃者が早く攻撃するほど早く検出されるので、攻撃はゆっくりと日数をかけて行われます。<br>つまり、パスワードは一つ一つある程度の確度で可能性が高そうなものを推測して行われるということを意味します。攻撃者は検出される前に成果を最大化する必要があるため、すでに漏洩した資格情報から作成したヒストグラム (どのような値が多いか、そのばらつきをグラフ化したもの) を使用し、攻撃を行います。</p><p>下のグラフはパスワード スプレー攻撃の最近の一例です。<br>各色は失敗したパスワード要求のハッシュ値を表し、グラフの山はその時間枠において同じハッシュ値で複数回失敗したことを表しています。<br>グラフから 2 つの異なる攻撃者がいるとみられます。低い山では、1 時間あたり約 4,000 アカウントに 22 種類のハッシュで 45 回のパスワード要求を試行しており、高い山では 2 週間以上にわたって 1 時間あたり約 10,000 アカウントで 15 種類のハッシュを試行しています。<br>攻撃者が複数のハッシュを同時に使用していることがわかります。</p><img src="/blog/azure-active-directory/your-password-doesnt-matter/graph.png"><p>もしあなたのパスワードが攻撃者の試行するリストに入っていないのであれば、影響が及ぶ心配はありません。<br>攻撃者たちはほとんどの場合同じリストを使って攻撃するため、同じパスワードで試行します。<br>以下にマイクロソフトへの攻撃でよく使用される上位 10 個のパスワードを示します。</p><ol><li>123456</li><li>password</li><li>000000</li><li>1qaz2wsx</li><li>a123456</li><li>abc123</li><li>abcd1234</li><li>1234qwer</li><li>qwe123</li><li>123qwe</li></ol><p>ご覧のとおり、特に手の込んだものではありません。ユーザーがこれらのパスワードを選択する主な理由は、上位ビットが単純であるためです。キーボードに沿って指を動かすだけで、上記の上位 10 個のパスワードが出来上がります。攻撃者は、過去に起きたパスワード漏洩の統計情報をもとにこれらのパスワードを試行しますが、より標的を絞った高度な攻撃者は、あなたの会社のパスワードの複雑さと有効期限のルールも考慮して、より精度の高い攻撃を仕掛けてくる可能性があります。例えば、パスワードの複雑さと有効期限のルールを使用している場合、「Summer2019!」はほとんどの複雑さの要件を満たし、そして簡単に覚えられます (パスワードの複雑さも有効期限のルールも明らかに有害ですので、どちらも使用しないことを推奨します。その理由については <a href="https://aka.ms/passwordguidance" target="_blank" rel="noopener">https://aka.ms/passwordguidance</a> を参照ください)。また、攻撃者は従業員が具体的に使いそうなパスワードを巧みに試行するかもしれません。<br>たとえば、マイクロソフトに対しては、「Office2019」、「Azure19」、または「XboxOne」を試す可能性があります。</p><p>しかし、平均的な攻撃者は検出システムに対する応答が非常に遅く、少しの推測しか試すことはできません。したがって、あなたのパスワードが、攻撃者が試行している短いリストに含まれている場合には問題となります。管理者は、パスワードの作成または変更時に、これらの一般的に攻撃されるパスワードの使用を防ぐ必要があります。マイクロソフト アカウントでは、このアプローチを長年使用してきました (Xbox、Skype、Outlook、OneDrive などの一般消費者向けサービスの認証システム) 。この時点で、パスワード スプレー攻撃を効果的に防いでいます (Azure Active Directory にも <a href="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-password-ban-bad" target="_blank" rel="noopener">Password Protection</a> と呼ばれる同様のシステムがあります) 。</p><p>したがって、パスワード スプレー攻撃に関して言えば、あなたのパスワードは (よく使われるパスワード トップ 50 に入っていなければ) 問題ありません！</p><h2 id="ブルート-フォース-データベースからの抜き取りとクラッキング"><a href="#ブルート-フォース-データベースからの抜き取りとクラッキング" class="headerlink" title="ブルート フォース (データベースからの抜き取りとクラッキング)"></a>ブルート フォース (データベースからの抜き取りとクラッキング)</h2><p>これは「データベースが抜き取られてしまった場合」の話です。ほとんどの組織は、セキュリティの侵害が生じたときに口を閉ざすため、Active Directory ドメイン コントローラーを利用している場合にどのくらいの頻度でこういった攻撃が起きているか、よい数字を我々も持っていません。クラウド上の資格情報のハッシュについては、抜き取りを検出するためにシステム内に沢山の検出システムを展開しています (セキュリティの理由でそれらの検出システムの詳細についてはここでは説明しません) 。我々のクラウド システムから資格情報が抜き取られたという痕跡はありませんが、長年にわたり他の大規模システムに起きた知名度の高いハッキングの話などを耳にすると、私たちも謙虚で警戒を怠ってはいけないと教えてくれます。そういったハッキングは必ず起こりえます。</p><p>話が理解しやすくなるよう、ここで少し暗号について解説します。最初にいくつか定義の説明をします: </p><ul><li>ハッシュ化 (Hashing) とは一方行の、復元不能なパスワード変換を意味します。マイクロソフトでは、任意の文字列を 256 ビットのシーケンスに変換する SHA256 を使用しています。この方法ではオリジナルのパスワードを復元することは数学的にできません。</li><li>反復 (Iterating) とはアルゴリズムを繰り返すこと、つまり一回ごとに同じ量の計算能力を消費することを意味します。</li><li>ソルト (Salt) とはハッシュする前のパスワードに何かを追加することを意味します。よって同じパスワードでもユーザーが異なれば違うハッシュ値が得られます。Salt がない場合、攻撃者にパスワードが突破されてしまうと、同じパスワードを使用しているすべてのアカウントにアクセスできるようになってしまいます。Salt がある場合は、攻撃者は 1 度に 1 つのアカウントを攻撃することになります。なぜならハッシュを事前に計算することはできず、またデータベース全体を検索しても同じ値は得られないからです (Salt は「秘密のもの」ではなく、通常はハッシュとともに保管されます。ハッシュを手に入れた攻撃者は Salt も手に入れています) 。</li></ul><p><a href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-password-hash-synchronization" target="_blank" rel="noopener">Azure Active Directory</a> はソルト付きのパスワードを SHA256 で 1000 回反復し、ユーザー毎のパスワード ハッシュを生成しています。もし入力となるパスワードがオンプレミスから同期されている場合、オンプレミスのパスワード ハッシュを受け取り、同じスキームを使って再度ハッシングします。つまりパスワードを直接保管していません。アルゴリズムを反復することで、生成されたハッシュの比較を行い、ログイン時に受け取ったパスワードと事前に設定されたパスワードが同じであるかを確認します。これに加えて、パスワードを保管しているデータベースは暗号化されています (データの暗号化もデータを攻撃者から読み取れないようにしますが、鍵を使って元の値を復元することが可能です) 。そして Bitlocker を使って暗号化されたドライブに保管されます。</p><p>オンプレミスの AD 環境からデータを抽出するために、攻撃者はドメイン コントローラーからファイルを抜き取る必要があります。通常、セキュリティ ポリシーにもよりますが、これは攻撃者がネットワーク内でドメイン管理者の状態になっていることを意味します。これにはある程度の労力が必要です。Azure Active Directory のクラウド環境からデータを抽出するためには、攻撃者は環境にアクセスする権限、データベースを復号すること、もし物理的に盗むなら Bitlocker の鍵を突破する力も必要です。これにはさらに相当な労力を要するでしょう。パスワードは見つけたり (再利用)、推測したり (スプレー)、うまく尋ねたり (フィッシング)、して手に入れることもできますから、通常はそんなに手間のかかる攻撃をすることはありません。</p><p>しかし、攻撃者がハッシュをたくさん保存されたデータベースを手に入れたとしましょう。さてどうするでしょうか。</p><ol><li><p><strong>クラッキング用のマイニング マシンを入手する。</strong> 暗号通貨市場により、コストが非常に低下しており、2019 年 7 月現在、$20,000 (約 210 万円) で SHA256 に対して毎秒 <a href="https://en.bitcoin.it/wiki/Mining_hardware_comparison" target="_blank" rel="noopener">1000 億 (100B) を超えるパスワードをクラックするマイニング マシン</a> を構築することが可能になっています。組織的な犯罪や政府であれば、膨大な予算を持っており、量子コンピューターが実現すればこの数値をさらに加速させていくでしょう。</p></li><li><p><strong>アルゴリズムやソルト、その組織独自のパスワード規則 (最小 / 最大長さや、複雑さなど) を調べる。</strong> これは通常容易で、マイクロソフトの場合は公開もしています。もし知られていない場合でも、攻撃者はシステムの中で少なくとも１つのアカウントをすでにコントロールしており、アルゴリズムをリバース エンジニアリングして、任意のパスワードを挿入することができると想定しておいた方が良いです。</p></li><li><p><strong>パスワードの初期リストを作る。</strong> まずは、漏洩、フィッシングまたはパスワード スプレー攻撃で明らかになった 5 億以上もの <a href="https://www.troyhunt.com/introducing-306-million-freely-downloadable-pwned-passwords/" target="_blank" rel="noopener">パスワード</a> を取得します。これは「誰もが考えたことのあるすべてのパスワード」と考えてください。一部のガイダンスでは、このリストのすべてのパスワードを禁止しています。まずは試しにそのすべてのパスワードを禁止してみて、ユーザーがパスワードを選択する際にどの程度うまくいくか確認ください (うまくいかないでしょう)。</p></li><li><p><strong>標的のアカウントに対して、その一覧のすべてのパスワードを試す。</strong> 統計的には、これだけでもユーザー パスワードの 70% が突破されてしまいます。 5 億 (500M) は 10 億 (1B) の半分で、家庭用のマイニング マシンでも、1 秒間に 1000 億 (100B) のパスワードを推測できます。つまり、完全なリストでも 5ms しか時間はかかりません。攻撃者はマイニング マシンを用いて毎秒 200 アカウントに対して完全なリストを走らせます。そうです、つまりほとんどのアカウントが一瞬にして陥落してしまうのです。このため、データベースからの抜き取りを検知するのは、異常なログオンを検知するのと並んで非常に重要ですから、なんにせよ MFA を有効にしておくことが大事です！</p></li><li><p>標的となるアカウントのパスワードがまだ突破されていない場合は、 <strong>すべての人気フレーズ、歌詞、ニュース見出し</strong> 、検索エンジン、ウィキペディア、人気記事などからピックアップできるもののリストを作成します。こういったリストは、ハッシュ ブレーカー コミュニティと呼ばれるパスワードのクラッキング コミュニティで事前にパッケージ化されていて容易に手に入ります。これにより、さらにユーザー パスワードの 5 - 7% が突破される可能性があります。</p></li><li><p>まだ標的のアカウントが突破できない場合、攻撃者は <strong>マイニング マシンと時間が許す限りあらゆる組み合わせのパスワードを試行します</strong> 。キーボードから簡単に打てる 96 文字で仮定すると、パスワードのそれぞれの値の位置に 96 通りのパターンが考えられます。このような力ずく (ブルート フォース) の手法では、1 秒あたり 1000 億個のパスワードを試行するマイニング マシンでも、非常にコストが高くなります。実際にはこのマイニング マシンを使用すると、攻撃者は 1 日で最大 8 文字、3 か月で 9 文字、21 年で 10 文字、そしてそれ以上の文字は 96 倍の時間を費やせば、すべてのパスワードを試すことができますが、実際には攻撃者は 9 文字でお手上げになります。ここまでやれば、おそらくさらに 5% のパスワードが突破されています。</p><table><thead><tr><th align="left">パスワードの長さ</th><th align="left">可能な文字列の組み合わせ</th><th align="left">要する秒数</th><th align="left">要する分数</th><th align="left">要する時間</th><th align="left">要する日数</th></tr></thead><tbody><tr><td align="left">6</td><td align="left">782,757,789,696</td><td align="left">8</td><td align="left">0.13</td><td align="left">0.002</td><td align="left">0.00009</td></tr><tr><td align="left">7</td><td align="left">75,144,747,810,816</td><td align="left">751</td><td align="left">12.52</td><td align="left">0.21</td><td align="left">0.01</td></tr><tr><td align="left">8</td><td align="left">7,213,895,789,838,340</td><td align="left">72,139</td><td align="left">1,202.32</td><td align="left">20.04</td><td align="left">0.83</td></tr><tr><td align="left">9</td><td align="left">692,533,995,824,480,000</td><td align="left">6,925,340</td><td align="left">115,422.33</td><td align="left">1,923.71</td><td align="left">80.15</td></tr><tr><td align="left">10</td><td align="left">66,483,263,599,150,100,000</td><td align="left">664,832,636</td><td align="left">11,080,543.93</td><td align="left">184,675.73</td><td align="left">7,694.82</td></tr></tbody></table><p>(この表から、反復の回数を増加させても基本的に攻撃は線形に減少していくことが分かります。反復の回数を 1,000 回から 10,000 回に増やしても、追加で 1 文字を得ることさえできません。次の 1 文字を得るためには、100,000 回反復する必要があり、これには 100 倍のサーバーおよびラックの領域、およびエネルギー消費量が必要となります。)</p></li><li><p>最後に、攻撃者は予測可能なパターン (例えば、常に大文字で始まり、小文字が 3-6 文字続き、2-4 文字の数字が続き、最後に感嘆符 (!) を追加する、など) を使用して、使用されている可能性の高い大体 12 文字の推測可能なパスワードのリストを作成します。数パーセントと小さいですが更にアカウントが得られます。</p></li><li><p>ソルトのため、これらはすべて <strong>1 つの</strong> アカウントに対する操作です (しかし、成功確率は約 85% です)。攻撃者はパスワードがほしい次のアカウントに対して 1 からやり直す必要があります。</p></li></ol><p>重要なのは、パスワードが漏洩した場合、12 文字より長くこれまで使用したことがない場合 (つまりパスワード マネージャーで生成したパスワード) を除いて、あなたのパスワードは攻撃者には無力であるということです。パスワード マネージャーを使えるユーザーもいると思いますが、利用が禁止されているユーザーも一部にはいるでしょう。パスワード マネージャーを使用している場合は、可能な限り最大の長さのパスワードを使用しましょう。すでにコピーアンドペーストしているのであれば、文字列が長くても使いにくくなるということはないでしょうから。パスワード マネージャーには独自の問題 (ユーザービリティや価値あるパスワード情報が集約されているため攻撃の標的となりやすいなど) がありますが、パスワード マネージャーは長くてランダムな文字列を生成するため (こういった攻撃に対して) 意味ある違いが生じます。</p><p>または、単に MFA を有効にするのでもよいです。究極的には、データベースの抜き取りとクラッキングによるセキュリティ侵害は、推測やフィッシング、またはリプレイと同じとも言えます。攻撃者は奪い取ったパスワードを使用してログインする必要がありますから、その時点で MFA が安全装置となってくれるでしょう。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>パスワードスプレー攻撃 (辞書に載っていたりするような推測されやすいパスワードを避ける) またはブルート フォース攻撃 (8 文字以上のパスワードを使用するか、本当に気になる場合はパスワード マネージャーを使用する) を除いて、パスワードでは攻撃を防げません。なんというか、あなたのパスワードであれば大丈夫とは言いづらいというか、推測、漏洩、フィッシングまたは再利用される可能性を考えると、 <strong>間違いなく</strong> だめでしょう。あなたのパスワードでは攻撃を防げませんが、MFA は防げます！調査によると、<a href="https://aka.ms/securitysteps" target="_blank" rel="noopener">MFA を使用すれば</a>、アカウントが侵害される可能性は 99.9% 以上低くなります。</p><p>より洗練された MFA のフィッシングや、より巨大なクラッキング リグ (マイニング マシン) (量子コンピューターを含む) が増えてきたこともあり、現在 <strong>本当に</strong> 必要とされているのは、FIDO2 のようなクライアント ハードウェアに統合された、暗号的に強力な資格情報です。ただし、現在および次世代の資格情報の評価については、別のブログでお話ししたいと思います。</p><p>皆さんどうかご無事で！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Azure Identity サポートチームの鈴木です。&lt;/p&gt;
&lt;p&gt;本記事は &lt;a href=&quot;https://techcommunity.microsoft.com/t5/Azure-Active-Directory-Identity/Your-Pa-wo
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="Security" scheme="https://jpazureid.github.io/blog/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Azure からの &quot;User at risk detected&quot; というメールについて</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/User-at-risk-detected/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/User-at-risk-detected/</id>
    <published>2019-09-12T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.285Z</updated>
    
    <content type="html"><![CDATA[<p>2019/9/11 に Office 365 / Azure AD の管理者に対して突然 User at risk detected という件名でメールが送信されるという問題が発生しました。</p><p>今回の事象は、弊社 Azure AD サービスにおける問題に起因して発生しております。<br>ご利用の皆様には突然このようなメールが届いてしまったことにより、混乱をまねくこととなり、確認のお手間をおかけしてしまいましたこと深くお詫び申し上げます。</p><p>このメールは、Azure AD Identity Protection の機能により送信されたメールとなり、通常は、Azure AD Premium Plan 2 (以降 AAD P2) ライセンスを利用している環境の管理者にのみ送信されるものとなります。しかしながら、Azure AD サービス上の問題により、ライセンスを持たない方にも送信されてしまいました。</p><p>通知メールに記載されているリンクをクリックすると、Azure ポータルの Azure AD Identity Protection の画面に遷移しますが、AAD P2 のない環境では、Azure AD Identity Protection を使用することができないため、アクセス権が無いという画面が表示されます。</p><p>今回の問題につきましては、すでに開発部門にて問題の修正を実施済みです。<br>修正後は、これまで通り、AAD P2 を利用されていない環境の管理者にはメールが送信されない動作となっています。</p><h4 id="lt-詳細-gt"><a href="#lt-詳細-gt" class="headerlink" title="&lt;詳細&gt;"></a>&lt;詳細&gt;</h4><p>このメールは、ご利用の Azure AD ディレクトリにおいて、Azure がリスクがあると判断したユーザー (リスクのフラグ付きユーザー) を検出したことを知らせるメールです。<br>AAD P2 利用環境では、メールに含まれるリンクをクリックし、確認できる Azure AD Identity Protection のブレードから、この検出の詳細を確認することができます。<br>そこで確認をした情報を基に、管理者にて、本当に危険であるかどうかを判断して、必要に応じてパスワード リセットなどの対策を行うことを意図しています。<br>    ※ Azure AD で検知したリスクであっても、実際のご利用方法によっては問題のない場合があります。</p><p>また、リスクのフラグ付きユーザーは、Azure ポータルの [Azure Active Directory] – [危険なユーザー (リスクのフラグ付きユーザー)] でも確認することができます。<br>    ※ AAD P2 の環境よりも制限された情報量になります。</p><p>Azure portal におけるリスクのフラグ付きユーザー レポート<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/reports-monitoring/concept-user-at-risk" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/reports-monitoring/concept-user-at-risk</a></p><p>また、リスクとして検出されるイベント (リスク イベント) の詳細については、下記の公開情報に記載があります。<br>    ※ リスク イベントとして検出される条件の詳細は、第三者に悪用されないようセキュリティ上非公開となっておりますため、こちらに記載されている情報以上のものはご案内できません。</p><p>Azure Active Directory リスク検出<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/reports-monitoring/concept-risk-events" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/reports-monitoring/concept-risk-events</a></p><p>今回誤ってメールが送信されていますが、実際にセキュリティ上のリスクがあるかという点について確認するためには Azure AD Identity Protection のブレードから確認する必要があるのですが、そのためには繰り返しになりますが Azure AD Premium Plan 2 のライセンスが必要です。 Azure AD Premium Plan 2 については試用版も用意されていますので、検出されたリスクに対して詳細を確認されたい場合には次の手順で試用版のサインアップをお願いいたします。試用版の有効期限は 30 日で、試用期限が経過しますと同じテナントでは再試用できないことはご注意ください。</p><ol><li><p>全体管理者で Micrsoft 365 管理センター <a href="https://admin.microsoft.com/" target="_blank" rel="noopener">https://admin.microsoft.com/</a> にサインインします。</p></li><li><p>左側のメニューから [課金情報] - [サービスを購入する] を選択します。</p></li></ol><img src="/blog/azure-active-directory/User-at-risk-detected/step2.png"><ol start="3"><li>その他のおすすめカテゴリから [セキュリティ] を選択し、 Azure Active Directory Premium P2 をクリックします。</li></ol><img src="/blog/azure-active-directory/User-at-risk-detected/step3.png"><ol start="4"><li>[無料試用版を入手する] をクリックし、次の画面で [無料トライアル] をクリックします。</li></ol><img src="/blog/azure-active-directory/User-at-risk-detected/step4.png"><p>ご不明な点等ございましたら、是非弊社サポート サービスをご利用ください。<br>※本情報の内容 (リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2019/9/11 に Office 365 / Azure AD の管理者に対して突然 User at risk detected という件名でメールが送信されるという問題が発生しました。&lt;/p&gt;
&lt;p&gt;今回の事象は、弊社 Azure AD サービスにおける問題に起因して
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="Security" scheme="https://jpazureid.github.io/blog/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>iPad 上の iOS13 の挙動変更により Azure AD 条件付きアクセス ポリシーの動作に影響が生じる</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/evaluate-and-update-any-ca-policies-for-ipados/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/evaluate-and-update-any-ca-policies-for-ipados/</id>
    <published>2019-09-12T05:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更新情報-2019-11-22"><a href="#更新情報-2019-11-22" class="headerlink" title="更新情報 (2019/11/22)"></a>更新情報 (2019/11/22)</h2><p>マイクロソフトではこの問題に対応するため条件付きアクセスの動作を更新しました。現在、条件付きアクセスは iPadOS を macOS としてではなく、iOS として認識します。このため、iOS に対して適用した条件付きアクセス ポリシーは iPadOS の更新前と同じように適用されます。</p><p>Safari と Apple のネイティブ メール アプリで依然として挙動が異なる場合は、一度ネイティブ メール アプリからサインアウトおよびサインインしなおして動作をご確認ください。また下記資料に記載のとおり、条件付きアクセスの認証セッション管理をご利用いただくことも可能です。その他の詳細については以下の資料をご覧ください。</p><p>Action Required: Evaluate and update Conditional Access policies after new iPadOS release<br><a href="https://support.microsoft.com/en-us/help/4521038/action-required-update-conditional-access-policies-for-ipados" target="_blank" rel="noopener">https://support.microsoft.com/en-us/help/4521038/action-required-update-conditional-access-policies-for-ipados</a></p><h2 id="当初の公開内容"><a href="#当初の公開内容" class="headerlink" title="当初の公開内容"></a>当初の公開内容</h2><p>皆さんこんにちは、Azure AD サポート チームの高田です。</p><p>本日は、iPad を iOS13 にアップグレードした際に生じる、Azure AD 条件付きアクセス ポリシーへの影響についてお知らせいたします。詳細については、上記の資料にも公開されておりますが、機械翻訳となりますので本ブログでも概要について案内させていただきます。</p><h3 id="変更内容の概要"><a href="#変更内容の概要" class="headerlink" title="変更内容の概要"></a>変更内容の概要</h3><p>Apple 社では 9 月 30 日に iPadOS (iPad 用の新 OS) のリリースを予定しています。本リリースにより新しい iPadOS にアップデートされた iPad では、Safari ブラウザーやネイティブのメール アプリが自身の OS を iOS ではなく、macOS として通知 (User Agent を提示) するようになります。つまり、新しい iPadOS にアップグレードした iPad は、iOS ではなく、macOS として認識されることとなります。</p><h3 id="変更により生じうる影響"><a href="#変更により生じうる影響" class="headerlink" title="変更により生じうる影響"></a>変更により生じうる影響</h3><p>これにより、これまで Azure AD 条件付きアクセス ポリシーにて “デバイス プラットフォーム” を iOS として選択していても、新しい iPadOS にアップデートした iPad ではこの “デバイス プラットフォーム” = iOS の条件に合致しなくなります。結果として、iOS 用に定義した多要素認証などのアクセス制御が動作しなくなます。</p><p>条件付きアクセス ポリシーにおいて、デバイス プラットフォームとして iOS と macOS とで異なるアクセス制御を実施している場合、iPad が macOS として認識されることで予期せぬ動作を招く可能性があります。このため、上述の動作を考慮の上、macOS に対しても適切なポリシー設定をご検討ください。恐れ入りますが、Apple 社の本動作変更により、条件付きアクセス ポリシーでは iPad と macOS を区別することは困難となります。</p><p>なお、より詳細な影響範囲や影響が発生しうるシナリオの例などは上記サポート技術情報のページにまとめられておりますのでご参照ください。また本内容についてより詳細の確認が必要な際は Azure ポータルから Azure AD サポートチームまでお問い合わせを頂戴できればと思います。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;更新情報-2019-11-22&quot;&gt;&lt;a href=&quot;#更新情報-2019-11-22&quot; class=&quot;headerlink&quot; title=&quot;更新情報 (2019/11/22)&quot;&gt;&lt;/a&gt;更新情報 (2019/11/22)&lt;/h2&gt;&lt;p&gt;マイクロソフトではこの問題に
      
    
    </summary>
    
    
    
      <category term="Conditional Access" scheme="https://jpazureid.github.io/blog/tags/Conditional-Access/"/>
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>エラーコード 700003 の対処策について</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/what-to-do-errorcode-700003/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/what-to-do-errorcode-700003/</id>
    <published>2019-09-02T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.433Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、 Azure Identity の平形です。<br>今回は最近多くお問い合わせ頂いております 700003 エラーについてのご説明と一般的な対応手順をお伝えします。</p><h2 id="エラーコード-700003-とは何か"><a href="#エラーコード-700003-とは何か" class="headerlink" title="エラーコード 700003 とは何か"></a>エラーコード 700003 とは何か</h2><p>最近こんなエラーを見たことはありますか？</p><img src="/blog/azure-active-directory/what-to-do-errorcode-700003/fig1-what-todo-errorcode-700003.jpg"><p>上記で表示されているエラー コード 700003 とは、「クライアントが提示したデバイス情報が Azure AD 上に存在しない」場合に発生するエラーです。<br>このエラーが多く起きるのは Windows 10 デバイスをご利用されており、かつ Edge や Internet Explorer をご利用されている、もしくは Office アプリケーションご利用のタイミングです。<br>本ブログでは、このエラーの対処策と、簡単に「デバイス情報」とは何かをご説明します。</p><h2 id="デバイス情報とは何か"><a href="#デバイス情報とは何か" class="headerlink" title="デバイス情報とは何か"></a>デバイス情報とは何か</h2><p>Windows 10 を Azure AD に参加させた場合、あるいはデバイスを登録することで、Windows 10 側にはデバイスを AAD に登録したという情報、 Azure AD にはデバイス情報が、それぞれ格納されます。<br>この状態で Azure AD に所属するユーザーがログオン、あるいはデバイスを登録したユーザーがログオンするタイミングで Primary Refresh Token (プライマリ更新トークン = PRT) と呼ばれるトークンを取得するようになります。<br>この PRT は、ブラウザーや Office クライアントを利用した Azure AD (Office 365) へのアクセスで利用され、改めてユーザー名、パスワードを入力することなく、シングル サインオンを実現するために利用されます。</p><p>他に PRT が利用されるケースとしては、条件付きアクセスのアクセス制御にあります「デバイスは準拠しているとしてマーク済みである必要があります」「ハイブリッド Azure AD 参加済みのデバイスが必要」といったデバイスの状態に依存したコントロールを利用する場合が挙げられます。<br>この状態を Azure AD はどのように察知しているか、気になった人もいると思いますが、実は PRT にはデバイス情報が含まれるため、 PRT を Azure AD に提示することでこれらの制御ができるようになっています。</p><p>なお、 Office のバージョンにも依存しますが、最新のバージョンでは Windows 10 に対する Office のインストール、セットアップ時に自動的に Azure AD へのデバイス登録をおこなうため、明示的に Azure AD への登録、参加を実施していなくともデバイスが Azure AD に登録され、 PRT 取得、シングル サインオンが行われます。</p><p>改めて PRT に含まれる情報を図にまとめますと次のようになります。</p><img src="/blog/azure-active-directory/what-to-do-errorcode-700003/fig2-what-todo-errorcode-700003.jpg"><p>プライマリ更新トークンについては以下の公開情報がございますので、気になった方は参照ください。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/concept-primary-refresh-token" target="_blank" rel="noopener">プライマリ更新トークンとは</a></li></ul><p>さて、今回の問題ですが、クライアントが PRT の取得を試みた場合、あるいは既に取得していた PRT を Azure AD に提示した際に Azure AD が提供されたデバイス情報に紐づく情報を Azure AD 上に確認できなかった場合に、このエラーコード 700003 が発生します。<br>(クライアントが PRT の取得を試みる際にもクライアントが保持するデバイス情報を Azure AD に提示する動作が行われ、その時に該当のものが見つからない場合にもエラーになります)</p><p>以下の図は、既に取得済みの PRT を Azure AD に提供した場合のケースで問題が発生したパターンを示しています。</p><img src="/blog/azure-active-directory/what-to-do-errorcode-700003/fig3-what-todo-errorcode-700003.png"><h2 id="エラーコードが-700003-が発生した時の対処策"><a href="#エラーコードが-700003-が発生した時の対処策" class="headerlink" title="エラーコードが 700003 が発生した時の対処策"></a>エラーコードが 700003 が発生した時の対処策</h2><p>端的に言えば現在クライアント上に存在するデバイス情報を削除し、必要に応じて再度 Azure AD に登録します。<br>Azure AD へのデバイス登録には 3 種類 (*1, 注釈は最下部に記載) ありますので、その状態に合わせて登録処理を行う必要があります。<br>現在の状態は dsregcmd /status コマンドで確認することが可能です。<br>この実行結果を基に、現在デバイスがどの状態かを確認することが可能です。</p><p>大まかなフローは以下の通りです。</p><img src="/blog/azure-active-directory/what-to-do-errorcode-700003/fig4-what-todo-errorcode-700003.png"><p>以下にそれぞれのシナリオごとの対処手順を記載します。</p><h3 id="WorkplaceJoined-が-YES-の場合"><a href="#WorkplaceJoined-が-YES-の場合" class="headerlink" title="WorkplaceJoined が YES の場合"></a>WorkplaceJoined が YES の場合</h3><p>Azure AD 登録済み状態 (Azure AD Registered) と認識されています。<br>これを解除するには、 Windows 10 の [設定] - [アカウント] - [職場または学校アカウント] より、 Azure AD のバッジを選択し、「切断」を選択する必要があります。</p><img src="/blog/azure-active-directory/what-to-do-errorcode-700003/fig5-what-todo-errorcode-700003.png"><p>切断後、再度「+ 接続」より Azure AD への再登録を実行してください。 (*2, 注釈は最下部に記載)</p><h3 id="AzureADJoined-のみ-YES-の場合"><a href="#AzureADJoined-のみ-YES-の場合" class="headerlink" title="AzureADJoined のみ YES の場合"></a>AzureADJoined のみ YES の場合</h3><p>Azure AD 参加済み状態 (Azure AD Joined) と認識されています。<br>これを解除・再登録を行う場合は dsregcmd /forcerecovery コマンドを実行します。 (*2, 注釈は最下部に記載)<br>このコマンドは管理者権限で実行する必要があります。<br>管理者権限でないユーザーで実行した場合には以下のエラーが表示されます。</p><img src="/blog/azure-active-directory/what-to-do-errorcode-700003/fig6-what-todo-errorcode-700003.png"><p>管理者権限で実行すると以下の画面が表示されるので、「サインイン」を選択します。</p><img src="/blog/azure-active-directory/what-to-do-errorcode-700003/fig7-what-todo-errorcode-700003.png"><p>再度サインインを行い、 Azure AD 参加を行い直すと以下の画面が表示されますのでサインアウト・サインインをして作業完了です。</p><img src="/blog/azure-active-directory/what-to-do-errorcode-700003/fig8-what-todo-errorcode-700003.png"><h3 id="DomainJoined-および-AzureADJoined-の両方が-YES-の場合"><a href="#DomainJoined-および-AzureADJoined-の両方が-YES-の場合" class="headerlink" title="DomainJoined および AzureADJoined の両方が YES の場合"></a>DomainJoined および AzureADJoined の両方が YES の場合</h3><p>ハイブリッド Azure AD 参加済み状態 (Hybrid Azure AD Joined) と認識されています。<br>この場合、管理者権限でコマンド プロンプトを起動し、 dsregcmd /leave コマンドを実行します。<br>実行後、 OS を再起動してサインインし直すことでデバイスが自動的に再登録されます。 (*2 *3, 注釈は最下部に記載)</p><h3 id="上記を実行しても解消しない場合"><a href="#上記を実行しても解消しない場合" class="headerlink" title="上記を実行しても解消しない場合"></a>上記を実行しても解消しない場合</h3><p>上記手順を実行しても解消しない場合には、一度 Azure AD 参加・登録を一度解除し、「AzureADJoined/WorkplaceJoined」両方が No の状態であることを確認した上で以下のレジストリを確認します。</p><p> HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\AAD\Storage</p><p>上記レジストリ配下に「<code>https://login.microsoftonline.com</code>」というレジストリが残っているかを確認します。<br>残留している場合には削除し、 Azure AD への再登録を実行ください。<br>その後事象が解消したかを確認します。<br>上記はハイブリッド Azure AD 参加環境下で事前に Azure AD デバイス登録を行っていたデバイスで残留する場合があります。<br>なお、レジストリ削除は今回のエラーが発生した時のみ実行し、それ以外の時には実行しないようお願い致します。</p><p>基本的な対処策は上記の通りですが、これらを行っても事象が解消しない場合はお気軽に弊社までお問い合わせください。</p><p>*1 3 種類の登録状態は以下の公開情報を参照ください。<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/overview#getting-devices-in-azure-ad" target="_blank" rel="noopener">デバイス ID とは</a><br>Azure AD 登録済み・ Azure AD 参加済み・ハイブリッド Azure AD 参加済みの 3 種類があります。</p><p>*2 Intune 等の MDM 登録も行っている場合は切断・再登録ができない場合もあります。この場合は MDM 側のリタイアもお試しください。<br>*3 これは既定値です。環境によっては自動的に再登録しないように制御している場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、 Azure Identity の平形です。&lt;br&gt;今回は最近多くお問い合わせ頂いております 700003 エラーについてのご説明と一般的な対応手順をお伝えします。&lt;/p&gt;
&lt;h2 id=&quot;エラーコード-700003-とは何か&quot;&gt;&lt;a href=&quot;#エラーコード
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="トラブルシューティング" scheme="https://jpazureid.github.io/blog/tags/%E3%83%88%E3%83%A9%E3%83%96%E3%83%AB%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/"/>
    
      <category term="Primary Refresh Token" scheme="https://jpazureid.github.io/blog/tags/Primary-Refresh-Token/"/>
    
      <category term="PRT" scheme="https://jpazureid.github.io/blog/tags/PRT/"/>
    
  </entry>
  
  <entry>
    <title>フェデレーション ドメイン用(AD FS あり) Hybrid Azure AD Join を一から構成する</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/</id>
    <published>2019-09-01T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.349Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、 Azure Identity の山口です。<br>今回は AD FS を利用するフェデレーション ドメイン環境における Hybrid Azure AD Join の構成手順をご紹介します。</p><h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>AD FS を利用する Federation Domain 環境の Hybrid Azure AD Join の環境構築は、下記 Microsoft 公開情報を参考に行えば、構成は問題なく行えます。</p><p>チュートリアル:フェデレーション ドメイン用のハイブリッド Azure Active Directory 参加の構成<br>URL:<a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-federated-domains" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-federated-domains</a></p><p>フェデレーション ドメインはマネージド ドメイン環境とは違い、前提として、Azure AD にカスタム ドメインがフェデレーションとして登録されている必要があります。<br>具体的には、「Azure ポータル」 → 「Azure Active Directory」 → 「カスタム ドメイン」の順にクリックし、下記画面ショットのとおり、カスタム ドメインのフェデレーションにチェックが入っていることを確認します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/001.jpg"><p>もしくは、AD FS サーバーで下記コマンド レットを実行することで確認ができます。<br>まず、PowerShell を管理者として実行します。</p><p>Connect-MsolService コマンド レットを実行します。<br>フェデレーション先の Azure AD のグローバル管理者の資格情報を入力します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/002.jpg"><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/003.jpg"><p>PowerShell にて「get-msoldomain」と実行すると、下記のとおり、カスタム ドメインがフェデレーション ドメインであることが確認できます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/004.jpg"><h2 id="環境について"><a href="#環境について" class="headerlink" title="環境について"></a>環境について</h2><p>Azure AD テナント (カスタム ドメインがフェデレーション ドメインとして登録済)<br>オンプレミス AD 兼 Azure AD Connect (1.3.21.0) on Windows Server 2019 Datacenter<br>AD FS サーバー on Windows Server 2019 Datacenter<br>Windows 10 (1809)</p><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ol><li>Azure AD Connect の設定</li><li>クレーム ルールが追加されたことを確認する</li><li>Hybrid Azure AD Join 構成までの流れ</li><li>PRT を取得する。</li><li>おわりに</li></ol><h2 id="Azure-AD-Connect-の設定"><a href="#Azure-AD-Connect-の設定" class="headerlink" title="Azure AD Connect の設定"></a>Azure AD Connect の設定</h2><p>フェデレーション ドメイン環境においては、以下 2 つの設定が必須となります。</p><ol><li>SCP (サービス接続 ポイント)</li><li>クレーム ルール</li></ol><p>以前までは上記を手動で構成する必要がありましたが、現在では Azure AD Connect により容易に構成することが可能です。<br>マイクロソフトとしても最新の Azure AD Connect を利用して上記を構成することを推奨しています。<br>従って、本手順でも Azure AD Connect を利用して SCP と クレーム ルールを構成します。</p><p>Azure AD Connect へようこその画面で「構成」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/021.jpg"><p>追加のタスクの画面で「ユーザー サインインの変更」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/022.jpg"><p>Azure AD に接続の画面にて Hybrid Azure AD Join を構成する Azure AD テナントの全体管理者 (グローバル管理者) の資格情報を入力し「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/005.jpg"><p>ユーザー サインインの画面にて、サインイン方式を「AD FS とのフェデレーション」を選択し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/023.jpg"><p>ドメイン管理者の資格情報の画面にて、オンプレミス AD の資格情報を入力し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/052.jpg"><p>AD FS ファームの画面にて、「既存の AD FS ファームを使用する」を選択した状態で「参照」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/024.png"><p>フェデレーション サーバーの選択画面にて AD FS サーバーのホスト名を入力後、虫眼鏡マークにて検索を行い、構成済みの AD FS サーバーの情報が表示されることを確認し、「OK」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/006.jpg"><p>サーバー名に正しい値がセットされることを確認し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/007.jpg"><p>Azure AD ドメインにて、オンプレミス AD とフェデレーション関係にある、カスタム ドメインを選択し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/008.jpg"><p>Azure AD 信頼の画面にて、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/025.jpg"><p>下記画面ショットのとおり、Azure AD の証明者利用者の信頼のバックアップ、Azure AD 証明書利用者信頼の更新、カスタム ドメインの Azure AD 信頼の構成が行われます。<br>「構成」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/053.jpg"><p>構成が完了しましたの画面にて、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/026.jpg"><p>接続の検証画面にて、フェデレーションの接続性の検証を行い、接続検証を行います。<br>問題がなければそのまま「終了」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/009.jpg"><p>次に、Hybrid Azure AD Join の構成を行います。Azure AD Connect を再度起動し、「構成」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/027.jpg"><p>追加のタスクの画面で「デバイス オプションの構成」を選択し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/028.jpg"><p>概要画面より「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/029.jpg"><p>Azure AD に接続画面に Hybrid Azure AD Join としてデバイスを登録する Azure AD テナントの全体管理者 (グローバル管理者) の資格情報を入力し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/010.jpg"><p>デバイス オプションの画面にて「ハイブリット Azure AD 参加の構成」が選択されていることを確認し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/030.jpg"><p>デバイスのオペレーティング システムの画面にて、「Windows 10 以降のドメインに参加しているデバイス」にチェックを入れて「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/031.jpg"><p>SCP の構成画面について説明します。<br>マネージド ドメイン環境においては、認証サービスが「Azure Active Directory」になりますが、フェデレーション ドメイン環境では「フェデレーション サービス名」が認証サービスになります。具体的には、 AD FS に対してコンピューター アカウントが認証されてトークンを取得し、 Azure AD DRS に対してデバイスを登録する動作になります。つまり、認証を Azure AD で行うのか、 AD FS が行うのか、という選択をここでしています。</p><p>今回はフェデレーション ドメイン環境の Hybrid Azure AD Join 環境を構成するので、「フェデレーション サービス名 (sts.xxx.work)」を選択します。<br>(デバイス登録のフローについては後述します)</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/011.jpg"><p>認証サービスをフェデレーション サービス名を選択し、「追加」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/012.jpg"><p>オンプレミス AD のエンタープライズ管理者の資格情報が要求されますので、資格情報を入力し、「OK」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/013.jpg"><p>エンタープライズ管理者の情報がセットされることを確認し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/014.jpg"><p>フェデレーションの構成画面にて、 AD FS サーバーの管理者の資格情報を入力し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/015.jpg"><p>Azure AD 信頼の画面にて、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/032.jpg"><p>構成の準備完了の画面にて「構成」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/016.jpg"><p>構成が完了しましたの画面にて、「終了」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/033.jpg"><h2 id="クレーム-ルールが追加されたことを確認する"><a href="#クレーム-ルールが追加されたことを確認する" class="headerlink" title="クレーム ルールが追加されたことを確認する"></a>クレーム ルールが追加されたことを確認する</h2><p>Azure AD Connect のユーザー サインインの変更の Azure AD 信頼の画面にて、クレーム ルールが追加されました。<br>具体的には、下記手順にて確認ができます。</p><ol><li>AD FS サーバーに管理者ユーザーでサインインします。</li><li>スタート → Windows 管理ツール → AD FS の管理の順にクリックします。</li><li>証明書利用者信頼→ Microsoft Office 365 Identity Platform → 要求発行ポリシーの編集の順にクリックします。</li></ol><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/034.jpg"><p>発行変換規則に下記のとおり、1 から 19 までのクレーム ルールが追加されていることを確認します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/035.png"><p>ちなみに以下が、クレーム ルールが追加される前の状態になります、明らかに増えていることが分かります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/036.jpg"><p>Hybrid Azure AD Join として必須のクレーム ルールは下記 の 3 つになります。<br>これらの情報は手動で Hybrid Azure AD Join を構成する際に参照する下記ドキュメントを参考にしてください。</p><p>チュートリアル:ハイブリッド Azure Active Directory 参加済みデバイスを手動で構成する<br>アカウントの種類の要求を発行する<br>URL:<a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-manual#issue-account-type-claim" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-manual#issue-account-type-claim</a></p><p>①クレーム名： Issue accounttype for domain-joined computers</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/037.jpg"><p>オンプレミスのコンピューター アカウントの objectGUID を発行する</p><p>URL:<a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-manual#issue-objectguid-of-the-computer-account-on-premises" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-manual#issue-objectguid-of-the-computer-account-on-premises</a></p><p>②クレーム名： Issue onpremobjectguid for domain-joined computers</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/038.jpg"><p>オンプレミスのコンピューター アカウントの objectSID を発行する<br>URL:<a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-manual#issue-objectsid-of-the-computer-account-on-premises" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-manual#issue-objectsid-of-the-computer-account-on-premises</a></p><p>③クレーム名： Pass through primary SID</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/039.jpg"><h2 id="Hybrid-Azure-AD-Join-構成までの流れ"><a href="#Hybrid-Azure-AD-Join-構成までの流れ" class="headerlink" title="Hybrid Azure AD Join 構成までの流れ"></a>Hybrid Azure AD Join 構成までの流れ</h2><p>マネージド ドメイン環境の Hybrid Azure AD Join の流れと、フェデレーション ドメイン環境の Hybrid Azure AD Join の流れは異なります。</p><p>まず、マネージド ドメイン環境の場合のフローは下記になります。</p><h4 id="マネージド-ドメイン環境の場合"><a href="#マネージド-ドメイン環境の場合" class="headerlink" title="マネージド ドメイン環境の場合"></a>マネージド ドメイン環境の場合</h4><ol><li>Windows 10 コンピューターを、オンプレミス AD に参加します。</li><li>オンプレミス AD 上のコンピューター オブジェクトの userCertificate 属性に Windows 10 コンピューターを認証するための証明書が当該コンピューターにより、追加されます。</li><li>オンプレミス AD 上のコンピューター オブジェクトの userCertificate 属性値に証明書が追加されると、Azure AD Connect がコンピューター オブジェクトを Azure AD に同期します。 (通常は 30 分間隔)</li><li>当該コンピューター上のタスク スケジューラにより証明書を使用して、 Azure Active Directory 上にデバイスが登録します。<br> (このタイミングで dsregcmd /status のコマンドレットをたたくと AzureADJoined の値が YES になります)</li><li>オンプレミス AD と Azure AD 間で同期しているユーザーで当該の Windows 10 コンピューターにサインインしたとき、Azure AD による認証後、サインインしたユーザーの PRT (Primary Refresh Token) が発行され、Hybrid Azure AD Join として Azure AD (Office 365) にサインインできます。<br> (このタイミングで dsregcmd /status のコマンドレットをたたくと AzureADPrt の値が YES になります)</li></ol><p>図式化するとこんな感じです。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/040.jpg"><h4 id="フェデレーション-ドメイン環境の場合"><a href="#フェデレーション-ドメイン環境の場合" class="headerlink" title="フェデレーション ドメイン環境の場合"></a>フェデレーション ドメイン環境の場合</h4><p>フェデレーション ドメイン環境の場合はフローが異なります。<br>SCP を構成したときを思い出してください、 Azure Active Directory ではなくて、フェデレーション サービス名 (AD FS) を指定していました。<br>つまり、Windows 10 のコンピューター アカウントが SCP を参照した結果、認証先は Azure AD ではなくて AD FS サーバーであることがわかり、 AD FS に対してトークンを要求する動作となります。フローを箇条書きに書くと以下のとおりとなります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/041.jpg"><ol><li>Windows 10 コンピューターにユーザーがサインインした際に、Automatic-Device-Join のタスクが稼働します。</li><li>サービス接続ポイント (SCP) へ接続を行い Azure AD への接続を試行します。</li><li>Azure AD 側でフェデレーション ドメインであることを判定されます。</li><li>AD FS にコンピューター アカウントが認証され、認証トークンが発行されます。</li><li>クライアント端末が発行されたトークンを Azure AD に提供し、デバイス登録が実施されます。<br> (このタイミングで dsregcmd /status のコマンドレットをたたくと AzureADJoined の値が YES になります)</li><li>デバイス認証用の証明書鍵がデバイス内にインポートされます。</li><li>オンプレミス AD と Azure AD 間で同期しているユーザーで当該の Windows 10 コンピューターにサインインしたとき、AD FS による認証後、サインインしたユーザーの PRT (Primary Refresh Token) が発行され、Hybrid Azure AD Join として Azure AD (Office 365) にサインインできます。<br> (このタイミングで dsregcmd /status のコマンドレットをたたくと AzureADPrt の値が YES になります)</li></ol><p>上述のとおり、フェデレーション ドメイン環境の場合は Azure AD Connect で同期を行わなくても Hybrid Azure AD Join が構成できますが、以下の理由で Azure AD Connect によるデバイス同期を行うことを推奨しています。</p><p>例えば、オンプレミス AD 側の構成が変更されて、オンプレミス AD と Azure AD 間のデバイス構成情報に差分が発生したとします。<br>その場合、Azure AD Connect がないと、デバイスの差分を補ってくれません。<br>極端な話をすると、オンプレミス AD 側で 1000 台 Hybrid Azure AD Join を構成するフォレストから別のフォレストに移動した場合、Azure AD Connect がないと、デバイス情報を手動で削除しない限りは、Azure AD 側に残ったままになります。</p><p>上記のような運用面のコストを考えると、Azure AD Connect  によりデバイスを同期しておくことをお勧めします。</p><p>ちなみに、フェデレーション ドメイン環境の場合も Windows 10 コンピューターの userCertificate 属性に証明書がセットされる動作になります。<br>実際に見てみましょう。</p><p>今回、Windows10-18091 というコンピューターを Hybrid Azure AD Join させますが、下記のとおり、userCertificate 属性に証明書がセットされています。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/042.jpg"><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/043.jpg"><p>続いて、Azure AD Connect  側の同期ポリシーを見てみます。</p><p>Azure AD Connect の同期ルールを見てみると、 userCertificate 属性が ISNOTNULL (証明書がセットされていることが必須) であることが分かります。<br>[Synchronization Rules Editor] から Direction を「Outbound」を選択し、[Out to AAD - Device Join SOAInAD]を選択後に「View」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/044.jpg"><p>Scoping Filter をクリックすると、 userCertificate が ISNOTNULL であることがわかります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/045.jpg"><p>つまり、フェデレーション ドメイン環境にて Hybrid Azure AD Join を構成し、Azure AD Connect にてデバイス同期を行っている場合 、マネージド ドメイン環境と同じように、userCertificate 属性に証明書がセットされている場合も Azure AD にデバイスが Hybrid Azure AD Join として同期されますし、上記のフェデレーション ドメインのフローによりデバイスが Hybrid Azure AD Join として登録されるという <strong>2 通りの方法が存在する</strong>ということになります。<br>(厳密にどちらの方法でデバイスが登録されたかを都度都度追いかける必要はありません。方法が 2 通りあるということを覚えていただければと思います。)</p><h5 id="エンド-ポイントの注意点"><a href="#エンド-ポイントの注意点" class="headerlink" title="エンド ポイントの注意点"></a>エンド ポイントの注意点</h5><p>上記フェデレーション ドメインのフロー図において、AD FS にトークンを取得するためにアクセスするエンド ポイントは「/adfs/services/trust/13/windowstransport」と記載されています。つまりこのエンドポイントが有効になっていないと、デバイスの登録に失敗します。<br>下記画面ショットにありますが、デフォルトでは「/adfs/services/trust/13/windowstransport」が無効になっているので手動で有効にする必要があります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/046.jpg"><p>エンドポイント「/adfs/services/trust/13/windowstransport」を選択し、右クリックより「有効」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/047.jpg"><p>AD FS サービスの再起動を要求されるので、「OK」を押して画面を閉じます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/048.jpg"><p>再度同じエンドポイントを選択し右クリックより「プロキシに対して有効にする」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/049.jpg"><p>同じように AD FS サービスの再起動を要求されるので、「OK」を押して画面を閉じます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/050.jpg"><p>サービス画面より Active Directory フェデレーション サービス (AD FS) を右クリックし、「再起動」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/051.jpg"><p>この時点で Azure AD Join は完了しているので確認します。<br>Windows 10 コンピューターにログオンし、dsregcmd /status コマンド レットを実行すると、下記のとおり、AzureAdJoined が YES になっていることが分かります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/017.jpg"><h1 id="PRT-を取得する。"><a href="#PRT-を取得する。" class="headerlink" title="PRT を取得する。"></a>PRT を取得する。</h1><p>PRT を取得するためには、Azure AD に同期済みのオンプレミス AD ユーザーでログオンする必要があるのは、フェデレーション ドメインの場合でも同様です。<br>Azure AD に同期済みの下記「<a href="mailto:test001@xxx.work" target="_blank" rel="noopener">test001@xxx.work</a>」で Windows 10 コンピューター (Windows10-18091) にログオンします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/055.jpg"><p>資格情報を入力してログオンします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/056.jpg"><p>コマンドプロンプトを起動し、このタイミングで dsregcmd /status のコマンドレットをたたくと AzureADPrt の値が YES になることが確認できます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-federated/018.jpg"><h1 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h1><p>今回はフェデレーション ドメイン環境における Hybrid Azure AD Join の構築手順をご紹介しました。<br>フェデレーション ドメイン環境の場合も Azure AD Connect により、SCP およびクレーム ルールを構成することができます。</p><p>本 Blog ではマネージド ドメイン環境とフェデレーション ドメイン環境の Hybrid Azure AD Join の登録フローの違いを説明しました。<br>フェデレーション ドメイン環境の場合は、 Azure AD Connect は必須ではないですが、オンプレミス AD 側はデバイスの削除を行うと、同期を行えないため Azure AD 上でのデバイス情報に差分が発生する、というデメリットがあります。</p><p>確実にデバイスを管理したい、という方は Azure AD Connect によるデバイス同期をお勧めします。<br>(今回 Hybrid Azure AD Join も Azure AD Connect で構成してますので、 Azure AD Connect を使わない手はないと思います)</p><p>ご不明な点等ございましたら、是非弊社サポート サービスをご利用ください。</p><p>※本情報の内容 (リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、 Azure Identity の山口です。&lt;br&gt;今回は AD FS を利用するフェデレーション ドメイン環境における Hybrid Azure AD Join の構成手順をご紹介します。&lt;/p&gt;
&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; c
      
    
    </summary>
    
    
    
      <category term="AD FS" scheme="https://jpazureid.github.io/blog/tags/AD-FS/"/>
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="Hybrid Azure AD Join" scheme="https://jpazureid.github.io/blog/tags/Hybrid-Azure-AD-Join/"/>
    
      <category term="Azure AD Connect" scheme="https://jpazureid.github.io/blog/tags/Azure-AD-Connect/"/>
    
      <category term="Federated Domain" scheme="https://jpazureid.github.io/blog/tags/Federated-Domain/"/>
    
  </entry>
  
  <entry>
    <title>Azure AD の条件付きアクセスに関する Q&amp;A</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/qanda-conditional-access/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/qanda-conditional-access/</id>
    <published>2019-07-01T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.409Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は Technet Blog の更新停止に伴い <a href="https://blogs.technet.microsoft.com/jpazureid/2017/12/04/conditional-access-qa/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2017/12/04/conditional-access-qa/</a> の内容を移行したものです。<br>元の記事の最新の更新情報については、本内容をご参照ください。</p></blockquote><p>こんにちは、Azure &amp; Identity サポート チームの高田です。</p><p>今回はお問い合わせをよくいただく、Azure AD の条件付きアクセスについてです。</p><blockquote><p>2019/07/02 条件付きアクセスの動作の考え方やアクセス制御の適用順序など <a href="https://techcommunity.microsoft.com/t5/Azure-Active-Directory-Identity/Azure-AD-Mailbag-Conditional-Access-Q-amp-A/ba-p/566492" target="_blank" rel="noopener">Azure Active Directory Identity Blog</a> に投稿された内容を追記しました。</p></blockquote><p>お問い合わせの多いご質問について、Q&amp;A 形式でおまとめいたしました。既存のドキュメントではカバーされていない動作や質問について今後も適宜内容を拡充していきますので、ご参照いただければと思います。</p><hr><p><span style="color:blue">Q</span>. Office 365 を利用しているが、条件付きアクセスを利用できますか？</p><p><span style="color:red">A</span>. はい、利用可能です。Office 365 をご利用いただいているお客様は、認証基盤として Azure AD をご利用いただいている状態となります。そのため、追加で Azure AD Premium のライセンスを購入いただくことで、利用可能になります。</p><hr><p><span style="color:blue">Q</span>. 条件付きアクセスはどのように動作しますか？</p><p><span style="color:red">A</span>. 条件付きアクセスは、トークンの発行を保護する仕組みです。条件付きアクセス ポリシーが評価されるのは初回の認証の後、もしくは新しいアクセス トークンを取得するためにリフレッシュ トークンが利用された時です。考え方として重要な点は、条件付きアクセスは “クラウド アプリ” に選択されているものをトークンの消費者 (オーディエンス) と考え、各ポリシーはこのトークンの消費者を保護するものであるということです。</p><p>例えば、新しく条件付きアクセスポリシーを作成して “クラウド アプリ” として Exchange Online を選択し、アクセス制御で “多要素認証を要求する” を選択したとします。これにより、条件付きアクセスは、何らかのアプリが Exchange Online のトークンを要求した時に多要素認証を強制します。この場合、トークンの消費者 (オーディエンス) は Exchange Online となります。</p><p>トラブルシューティングの参考となるよう、Azure AD のサインイン ログにはリソースとリソース ID が表示されます。リソースの値がトークンの消費者 (オーディエンス) を示します。この例では、User3 が Outlook Mobile アプリを利用して Office 365 Exchange Online のトークンを要求し、正常にトークンが発行されたことを示します。</p><img src="/blog/azure-active-directory/qanda-conditional-access/CA1.png"><p>全ての “アクセス権の付与” の制御が行われた後で、セッションの制御が適用されます。</p><hr><p><span style="color:blue">Q</span>. アプリケーションにユーザーとグループの割り当てを行うことと、条件付きアクセスポリシーを利用することはどう違いますか？</p><p><span style="color:red">A</span>. Azure AD では、ユーザーがアプリにアクセスすることを許可するのに 2 つの方法があります。一つは、アプリの設定である “ユーザー割り当てが必要ですか？” を “いいえ” にして、ゲスト ユーザーを含むすべてのユーザーにアクセスを許可する方法で、もう一つは、上記設定を “はい” にして、アクセス可能なユーザーとグループを明示的に指定する方法です。アプリにアクセスできるユーザーを制御するのであればこれがベストな方法です。</p><p>Azure AD はアプリに許可されたユーザーにトークンを発行します。しかし、アクセス リクエストが条件付きアクセス ポリシーの適用対象となった場合、ユーザーがアプリケーションに割り当てられている場合でも、トークンを発行してもらうためには個別のアクセス リクエストに対するアクセス制御を満たさなければなりません。これにより、アプリケーションへの割り当てだけではなく、アクセス リクエストの条件に応じてトークンの発行をより細かく制御できるようになります。</p><hr><p><span style="color:blue">Q</span>. 条件付きアクセスのポリシーを複数作成し、適用の優先順位をつけることは可能でしょうか。</p><p><span style="color:red">A</span>. いいえ、優先順位を作成することはできません。条件付きアクセスではそれぞれのポリシーが独立しており、条件に合致したものが適用されます。複数のポリシーが適用される場合、対応するすべてのアクセス制御が強制されます。</p><hr><p><span style="color:blue">Q</span>. どのような順序でアクセス制御が適用されますか。</p><p><span style="color:red">A</span>. ブロックが常に優先されます。これに次いで、次のような順序でアクセス制御が強制されます。</p><ol><li>多要素認証</li><li>承認されたクライアント アプリ / アプリの保護ポリシー</li><li>マネージド デバイス (準拠済み / Hybrid Azure AD Join)</li><li>カスタム コントロール (利用規約を含む)</li><li>セッション制御 (ブラウザー セッションの有効期限など)</li></ol><hr><p><span style="color:blue">Q</span>. デバイスが信頼されているとどのようにして判断していますか。</p><p><span style="color:red">A</span>. 信頼されたデバイスというのは、Azure AD に登録されたマネージド デバイスであり、Intune のようなサポートされる MDM ソリューションで準拠済みとしてマークされたものか、オンプレミス Active Directory フォレストのメンバーであるものです。マネージド デバイスとして認識されるためには、Azure AD に登録されていることが前提となりますが、これだけでは条件付きアクセスでアクセスの制御を行うには不十分です。</p><p>どのようにマネージド デバイスが条件付きアクセスにより信頼されたと認識されるかについて、以下に図にまとめております。</p><img src="/blog/azure-active-directory/qanda-conditional-access/CA2.png"><hr><p><span style="color:blue">Q</span>. クライアント アプリがブラウザーであるか、モバイル アプリであるか、デスクトップ クライアントであるかをどのように識別していますか。</p><p><span style="color:red">A</span>. Azure AD 上にあるアプリケーションの登録状況をもとに判断しています。アプリケーションが、コンフィデンシャル クライアントもしくは SAML を利用するアプリとして登録されている場合、クライアントをブラウザーと判断します。アプリケーションがパブリック クライアントとして登録されている場合、クライアントをモバイルもしくはデスクトップ アプリと判断します。</p><p>コンフィデンシャル クライアントおよびパブリック クライアントの定義については、<a href="https://tools.ietf.org/html/rfc6749#section-2.1" target="_blank" rel="noopener">こちら</a> の OAuth 2.0 仕様をご覧ください。</p><hr><p><span style="color:blue">Q</span>. クライアント アプリが動作しているデバイス プラットフォームをどのようにして認識していますか。</p><p><span style="color:red">A</span>. 条件付きアクセスポリシーでは、特定のデバイス プラットフォームを対象にすることが可能です。この機能はポリシーの構成により柔軟性を提供するとともに、条件を満たすデバイス プラットフォームにのみアクセス制御を強制できるようにするためです。</p><p>デバイス プラットフォームは、User Agent の文字列を解析することで判定されます。この User Agent 文字列は、クライアント アプリケーション側で指定され、Web のプロトコルでのみ利用されます。User Agent の文字列は、POP3 や SMTP など条件付きアクセスがサポートするいくつかのプロトコルには存在しません。このため、User Agent の文字列は存在しないことや不正確である場合があり、この文字列に依存しないようにすることが重要です。多くのブラウザーでは、開発者ツールを用いることで User Agent の文字列を任意の値に変更することが可能です。</p><p>お客様が最初にポリシーを展開しようとする際、iOS や Android など特定の対象デバイス プラットフォームを指定されることがよくあります。これはわかりやすいアプローチではありますが、プラットフォームの判定は上述のとおり確実ではないことにご注意いただく必要があります。最終的に、条件付きアクセスの選択肢にないデバイス プラットフォームが出てきたときにどうするかも含め、すべてのデバイス プラットフォームをカバーするよう条件付きアクセスのポリシーを構成ください。</p><p>以下に例を挙げます。ここに 2 つのポリシーが存在しているとします。</p><ol><li>Windows を対象とし、Hybird Azure AD Join を強制するポリシー</li><li>Android, iOS, Windows Phone, macOS を対象とし、準拠しているとしてマーク済みであることを強制するポリシー</li></ol><img src="/blog/azure-active-directory/qanda-conditional-access/CA3.png"><p>一見問題なく見えますが、仮に User Agent 文字列が不正 (意図的に値が変更されているか、通常ではありえない値) となっているリクエストを受信すると、上記二つのポリシーは適用されず、ユーザーにはアクセスが許可されます。</p><p>不明なデバイスプラットフォームもカバーする形でポリシーを定義するには以下のようにします。</p><ul><li>新しいポリシーを作り、すべてのクラウド アプリを対象とする (ユーザーについてはまずは一部のみ選択して、問題なければその後すべてのユーザーに適用する)</li><li>デバイス プラットフォームの条件を以下のように構成する<br>(全てのデバイス プラットフォーム) - (Android, iOS, WP, Windows, macOS) = 不明なデバイス プラットフォーム</li></ul><img src="/blog/azure-active-directory/qanda-conditional-access/CA4.png"><ul><li>強制したいアクセス制御を選択する (まずは多要素認証かブロックを選択する)</li></ul><p>不正に値が設定された User Agent の例では、上記のようにすることで、デバイス プラットフォームが判別されなくても、最低一つのアクセス制御が適用されるようにできます。加えて、このように構成することでサインインの監視ができるようになり、必要があれば、正規のユーザーを条件付きアクセスの除外対象にするということも可能となります。</p><hr><p><span style="color:blue">Q</span>. Azure AD Application Proxy を利用して公開しているアプリケーションなども条件付きアクセスで制御可能でしょうか。</p><p><span style="color:red">A</span>. はい、条件付きアクセスで制御可能です。Azure AD 上に登録されているアプリケーションであれば、条件付きアクセスで制御できます。Azure AD Application Proxy を利用して公開しているアプリケーションやご自身で開発し Azure AD 上に登録したアプリケーションも制御対象とすることが可能です。</p><hr><p><span style="color:blue">Q</span>. Azure AD B2B コラボレーション機能により招待されたゲスト ユーザーに対して条件付きアクセスのルールを適用する場合には、Azure AD Premium のライセンスを購入する必要があるのでしょうか。</p><p><span style="color:red">A</span>. いいえ、テナントに割り当てられている Azure AD Premium ライセンス数の 5 倍までのアカウントであれば、ゲスト ユーザーに対して条件付きアクセスを含む Azure AD Premium の機能を利用させることが可能です。詳細は下記公開情報を参照ください。</p><p>Azure Active Directory B2B コラボレーションのライセンスに関するガイダンス</p><p><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/active-directory-b2b-licensing" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/active-directory-b2b-licensing</a></p><hr><p><span style="color:blue">Q</span>. Azure AD Premium のライセンスを対象人数分購入すれば、該当ユーザーに割り当てる必要はないでしょうか。</p><p><span style="color:red">A</span>. いいえ、要件として人数分購入いただくだけでなく、ユーザーに対して割り当てる必要がございます。</p><hr><p><span style="color:blue">Q</span>. 条件付きアクセスを利用するためには、Azure AD Premium のライセンス数を何個購入すればよいでしょうか？</p><p><span style="color:red">A</span>. 条件付きアクセスの機能を利用してアプリケーションへのアクセス可否の評価が行われるユーザーに対して、Azure AD Premium (P1 以上) を割り当てる必要があります。現時点の実装では、Azure AD Premium ライセンスを割り当てていないユーザーであっても、ポリシーの対象であれば条件付きアクセス ポリシーの内容に従ってアクセス制限が行われますが、このような状態での利用はライセンス違反となります。</p><hr><p><span style="color:blue">Q</span>. 条件付きアクセスの [場所] の条件にクライアントの IP アドレス範囲を入れましたが制御されません。どうしてでしょうか？</p><p><span style="color:red">A</span>. 条件付きアクセスの [場所] の条件では、組織が外部と通信する際のグローバル IP アドレス (Azure AD から見た送信元グローバル IP アドレス) を利用します。例えば、社内のクライアントがプライベート IP アドレスを保持しており、外部ネットワークと通信する際にはグローバル IP アドレスを持つゲートウェイを経由して Azure AD と通信する環境があるとします。この場合、Azure AD から見ると、送信元 IP アドレスはグローバル IP アドレスを持つゲートウェイとなります。このような時は、件付きアクセスの [場所] の条件には、ゲートウェイのグローバル IP アドレスを指定ください。</p><hr><p><span style="color:blue">Q</span>. 条件付きアクセスで、X-Forwarded-For HTTP ヘッダーを利用して、組織内のクライアントの送信元 IP アドレスを判断可能ですか？</p><p><span style="color:red">A</span>. いいえ、X-Forwarded-For HTTP ヘッダーを使用し、条件付きアクセスで組織内のクライアントの送信元 IP アドレスを判定することはできません。条件付きアクセスの [場所] の条件では、組織が外部と通信する際のゲートウェイが持つグローバル IP アドレス (Azure AD から見た送信元グローバル IP アドレス) が制御に利用されます。Azure AD には、このグローバル アドレスを場所として利用します。</p><p>X-Forwarded-For HTTP ヘッダーは HTTP ヘッダー フィールドの 1 つです。ロード バランサーなどでクライアントの送信元 IP アドレスが変換された場合でも、HTTP ヘッダーに接続元のクライアント IP アドレスの情報を付加することで、接続先サーバーが接続元クライアント IP アドレスを特定できるようにするために利用されます。しかしながら、この X-Forwarded-For HTTP ヘッダーで指定された情報は組織内の IP アドレスであり、場所を示すものではありません。このような理由から、現状 Azure AD では、組織が外部と通信する際のゲートウェイのグローバル IP アドレス (Azure AD から見た送信元グローバル IP アドレス) を制御に利用しています。</p><hr><p><span style="color:blue">Q</span>. クレームルールと条件付きアクセスは併用は可能ですか？</p><p><span style="color:red">A</span>. はい、技術的には可能です。AD FS を利用したフェデレーション環境であれば、クレーム ルールが判定された後、条件付きアクセスが動作します。クレーム ルールで認証が拒否された場合は、その後の条件付きアクセスの処理は動作しません。ただし、類似機能であるため運用の複雑さなどを考慮すると、どちらか一方の機能をメインでご利用いただくのがよいかと存じます。</p><hr><p><span style="color:blue">Q</span>. 条件付きアクセスの設定において、全てユーザーがアクセスできない設定になってしまいました。設定を解除可能でしょうか。</p><p><span style="color:red">A</span>. このような状況の場合は、残念ながらお客様側での解除はできません。そのため、設定の解除をご希望の場合は、お手数ですが弊社サポート サービスをご利用いただけますと幸いです。Azure ポータルにもアクセスができない状況と存じますので、ほかにお持ちのテナントからお問い合わせを発行ください。<br>サポート サービスをご利用いただくには、Azure ポータル上から、Azure Active Directory を選択し、[新しいサポート要求] を選択ください。以下のような画面からお問い合わせいただければと思います。</p><img src="/blog/azure-active-directory/qanda-conditional-access/create-support-ticket-1.png"><img src="/blog/azure-active-directory/qanda-conditional-access/create-support-ticket-2.png"><p>上記内容が少しでもお客様の参考となりますと幸いです。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本記事は Technet Blog の更新停止に伴い &lt;a href=&quot;https://blogs.technet.microsoft.com/jpazureid/2017/12/04/conditional-access-qa/&quot; target=
      
    
    </summary>
    
    
    
      <category term="Conditional Access" scheme="https://jpazureid.github.io/blog/tags/Conditional-Access/"/>
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Graph API を利用して Azure AD のサインイン アクティビティ レポートをファイルに出力する PowerShell スクリプト</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/microsoft-graph-api-signin-activity-reports/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/microsoft-graph-api-signin-activity-reports/</id>
    <published>2019-05-22T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.405Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は Technet Blog の更新停止に伴い <a href="https://blogs.technet.microsoft.com/jpazureid/2018/08/09/microsoft-graph-api-signin-activity-reports/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2018/08/09/microsoft-graph-api-signin-activity-reports/</a> の内容を移行したものです。<br>元の記事の最新の更新情報については、本内容をご参照ください。</p></blockquote><blockquote><p>2019/05/22: サインインアクティビティレポートを取得するための Graph API エンドポイントが beta から v1.0 に移動したため、サンプルコードの一部を変更しました。また、アプリ登録の手順も変更されたため併せて記載内容を変更しています。</p></blockquote><p>こんにちは Azure &amp; Identity サポート チームの 姚 ヨウ です。</p><p>前回、Azure AD のサインイン アクティビティ レポートと監査アクティビティ レポートを Azure AD Graph API を経緯し、PowerShell で JSON 形式で取得できるスクリプトを紹介しました。</p><p>既にご存知の方もいらっしゃると思いますが、マイクロソフトとしては、Azure AD Graph API ではなく、 Microsoft Graph API の利用を推進しています。今回は、PowerShell スクリプトで Microsoft Graph API を利用して Azure AD のサインイン アクティビティ レポートを JSON 形式で取得する方法を紹介します。</p><p>今回のスクリプトは前回紹介しましたスクリプトと比較して以下の利点があります。</p><ul><li>サインイン アクティビティ レポートの内容をより詳細に JSON ファイルに格納します</li><li>アプリケーションのキーではなく証明書を利用することでセキュリティを高めています (※)</li></ul><p>※ セキュリティ観点で 平文のキーではなく証明書を用いたトークン取得を推奨しています。</p><p>以下に一連の手順を大まかに 3 つに分けて解説します。</p><p>事前に、C:\SignInReport フォルダーなど作業用のフォルダーを作成し、以下の手順にお進みください。</p><h3 id="1-認証に使用する証明書の準備"><a href="#1-認証に使用する証明書の準備" class="headerlink" title="1. 認証に使用する証明書の準備"></a>1. 認証に使用する証明書の準備</h3><p>トークン取得に証明書を用います。</p><p>これは、これまでの平文のキーを用いる方法よりもセキュリティ的に強固であり、推奨している方法です。以下の PowerShell スクリプトは、自己署名証明書を生成し、ユーザーの証明書ストア (個人) に格納します。さらに、公開鍵を含む証明書 (SelfSignedCert.cer ファイル) をカレント  ディレクトリに出力します。</p><p>エディターを開き、下記内容をコピーして貼り付けください。そのファイルを CreateAndExportCert.ps1 として C:\SignInReport フォルダー配下に保存します。</p><p>保存したら、このスクリプトを実行ください。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Create self signed certificate</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="variable">$cert</span> = New-SelfSignedCertificate -Subject <span class="string">"CN=SelfSignedCert"</span> -CertStoreLocation <span class="string">"Cert:\CurrentUser\My"</span>  -KeyExportPolicy Exportable -KeySpec Signature</span><br><span class="line"><span class="variable">$cert</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Export new self signed certificate as .cer file</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="variable">$cerfile</span> = <span class="string">".\SelfSignedCert.cer"</span></span><br><span class="line">Export-Certificate -Cert <span class="variable">$cert</span> -FilePath <span class="variable">$cerfile</span></span><br></pre></td></tr></table></figure><h3 id="2-処理に必要なライブラリを-nuget-で取得するスクリプトの準備と実行"><a href="#2-処理に必要なライブラリを-nuget-で取得するスクリプトの準備と実行" class="headerlink" title="2. 処理に必要なライブラリを nuget で取得するスクリプトの準備と実行"></a>2. 処理に必要なライブラリを nuget で取得するスクリプトの準備と実行</h3><p>証明書を用いたトークン取得処理はライブラリを用いて行います。処理に必要なライブラリは nuget で取得します。テキスト エディターを開き、下記内容をコピーして貼り付けください。</p><p>そのファイルを GetModuleByNuget.ps1 として C:\SignInReport フォルダー配下に保存および実行ください。本スクリプトを実行すると、C:\SignInReport 配下に Tools というフォルダーが作成され、Microsoft.IdentityModel.Clients.ActiveDirectory.dll などのファイルが保存されます。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Download NuGet.exe</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="variable">$sourceNugetExe</span> = <span class="string">"https://dist.nuget.org/win-x86-commandline/latest/nuget.exe"</span></span><br><span class="line"><span class="variable">$targetNugetExe</span> = <span class="string">".\nuget.exe"</span></span><br><span class="line"><span class="built_in">Remove-Item</span> .\Tools -Force -Recurse -ErrorAction Ignore</span><br><span class="line"><span class="built_in">Invoke-WebRequest</span> <span class="variable">$sourceNugetExe</span> -OutFile <span class="variable">$targetNugetExe</span></span><br><span class="line"><span class="built_in">Set-Alias</span> nuget <span class="variable">$targetNugetExe</span> -Scope Global -Verbose</span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Download Microsoft.IdentityModel.Clients.ActiveDirectory.dll</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line">./nuget install Microsoft.IdentityModel.Clients.ActiveDirectory -O .\Tools</span><br><span class="line">md .\Tools\Microsoft.IdentityModel.Clients.ActiveDirectory</span><br><span class="line"><span class="variable">$prtFolder</span> = <span class="built_in">Get-ChildItem</span> ./Tools | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Name <span class="nomarkup">-match</span> <span class="string">'Microsoft.IdentityModel.Clients.ActiveDirectory.'</span>&#125;</span><br><span class="line">move .\Tools\<span class="variable">$prtFolder</span>\lib\net45\*.* .\Tools\Microsoft.IdentityModel.Clients.ActiveDirectory</span><br><span class="line"><span class="built_in">Remove-Item</span> .\Tools\<span class="variable">$prtFolder</span> -Force -Recurse</span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Remove NuGet.exe</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="built_in">Remove-Item</span> nuget.exe</span><br></pre></td></tr></table></figure><h3 id="3-サインイン-ログを取得するスクリプトの準備"><a href="#3-サインイン-ログを取得するスクリプトの準備" class="headerlink" title="3. サインイン ログを取得するスクリプトの準備"></a>3. サインイン ログを取得するスクリプトの準備</h3><p>1 および 2 の手順を実行し、証明書および実行に必要なライブラリの準備が整いましたら、以下の手順で、アプリケーションおよびスクリプトを準備します。</p><p>まず、以下の手順に沿って、アプリケーションを登録します。</p><ol><li>Azure ポータルに、全体管理者の権限を持つアカウントでサインインします。</li><li>Azure Active Directory のブレードを選択します。</li><li>[App registrations] を選択します。</li><li>[+ 新規登録] を選択します。</li><li>表示名と、アカウントの種類を入力して、[登録] を選択します。</li><li>アプリが作成されたら [API のアクセス許可] を選択します。</li><li>API のアクセス許可の画面で、[+ アクセス許可の追加] を選択します。</li><li>[Microsoft Graph] を選択し[アプリケーションの許可] を選択します。</li><li>AuditLog.Read.All と Directory.Read.All にチェックをつけます。</li><li>[アクセス許可の追加] を選択します。</li><li>[<tenant> に管理者の同意を与えます] をクリックし [はい] を選択します。</tenant></li></ol><p>今回はアプリケーションの認証に証明書を利用します。<br>証明書を利用した認証は、アプリケーションのクライアント シークレットを利用する認証に比べ、より安全であり推奨される方法です。</p><p>ここで、このブログ記事の “1. 認証に使用する証明書の準備” の手順を実行した結果作成される SelfSignedCert.cer を以下の手順で Azure AD にアップロードします。</p><ol><li>Azure ポータルに、アプリケーションを登録したアカウントでサインインします。</li><li>Azure Active Directory のブレードを選択します。</li><li>[App registrations] を選択します。</li><li>上記手順で登録したアプリを選択します。</li><li>[証明書とシークレット] を選択します。</li><li>[証明書のアップロード] を選択し、SelfSignedCert.cer をアップロードします。</li></ol><p>アプリケーションの登録、証明書の登録が完了しましたら、テキスト エディターを開き、次の中身をコピーして貼り付け、環境に合わせて冒頭部分の内容を設定します。</p><p>設定が完了しましたら、 GetSignInLogs.ps1 ファイルとして C:\SignInReport 配下に保存し、実行します。これによりサインイン アクティビティ レポートを JSON ファイルとして取得できます。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Add-Type</span> -Path <span class="string">".\Tools\Microsoft.IdentityModel.Clients.ActiveDirectory\Microsoft.IdentityModel.Clients.ActiveDirectory.dll"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Authorization &amp; resource Url</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$tenantId</span> = <span class="string">"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"</span> </span><br><span class="line"><span class="variable">$resource</span> = <span class="string">"https://graph.microsoft.com"</span> </span><br><span class="line"><span class="variable">$clientID</span> = <span class="string">"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"</span></span><br><span class="line"><span class="variable">$thumprint</span> = <span class="string">"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"</span></span><br><span class="line"><span class="variable">$outfile</span> = <span class="string">"output.json"</span></span><br><span class="line"><span class="variable">$data</span> = @()</span><br><span class="line"></span><br><span class="line"><span class="comment"># tenantID は [Azure Active Directory] - [プロパティ] よりディレクトリ ID を取得します。</span></span><br><span class="line"><span class="comment"># clientID は "Azure AD Reporting API にアクセスするための前提条件" の "アプリケーションのクライアント ID を取得する" の手順で取得します。</span></span><br><span class="line"><span class="comment"># thumbprint は公開キーのアップロードを実行後の "キー" のページで "公開鍵" にサムプリントとして表示されている情報です。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Authorization &amp; resource Url</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$authUrl</span> = <span class="string">"https://login.microsoftonline.com/<span class="variable">$tenantId</span>/"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Get certificate</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$cert</span> = <span class="built_in">Get-ChildItem</span> -path cert:\CurrentUser\My | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Thumbprint <span class="nomarkup">-eq</span> <span class="variable">$thumprint</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Create AuthenticationContext for acquiring token </span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="variable">$authContext</span> = <span class="built_in">New-Object</span> Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext <span class="variable">$authUrl</span>, <span class="literal">$false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Create credential for client application </span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$clientCred</span> = <span class="built_in">New-Object</span> Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate <span class="variable">$clientID</span>, <span class="variable">$cert</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Acquire the authentication result</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="variable">$authResult</span> = <span class="variable">$authContext</span>.AcquireTokenAsync(<span class="variable">$resource</span>, <span class="variable">$clientCred</span>).Result </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">$null</span> <span class="nomarkup">-ne</span> <span class="variable">$authResult</span>.AccessToken) &#123;</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Compose the access token type and access token for authorization header</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="variable">$headerParams</span> = @&#123;<span class="string">'Authorization'</span> = <span class="string">"$(<span class="variable">$authResult</span>.AccessTokenType) $(<span class="variable">$authResult</span>.AccessToken)"</span>&#125;</span><br><span class="line">    <span class="variable">$url</span> = <span class="string">"<span class="variable">$resource</span>/v1.0/auditLogs/signIns"</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Write-Output</span> <span class="string">"Fetching data using Uri: <span class="variable">$url</span>"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Do</span> &#123;</span><br><span class="line">        <span class="variable">$myReport</span> = (<span class="built_in">Invoke-WebRequest</span> -UseBasicParsing -Headers <span class="variable">$headerParams</span> -Uri <span class="variable">$url</span>)</span><br><span class="line">        <span class="variable">$myReportValue</span> = (<span class="variable">$myReport</span>.Content | <span class="built_in">ConvertFrom-Json</span>).value</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> <span class="nomarkup">-lt</span> <span class="variable">$myReportValue</span>.Count; <span class="variable">$j</span>++) &#123;</span><br><span class="line">            <span class="variable">$data</span> += <span class="variable">$myReportValue</span>[<span class="variable">$j</span>]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># Get url from next link</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="variable">$url</span> = (<span class="variable">$myReport</span>.Content | <span class="built_in">ConvertFrom-Json</span>).<span class="string">'@odata.nextLink'</span></span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="literal">$null</span> <span class="nomarkup">-ne</span> <span class="variable">$url</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">"ERROR: No Access Token"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> | <span class="built_in">ConvertTo-Json</span> | <span class="built_in">Out-File</span> -FilePath <span class="variable">$outfile</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">"Sign-in log is exported to <span class="variable">$outfile</span>"</span></span><br></pre></td></tr></table></figure><p>このスクリプトで取得できるサインイン アクティビティ レポートをさらに詳細にフィルターしたい場合、以下の公開情報を参照いただければと思います。</p><p>signIn resource type<br><a href="https://docs.microsoft.com/en-us/graph/api/resources/signin?view=graph-rest-1.0" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/graph/api/resources/signin?view=graph-rest-1.0</a></p><p>次回は監査アクティビティ レポートの取得方法を紹介いたします。このブログの情報がお客様の検証や運用のお役に少しでもお役に立てばと思います。</p><p>製品動作に関する正式な見解や回答については、お客様環境などを十分に把握したうえでサポート部門より提供させていただきますので、ぜひ弊社サポート サービスをご利用ください。</p><blockquote><p>本情報の内容（添付文書、リンク先などを含む）は、作成日時点でのものであり、予告なく変更される場合があります。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本記事は Technet Blog の更新停止に伴い &lt;a href=&quot;https://blogs.technet.microsoft.com/jpazureid/2018/08/09/microsoft-graph-api-signin-acti
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="graph api" scheme="https://jpazureid.github.io/blog/tags/graph-api/"/>
    
      <category term="signin log" scheme="https://jpazureid.github.io/blog/tags/signin-log/"/>
    
  </entry>
  
  <entry>
    <title>マネージド ドメイン用(AD FS なし) Hybrid Azure AD Join を一から構成する</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/</id>
    <published>2019-05-08T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.369Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、 Azure Identity の山口です。<br>今回は AD FS を利用しないマネージド ドメイン環境における Hybrid Azure AD Join の構成手順をご紹介します。</p><h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>AD FS を利用しないマネージド ドメイン環境の Hybrid Azure AD Join の環境構築手順は、下記公開情報にあります。</p><p>チュートリアル:マネージド ドメイン用のハイブリッド Azure Active Directory 参加の構成<br>URL:<a href="https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-managed-domains" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/devices/hybrid-azuread-join-managed-domains</a></p><p>本 Blog では、 Azure AD にオンプレミス AD のデバイスが登録される仕組みを含め、一から Hybrid Azure AD Join を構成するまでの流れを画面ショット付きで解説します。</p><h2 id="本-Blog-を作成するために利用した環境について"><a href="#本-Blog-を作成するために利用した環境について" class="headerlink" title="本 Blog を作成するために利用した環境について"></a>本 Blog を作成するために利用した環境について</h2><ol><li>Azure AD テナント</li><li>オンプレミス AD on Windows Server 2019 Datacenter</li><li>Azure AD Connect(1.3.20.0) on Windows Server 2019 Datacenter</li><li><ol start="4"><li>Windows 10 (1809)<br>※ Hybrid Azure AD Join を構成するためのオンプレミス AD 及び Azure AD Connect のサーバー OS は Windows Server 2012 R2 以降であれば可能です。</li></ol></li></ol><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ol><li>Azure AD へのカスタム ドメイン登録</li><li>Azure AD Connect の設定</li><li>SCP とは、 SCP の構成の確認</li><li>Hybrid Azure AD Join 構成までの流れ</li><li>userCertificate 属性について</li><li>Azure AD へのデバイス同期の確認</li><li>PRT (Primary Refresh Token) の取得</li><li>おわりに</li></ol><h2 id="Azure-AD-へのカスタムドメイン登録"><a href="#Azure-AD-へのカスタムドメイン登録" class="headerlink" title="Azure AD へのカスタムドメイン登録"></a>Azure AD へのカスタムドメイン登録</h2><p>詳細については後述しますが、 Hybrid Azure AD Join の処理では、各クライアントがオンプレミス AD に登録された SCP (サービス接続ポイント) を参照し、デバイスの登録処理を行います。SCP には、オンプレミス AD が利用しているインターネット ルーティング可能な (外部 DNS から名前が引ける) ドメインを Azure AD に登録する必要があります。もしもオンプレミス AD のドメイン名が xxxxx.local などインターネット ルーティングができない名前の場合には、オンプレミス AD で代替 UPN サフィックスの登録作業を事前に実施しておきます。</p><h3 id="代替-UPN-サフィックス登録の手順について"><a href="#代替-UPN-サフィックス登録の手順について" class="headerlink" title="代替 UPN サフィックス登録の手順について"></a>代替 UPN サフィックス登録の手順について</h3><p>オンプレミス AD に管理者アカウントにてサインイン後、[スタート] → [Windows 管理ツール] → [Active Directory ドメインと信頼関係] の順に選択します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/001.jpg"><p>Active Directory ドメインと信頼関係の画面より、[Active Directory ドメインと信頼関係] を右クリックし、「プロパティ」を選択します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/002.jpg"><p>UPN サフィックス画面より、代わりの UPN サフィックスの欄に、代替 UPN サフィックス名を入力後、「追加」をクリックし、「OK」ボタンをクリックします。<br>「OK」ボタンをクリック後、 Active Directory ドメインと信頼関係の画面を「x」ボタンをクリックし、閉じます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/003.jpg"><p>[スタート] → [Windows 管理ツール] → [Active Directory ユーザーとコンピューター] の順に選択します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/004.jpg"><p>[ドメイン名] → [Users] → [代替 UPN サフィックスを設定するユーザー] の順に選択し、対象のユーザーを選択した状態で、右クリックより「プロパティ」を選択します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/005.jpg"><p>選択したユーザーのプロパティ画面より、「アカウント」タブを選択後、ユーザー ログオン名のドメイン名のプルダウン メニューより、上記手順で作成した「代替 UPN サフィックス」を選択し、「OK」ボタンをクリックします。<br>「OK」ボタンをクリック後、 Active Directory ユーザーとコンピューターの画面を「x」ボタンをクリックし、閉じます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/006.jpg"><p>また、複数のユーザーの代替 UPN サフィックスを変更する場合は、変更対象のユーザーを複数選択した状態にて、右クリックより「プロパティ」を選択します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/007.jpg"><p>複数の項目のプロパティ画面より、「アカウント」タブをクリックし、UPN サフィックスのプルダウン メニューより、上記手順で作成した「代替 UPN サフィックス」を選択し、「OK」ボタンをクリックします。<br>「OK」ボタンをクリック後、 Active Directory ユーザーとコンピューターの画面を「x」ボタンをクリックし、閉じます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/008.jpg"><p>Azure AD へのカスタム ドメイン登録の具体的な手順は下記のとおりです。</p><p>カスタム ドメイン名より「＋カスタム ドメインの追加」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/009.jpg"><p>オンプレミス AD 上に登録されているドメインのうち、 Hybrid Azure AD Join を構成するドメイン名を入力し、「ドメインの追加」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/010.jpg"><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/011.jpg"><p>ドメインの追加をクリックすると、 DNS サーバーに TXT レコードを登録するように指示されますので、お使いの DNS サーバーに記載されている TXT レコードを追加します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/012.jpg"><p>追加後に、 DNS が浸透するまで待ち、「確認」ボタンをクリックします。<br>無事浸透が完了し、 Azure AD 側で対象ドメインが認識できるようになると、下記のとおり状態が「確認済み」となります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/013.jpg"><h2 id="Azure-AD-Connect-の設定"><a href="#Azure-AD-Connect-の設定" class="headerlink" title="Azure AD Connect の設定"></a>Azure AD Connect の設定</h2><p><a href="https://www.microsoft.com/en-us/download/details.aspx?id=47594" target="_blank" rel="noopener">https://www.microsoft.com/en-us/download/details.aspx?id=47594</a> より Azure AD Connect をダウンロードした後のウィザード実行について画面ショット付きで手順を記載します。</p><p>Azure AD Connect を起動し、「構成」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/014.jpg"><p>追加のタスクより、「デバイス オプションの構成」を選択し「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/015.jpg"><p>Windows Server 2012 R2 以上であれば、 Hybrid Azure AD Join を構成できます。そのまま「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/016.jpg"><p>Azure AD に接続画面で、 Azure AD の対象テナントの全体管理者の資格情報を入力し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/017.jpg"><p>デバイス オプションより、「ハイブリッド Azure AD 参加の構成」を選択し「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/018.jpg"><p>デバイスのオペレーティング システムの画面より、「Windows 10 以降のドメインに参加しているデバイス。」を選択し「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/019.jpg"><p>SCP の構成画面にて SCP (サービス接続ポイント) を構成します。<br>SCP はフォレスト単位ごとで構成する必要があります、今回は対象のオンプレミス AD のフォレストは 1 つしかないので、対象のフォレストにチェックをいれます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/020.jpg"><p>認証サービスに「Azure Active Directory」を選択します。<br>AD FS を構成している場合はフェデレーション サービス名を指定する必要がありますが、今回は AD FS 環境がない Managed Domain 環境なので、 Azure Active Directory を選択します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/021.jpg"><p>エンタープライズ管理者の横の「追加」ボタンをクリックし、対象フォレストのエンタープライズ管理者の資格情報を入力し、「OK」ボタンをクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/022.jpg"><p>すべての情報が入力されていることを確認し、「次へ」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/023.jpg"><p>構成の準備完了の画面で「構成」をクリックし、対象フォレスト向けの SCP を構成します。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/024.jpg"><p>構成が完了しましたの画面にて、「終了」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/025.jpg"><h2 id="SCP-とは-SCP-の構成の確認"><a href="#SCP-とは-SCP-の構成の確認" class="headerlink" title="SCP とは (SCP の構成の確認)"></a>SCP とは (SCP の構成の確認)</h2><p>そもそも SCP (サービス接続ポイント) とは何なんなのでしょうか。<br>端的にいうと、 SCP はオンプレミス AD に登録している Windows 10 コンピューターなどのデバイスが、 Azure AD のテナントがどこにあるのかを探すために必要な参照先になります。</p><p>今回、 構成例として、 「xxx.work」 というフォレストに関する SCP を構成しました。<br>そして、 Azure AD のテナント名は、「xxx.onmicrosoft.com」というテナント名になります。<br>オンプレミス AD 上にある xxx.work というフォレスト内にあるデバイスが 、 <strong>どの Azure AD のテナントに</strong> デバイスを登録すればいいのか、分かる必要があります。<br>逆にいうと、 SCP が正しく構成されていないと、 Azure AD にデバイスを登録することができず、 Hybrid Azure AD Join (正確には Azure AD Join) に失敗してしまいます。</p><p>ちなみに SCP の実態は</p><ul><li><code>N=62a0ff2e-97b9-4513-943f-0d221bd30080,CN=Device Registration Configuration,CN=Services,[Your Configuration Naming Context]</code></li></ul><p>という形で格納されています。下記手順で確認が可能です。<br>ADSI エディターを起動し「接続」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/026.jpg"><p>接続ポイントとして、「識別名または名前付けコンテキストを選択または入力する」を選択し、CN=Configuration,DC=fabrikam,DC=com (ドメイン名が fabrikan.com である場合) 左記のように設定し「OK」ボタンをクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/027.jpg"><p>[CN=Services]→[CN=Device Registration Configuration] の中にある「CN=62a0ff2e-97b9-4513-943f-0d221bd30080」が SCP オブジェクトの実態になります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/028.jpg"><p>また、 Azure AD Connect で構成した SCP が正しく構成されているかについては、以下のコマンドレットで確認することができます。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scp</span> = <span class="built_in">New-Object</span> System.DirectoryServices.DirectoryEntry;</span><br><span class="line"><span class="variable">$scp</span>.Path = <span class="string">"LDAP://CN=62a0ff2e-97b9-4513-943f-0d221bd30080,CN=Device Registration Configuration,CN=Services,CN=Configuration,DC=xxx,DC=work"</span>;</span><br><span class="line"><span class="variable">$scp</span>.Keywords;</span><br></pre></td></tr></table></figure><p>※ドメイン名は適宜実環境に置き換えて実行してください。</p><p>実行結果は下記のとおりとなります。<br>正しく、デバイス登録先の Azure AD のテナント名となっていることが確認できます。<br>AzureADId は、 Azure ポータルの「プロパティ」画面で確認できる、「ディレクトリ ID」となります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/029.jpg"><h2 id="Hybrid-Azure-AD-Join-構成までの流れ"><a href="#Hybrid-Azure-AD-Join-構成までの流れ" class="headerlink" title="Hybrid Azure AD Join 構成までの流れ"></a>Hybrid Azure AD Join 構成までの流れ</h2><p>まずは、オンプレミス AD に Windows 10 コンピューターが登録されてから、 Azure AD から PRT (Primary Refresh Token) を取得し、 Azure AD に連携した Office 365 などのアプリケーションにシングル サインオンできるまでの流れを記します。</p><ol><li><p>Windows 10 コンピューターを、オンプレミス AD に参加します。</p></li><li><p>オンプレミス AD 上のコンピューター オブジェクトの userCertificate 属性に Windows 10 コンピューターを認証するための証明書が当該コンピューターにより、追加されます。</p></li><li><p>オンプレミス AD 上のコンピューター オブジェクトの userCertificate 属性値に証明書が追加されると、Azure AD Connect がコンピューター オブジェクトを Azure AD に同期します。 (通常は 30 分間隔)</p></li><li><p>当該コンピューター上のタスク スケジューラにより証明書を使用して、 Azure Active Directory 上にデバイスが登録します。<br>(このタイミングで  dsregcmd /status のコマンドレットをたたくと AzureADJoined の値が YES になります)</p></li><li><p>オンプレミス AD と Azure AD 間で同期しているユーザーで当該の Windows 10 コンピューターにサインインしたとき、Azure AD による認証後、サインインしたユーザーの PRT (Primary Refresh Token) が発行され、Hybrid Azure AD Join として Azure AD (Office 365) にサインインできます。<br>(このタイミングで dsregcmd /status のコマンドレットをたたくと AzureADPrt の値が YES になります)</p></li></ol><h2 id="userCertificate-属性について"><a href="#userCertificate-属性について" class="headerlink" title="userCertificate 属性について"></a>userCertificate 属性について</h2><p>userCertificate 属性に証明書が設定されるまでのプロセスは以下のとおりです。</p><ol><li>まず、自己署名ユーザー証明書を持つコンピューターオブジェクトのみが Azure AD と同期されます。つまり userCertificare 属性に証明書セットされている Windows 10 コンピューターのみが、 Azure AD と同期されます。</li><li>動作としては、ユーザー証明書の生成プロセスを管理する、スケジュールされたタスクがあります。タスクが開始されると、プロセスは Azure AD Connect で構成した、 SCP を確認します。</li><li>デバイスは SCP を検出し、 Hybrid Azure AD Join (正確には Azure AD Join) を試みます。</li><li>デバイスは、Azure デバイス登録サービス (DRS) を確認して、参加できるかどうかを確認します。</li><li>成功した場合、ユーザー証明書が生成され、オンプレミスの AD に userCertificate 属性が設定されます。</li></ol><p>userCertificate 属性が設定されているかは、オンプレミス AD で Active Directory ユーザーとコンピューターの MMC スナップインで対象のコンピューター オブジェクトのプロパティを開き、[属性エディター] タブ内の「userCertificate」属性を確認します。</p><p>なお、属性エディター タブは、既定のプロパティ画面では表示されないので、「Active Directory ユーザーとコンピューター」より、[表示] → [拡張機能]をクリックし、拡張機能を有効にした状態の後、コンピューターのプロパティ画面を開くことで、確認することが可能となります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/030.jpg"><p>下記は証明書が追加されていない状態。(この状態では Azure AD Connect によるデバイス同期は行われません)</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/031.jpg"><p>下記は証明書が追加されている状態。(この状態で Azure AD Connect は 30 分間隔でチェックを行い、 Azure AD にデバイスが登録されます)<br>Start-ADSyncSyncCycle -PolicyType Delta コマンドレットで手動同期することも可能です。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/032.jpg"><p>下記は証明書の実態 (一部) です。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/033.jpg"><p> Azure AD Connect の同期ルールを見てみると、 userCertificate 属性が ISNOTNULL (証明書がセットされていることが必須) であることが分かります。<br>[Synchronization Rules Editor] から Direction を「Outbound」を選択し、[Out to AAD - Device Join SOAInAD]を選択後に「View」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/034.jpg"><p>Scoping Filter をクリックすると、 userCertificate が ISNOTNULL であることがわかります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/035.jpg"><h2 id="Azure-AD-へのデバイス同期の確認"><a href="#Azure-AD-へのデバイス同期の確認" class="headerlink" title="Azure AD へのデバイス同期の確認"></a>Azure AD へのデバイス同期の確認</h2><p>直接 Azure ポータル (portal.azure.com ) の「デバイス」を参照することで、対象の Windows 10 コンピューターが同期されているか確認できますが、下記手順では、 Azure AD Connect を使い、実際に同期が行われているかどうかについて確認を行います。<br>Azure AD Connect の「Synchronization Service」にて確認を行います。</p><p>「Windows アイコン」→「Synchronization Service」の順に選択すると、「Synchronization Service Manager」が起動します。<br>Start Time を見ると、19:51 の次に 20:21 に実行されておりますので、 30 分間隔で同期が行われていることが分かります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/036.jpg"><p>20 : 21 の Export の Adds がデバイスが追加されたことを意味しますので、選択後、「Properties」をクリックします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/037.jpg"><p>すると、 userCertificate を含む、 Windows 10 コンピューターの属性が、 Azure AD に同期されていることが確認できます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/038.jpg"><p>このタイミングで、 Windows 10 コンピューター上のコマンド プロンプトで dsregcmd /status のコマンドレットをたたくと下記のとおり、 AzureADJoined の値が 「YES」 になっていることが分かります。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/039.jpg"><h2 id="PRT-Primary-Refresh-Token-の取得"><a href="#PRT-Primary-Refresh-Token-の取得" class="headerlink" title="PRT (Primary Refresh Token) の取得"></a>PRT (Primary Refresh Token) の取得</h2><p>現在、目次の「1. ～ 6.」までの作業が完了しています。<br>Azure AD にデバイスは登録されましたが、まだ Hybrid Azure AD Join の構成は完了してません。<br>最後の工程として、 Azure AD に同期済みの Azure AD ユーザーにて、対象の Windows 10 コンピューターにサインインし認証が成功したあとに、 Azure AD から PRT (Primary Refresh Token) を取得する必要があります。</p><p>オンプレミス AD から Azure AD に同期済みの test001 から test003 のユーザーがいますので、対象の Windows 10 コンピューターに <a href="mailto:test001@xxx.work" target="_blank" rel="noopener">test001@xxx.work</a> ユーザーでサインインします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/040.jpg"><p>資格情報を入力し、サインインします。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/041.jpg"><p>コマンドプロンプトを起動し、このタイミングで dsregcmd /status のコマンドレットをたたくと AzureADPrt の値が YES になることが確認できます。</p><img src="/blog/azure-active-directory/how-to-create-hybridazureadjoin-managed/042.jpg"><h2 id="おわりに"><a href="#おわりに" class="headerlink" title="おわりに"></a>おわりに</h2><p>Azure AD Connect を使うことで、比較的容易に Hybrid Azure AD Join の構成を行うことができるようになっています。反面、容易に構成できるようになったがために、構成がうまくいかなかった場合に、どこを確認すれば良いかが判断が難しくなっているかと思います。</p><p>本 Blog で言及しましたとおり、 以下のポイントをおさえることで、構成が失敗してしまった場合のトラブルシュートをスムースに行えるのではないかと思います。</p><ul><li>SCP の構成が正しく行われているか</li><li>Hybrid Azure AD Join する Windows 10 コンピューターにて、 userCertificate 属性に証明書が追加されているかどうか</li><li>Azure AD Connect により、正常に同期が行われているかどうか</li><li>PRT が正しく取得できているかどうか</li></ul><p>少しでも本 Blog が参考になれば幸いです。ご不明な点等ございましたら、是非弊社サポート サービスをご利用ください。</p><p>※本情報の内容 (リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、 Azure Identity の山口です。&lt;br&gt;今回は AD FS を利用しないマネージド ドメイン環境における Hybrid Azure AD Join の構成手順をご紹介します。&lt;/p&gt;
&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; cla
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
      <category term="Hybrid Azure AD Join" scheme="https://jpazureid.github.io/blog/tags/Hybrid-Azure-AD-Join/"/>
    
      <category term="Azure AD Connect" scheme="https://jpazureid.github.io/blog/tags/Azure-AD-Connect/"/>
    
      <category term="Managed Domain" scheme="https://jpazureid.github.io/blog/tags/Managed-Domain/"/>
    
  </entry>
  
  <entry>
    <title>入れ子 (ネスト) グループへの権限付与について</title>
    <link href="https://jpazureid.github.io/blog/azure-active-directory/nesting-group/"/>
    <id>https://jpazureid.github.io/blog/azure-active-directory/nesting-group/</id>
    <published>2019-02-05T15:00:00.000Z</published>
    <updated>2020-03-05T03:14:38.409Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は Technet Blog の更新停止に伴い <a href="https://blogs.technet.microsoft.com/jpazureid/2019/02/06/nesting-group/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/jpazureid/2019/02/06/nesting-group/</a> の内容を移行したものです。<br>元の記事の最新の更新情報については、本内容をご参照ください。</p></blockquote><p>こんにちは、 Azure Identity の平形です。<br>今回は Azure AD における入れ子 (ネスト) グループの対応状況についてお伝え致します。</p><h3 id="入れ子のグループとは"><a href="#入れ子のグループとは" class="headerlink" title="入れ子のグループとは"></a>入れ子のグループとは</h3><p>そもそも入れ子のグループとは、グループの中にグループを所属させているグループを指します。<br>以下の図をご覧ください。</p><img src="/blog/azure-active-directory/nesting-group/333.jpg"><p>この場合はグループ A が入れ子のグループです。<br>グループ A の中にはグループ B とユーザー B が含まれています。<br>そしてユーザー A はグループ B に含まれている状態ですが、グループ A に含まれていると考えて良いかが今回のテーマです。</p><p>例えば、アクセス権限をグループ A に割り当てた場合、ユーザー A に対してもアクセス権限が割り当てられることが期待されますが、 Azure AD の機能によっては必ずしもそうならず、いくつかの制限事項があります。<br>ここではよくお問い合わせ頂く制限事項についてご紹介します。</p><h3 id="Azure-AD-における入れ子グループの制限"><a href="#Azure-AD-における入れ子グループの制限" class="headerlink" title="Azure AD における入れ子グループの制限"></a>Azure AD における入れ子グループの制限</h3><p>主にお問い合わせ頂く機能の中で、現時点では以下の機能については入れ子グループに対応していません。</p><ul><li>グループ ベースのライセンス付与</li><li>エンタープライズ アプリケーションのユーザー・グループの割り当て</li></ul><p>上記はグループに直接所属しているユーザーにしか付与・割り当ては行われません。<br>一方、条件付きアクセスの機能でグループを条件として設定した場合、入れ子のグループにも対応しており、上の例でいえばグループ A を対象とした条件付きアクセス ポリシーは、ユーザー A も対象になります。</p><p>実際のシナリオを考えてみましょう。<br>グループ A に対して例えば Office 365 E3 のライセンスを割り当てた場合、先程の図のパターンに当てはめると以下のように表せます。</p><p>例 : グループ A に権限を割り当てた場合</p><img src="/blog/azure-active-directory/nesting-group/ssssss.jpg"><p>ユーザー A はグループ A の直属のメンバーでは無いため、グループ A にライセンスを割り当てても、配下のグループ B に所属しているユーザー A に対してはライセンスが付与されません。<br>ユーザー B はグループ A に直接参加しているため、問題なく権限が割り当てられます。<br>このシナリオは Office 365 E3 のライセンスを割り当てた場合としましたが、エンタープライズ アプリケーションの割り当ての場合にも同様の動作となります。</p><h4 id="参考情報"><a href="#参考情報" class="headerlink" title="参考情報"></a>参考情報</h4><p>Azure Active Directory のライセンス管理にグループを使用する際のシナリオ、制限、および既知の問題<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/users-groups-roles/licensing-group-advanced" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/users-groups-roles/licensing-group-advanced</a></p><p>SaaS アプリケーションへのアクセスをグループで管理する<br><a href="https://docs.microsoft.com/ja-jp/azure/active-directory/users-groups-roles/groups-saasapps" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/active-directory/users-groups-roles/groups-saasapps</a></p><h4 id="備考"><a href="#備考" class="headerlink" title="備考"></a>備考</h4><p>グループの入れ子については多くのお客様よりフィードバックをいただいており、弊社開発部門も実装を検討しています。<br><a href="https://feedback.azure.com/forums/169401-azure-active-directory/suggestions/15718164-add-support-for-nested-groups-in-azure-ad-app-acc" target="_blank" rel="noopener">https://feedback.azure.com/forums/169401-azure-active-directory/suggestions/15718164-add-support-for-nested-groups-in-azure-ad-app-acc</a></p><p>上記のフィードバックサイトは開発部門が閲覧しており、フィードバックが多い機能や要望は今後の Azure 機能拡張の参考にしています。</p><p>グループの入れ子については、階層が深い場合の処理、グループの入れ子構造がループしている場合の検出など技術的に考慮すべき部分もあって現状はサポートされていないという状況でもあるのですが、グループの入れ子に対応していないことで不便さを感じられている方は、是非上記のフィードバック サイトから投票ください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本記事は Technet Blog の更新停止に伴い &lt;a href=&quot;https://blogs.technet.microsoft.com/jpazureid/2019/02/06/nesting-group/&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
    
    
      <category term="Azure AD" scheme="https://jpazureid.github.io/blog/tags/Azure-AD/"/>
    
  </entry>
  
</feed>
